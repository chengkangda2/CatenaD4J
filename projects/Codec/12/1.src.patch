{
    "patch": [
        {
            "file_name": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
            "replaced_with": "    @Override\n    public long skip(long n) throws IOException {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative skip length\");\n        }\n",
            "patch_type": "insert",
            "next_line_no": 142
        },
        {
            "file_name": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
            "replaced_with": "        final byte[] b = new byte[512];\n        final int max = (int) Math.min(n, Integer.MAX_VALUE);\n        int total = 0;\n\n        while (total < max) {\n            int len = max - total;\n            if (len > b.length) {\n                len = b.length;\n            }\n            len = read(b, 0, len);\n            if (len == EOF) {\n                break;\n            }\n            total += len;\n        }\n",
            "patch_type": "insert",
            "next_line_no": 144
        },
        {
            "file_name": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
            "replaced_with": "        return total;\n    }\n",
            "patch_type": "insert",
            "next_line_no": 145
        }
    ]
}