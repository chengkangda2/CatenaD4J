{
    "org.apache.commons.codec.binary.Base64InputStreamTest::testCodec101": {
        "begin_line_no": 55,
        "end_line_no": 65,
        "file_path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
        "to": [
            "    public void testCodec101$catena_0() throws Exception {\n        byte[] codec101 = StringUtils.getBytesUtf8(Base64TestData.CODEC_101_MULTIPLE_OF_3);\n        ByteArrayInputStream bais = new ByteArrayInputStream(codec101);\n        Base64InputStream in = new Base64InputStream(bais);\n        byte[] result = new byte[8192];\n        int c = in.read(result);\n        assertTrue(\"Codec101: First read successful [c=\" + c + \"]\", c > 0);                                 /***** ORIGINAL ASSERTION IS HERE *****/\n\n        c = in.read(result);\n        try{ assertTrue(\"Codec101: Second read should report end-of-stream [c=\" + c + \"]\", c < 0);          }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testCodec101$catena_1() throws Exception {\n        byte[] codec101 = StringUtils.getBytesUtf8(Base64TestData.CODEC_101_MULTIPLE_OF_3);\n        ByteArrayInputStream bais = new ByteArrayInputStream(codec101);\n        Base64InputStream in = new Base64InputStream(bais);\n        byte[] result = new byte[8192];\n        int c = in.read(result);\n        try{ assertTrue(\"Codec101: First read successful [c=\" + c + \"]\", c > 0);                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        c = in.read(result);\n        assertTrue(\"Codec101: Second read should report end-of-stream [c=\" + c + \"]\", c < 0);               /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    }
}