{
    "org.apache.commons.lang.ClassUtilsTest::test_getPackageName_Class": {
        "begin_line_no": 140,
        "end_line_no": 162,
        "file_path": "src/test/org/apache/commons/lang/ClassUtilsTest.java",
        "to": [
            "    public void test_getPackageName_Class$catena_3() {\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String.class));                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"java.util\", ClassUtils.getPackageName(Map.Entry.class));                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName((Class)null));                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // LANG-535\n        assertEquals(\"java.lang\", ClassUtils.getPackageName(String[].class));                               /***** ORIGINAL ASSERTION IS HERE *****/\n\n        // Primitive Arrays\n        try{ assertEquals(\"\", ClassUtils.getPackageName(boolean[].class));                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(byte[].class));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(char[].class));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(short[].class));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(int[].class));                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(long[].class));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(float[].class));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(double[].class));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // Arrays of arrays of ...\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][].class));                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][][].class));                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][][][].class));                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void test_getPackageName_Class$catena_13() {\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String.class));                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"java.util\", ClassUtils.getPackageName(Map.Entry.class));                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName((Class)null));                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // LANG-535\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String[].class));                          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // Primitive Arrays\n        try{ assertEquals(\"\", ClassUtils.getPackageName(boolean[].class));                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(byte[].class));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(char[].class));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(short[].class));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(int[].class));                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(long[].class));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(float[].class));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(double[].class));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // Arrays of arrays of ...\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][].class));                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][][].class));                           /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][][][].class));                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void test_getPackageName_Class$catena_12() {\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String.class));                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"java.util\", ClassUtils.getPackageName(Map.Entry.class));                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName((Class)null));                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // LANG-535\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String[].class));                          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // Primitive Arrays\n        try{ assertEquals(\"\", ClassUtils.getPackageName(boolean[].class));                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(byte[].class));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(char[].class));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(short[].class));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(int[].class));                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(long[].class));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(float[].class));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(double[].class));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // Arrays of arrays of ...\n        assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][].class));                             /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][][].class));                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][][][].class));                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void test_getPackageName_Class$catena_14() {\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String.class));                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"java.util\", ClassUtils.getPackageName(Map.Entry.class));                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName((Class)null));                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // LANG-535\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String[].class));                          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // Primitive Arrays\n        try{ assertEquals(\"\", ClassUtils.getPackageName(boolean[].class));                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(byte[].class));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(char[].class));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(short[].class));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(int[].class));                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(long[].class));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(float[].class));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", ClassUtils.getPackageName(double[].class));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // Arrays of arrays of ...\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][].class));                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][][].class));                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][][][].class));                         /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    },
    "org.apache.commons.lang.ClassUtilsTest::test_getShortClassName_Class": {
        "begin_line_no": 91,
        "end_line_no": 124,
        "file_path": "src/test/org/apache/commons/lang/ClassUtilsTest.java",
        "to": [
            ""
        ]
    }
}