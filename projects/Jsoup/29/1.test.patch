{
    "org.jsoup.nodes.DocumentTest::testTitles": {
        "begin_line_no": 22,
        "end_line_no": 38,
        "file_path": "src/test/java/org/jsoup/nodes/DocumentTest.java",
        "to": [
            "    @Test public void testTitles$catena_6() {\n        Document noTitle = Jsoup.parse(\"<p>Hello</p>\");\n        Document withTitle = Jsoup.parse(\"<title>First</title><title>Ignore</title><p>Hello</p>\");\n        \n        try{ assertEquals(\"\", noTitle.title());                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        noTitle.title(\"Hello\");\n        try{ assertEquals(\"Hello\", noTitle.title());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"Hello\", noTitle.select(\"title\").first().text());                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        try{ assertEquals(\"First\", withTitle.title());                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        withTitle.title(\"Hello\");\n        try{ assertEquals(\"Hello\", withTitle.title());                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"Hello\", withTitle.select(\"title\").first().text());                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        Document normaliseTitle = Jsoup.parse(\"<title>   Hello\\nthere   \\n   now   \\n\");\n        assertEquals(\"Hello there now\", normaliseTitle.title());                                            /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    @Test public void testTitles$catena_0() {\n        Document noTitle = Jsoup.parse(\"<p>Hello</p>\");\n        Document withTitle = Jsoup.parse(\"<title>First</title><title>Ignore</title><p>Hello</p>\");\n        \n        assertEquals(\"\", noTitle.title());                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n        noTitle.title(\"Hello\");\n        try{ assertEquals(\"Hello\", noTitle.title());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"Hello\", noTitle.select(\"title\").first().text());                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        try{ assertEquals(\"First\", withTitle.title());                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        withTitle.title(\"Hello\");\n        try{ assertEquals(\"Hello\", withTitle.title());                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"Hello\", withTitle.select(\"title\").first().text());                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        Document normaliseTitle = Jsoup.parse(\"<title>   Hello\\nthere   \\n   now   \\n\");\n        try{ assertEquals(\"Hello there now\", normaliseTitle.title());                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test public void testTitles$catena_1() {\n        Document noTitle = Jsoup.parse(\"<p>Hello</p>\");\n        Document withTitle = Jsoup.parse(\"<title>First</title><title>Ignore</title><p>Hello</p>\");\n        \n        try{ assertEquals(\"\", noTitle.title());                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        noTitle.title(\"Hello\");\n        assertEquals(\"Hello\", noTitle.title());                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(\"Hello\", noTitle.select(\"title\").first().text());                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        try{ assertEquals(\"First\", withTitle.title());                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        withTitle.title(\"Hello\");\n        try{ assertEquals(\"Hello\", withTitle.title());                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"Hello\", withTitle.select(\"title\").first().text());                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        Document normaliseTitle = Jsoup.parse(\"<title>   Hello\\nthere   \\n   now   \\n\");\n        try{ assertEquals(\"Hello there now\", normaliseTitle.title());                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test public void testTitles$catena_2() {\n        Document noTitle = Jsoup.parse(\"<p>Hello</p>\");\n        Document withTitle = Jsoup.parse(\"<title>First</title><title>Ignore</title><p>Hello</p>\");\n        \n        try{ assertEquals(\"\", noTitle.title());                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        noTitle.title(\"Hello\");\n        try{ assertEquals(\"Hello\", noTitle.title());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(\"Hello\", noTitle.select(\"title\").first().text());                                      /***** ORIGINAL ASSERTION IS HERE *****/\n        \n        try{ assertEquals(\"First\", withTitle.title());                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        withTitle.title(\"Hello\");\n        try{ assertEquals(\"Hello\", withTitle.title());                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"Hello\", withTitle.select(\"title\").first().text());                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        Document normaliseTitle = Jsoup.parse(\"<title>   Hello\\nthere   \\n   now   \\n\");\n        try{ assertEquals(\"Hello there now\", normaliseTitle.title());                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test public void testTitles$catena_3() {\n        Document noTitle = Jsoup.parse(\"<p>Hello</p>\");\n        Document withTitle = Jsoup.parse(\"<title>First</title><title>Ignore</title><p>Hello</p>\");\n        \n        try{ assertEquals(\"\", noTitle.title());                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        noTitle.title(\"Hello\");\n        try{ assertEquals(\"Hello\", noTitle.title());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"Hello\", noTitle.select(\"title\").first().text());                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        assertEquals(\"First\", withTitle.title());                                                           /***** ORIGINAL ASSERTION IS HERE *****/\n        withTitle.title(\"Hello\");\n        try{ assertEquals(\"Hello\", withTitle.title());                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"Hello\", withTitle.select(\"title\").first().text());                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        Document normaliseTitle = Jsoup.parse(\"<title>   Hello\\nthere   \\n   now   \\n\");\n        try{ assertEquals(\"Hello there now\", normaliseTitle.title());                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test public void testTitles$catena_4() {\n        Document noTitle = Jsoup.parse(\"<p>Hello</p>\");\n        Document withTitle = Jsoup.parse(\"<title>First</title><title>Ignore</title><p>Hello</p>\");\n        \n        try{ assertEquals(\"\", noTitle.title());                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        noTitle.title(\"Hello\");\n        try{ assertEquals(\"Hello\", noTitle.title());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"Hello\", noTitle.select(\"title\").first().text());                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        try{ assertEquals(\"First\", withTitle.title());                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        withTitle.title(\"Hello\");\n        assertEquals(\"Hello\", withTitle.title());                                                           /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(\"Hello\", withTitle.select(\"title\").first().text());                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        Document normaliseTitle = Jsoup.parse(\"<title>   Hello\\nthere   \\n   now   \\n\");\n        try{ assertEquals(\"Hello there now\", normaliseTitle.title());                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test public void testTitles$catena_5() {\n        Document noTitle = Jsoup.parse(\"<p>Hello</p>\");\n        Document withTitle = Jsoup.parse(\"<title>First</title><title>Ignore</title><p>Hello</p>\");\n        \n        try{ assertEquals(\"\", noTitle.title());                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        noTitle.title(\"Hello\");\n        try{ assertEquals(\"Hello\", noTitle.title());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"Hello\", noTitle.select(\"title\").first().text());                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        try{ assertEquals(\"First\", withTitle.title());                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        withTitle.title(\"Hello\");\n        try{ assertEquals(\"Hello\", withTitle.title());                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(\"Hello\", withTitle.select(\"title\").first().text());                                    /***** ORIGINAL ASSERTION IS HERE *****/\n\n        Document normaliseTitle = Jsoup.parse(\"<title>   Hello\\nthere   \\n   now   \\n\");\n        try{ assertEquals(\"Hello there now\", normaliseTitle.title());                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}