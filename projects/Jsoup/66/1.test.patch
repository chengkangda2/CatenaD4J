{
    "org.jsoup.nodes.ElementTest::testNextElementSiblingAfterClone": {
        "begin_line_no": 1214,
        "end_line_no": 1237,
        "file_path": "src/test/java/org/jsoup/nodes/ElementTest.java",
        "to": [
            "\t@Test\n    public void testNextElementSiblingAfterClone$catena_4() {\n        // via https://github.com/jhy/jsoup/issues/951\n        String html = \"<!DOCTYPE html><html lang=\\\"en\\\"><head></head><body><div>Initial element</div></body></html>\";\n        String expectedText = \"New element\";\n        String cloneExpect = \"New element in clone\";\n\n        Document original = Jsoup.parse(html);\n        Document clone = original.clone();\n\n        Element originalElement = original.body().child(0);\n        try{ originalElement.after(\"<div>\" + expectedText + \"</div>\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        Element originalNextElementSibling = originalElement.nextElementSibling();\n        Element originalNextSibling = (Element) originalElement.nextSibling();\n        try{ assertEquals(expectedText, originalNextElementSibling.text());                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(expectedText, originalNextSibling.text());                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        Element cloneElement = clone.body().child(0);\n        try{ cloneElement.after(\"<div>\" + cloneExpect + \"</div>\");                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        Element cloneNextElementSibling = cloneElement.nextElementSibling();\n        Element cloneNextSibling = (Element) cloneElement.nextSibling();\n        assertEquals(cloneExpect, cloneNextElementSibling.text());                                          /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(cloneExpect, cloneNextSibling.text());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "\t@Test\n    public void testNextElementSiblingAfterClone$catena_0() {\n        // via https://github.com/jhy/jsoup/issues/951\n        String html = \"<!DOCTYPE html><html lang=\\\"en\\\"><head></head><body><div>Initial element</div></body></html>\";\n        String expectedText = \"New element\";\n        String cloneExpect = \"New element in clone\";\n\n        Document original = Jsoup.parse(html);\n        Document clone = original.clone();\n\n        Element originalElement = original.body().child(0);\n        originalElement.after(\"<div>\" + expectedText + \"</div>\");                                           /***** ORIGINAL ASSERTION IS HERE *****/\n        Element originalNextElementSibling = originalElement.nextElementSibling();\n        Element originalNextSibling = (Element) originalElement.nextSibling();\n        try{ assertEquals(expectedText, originalNextElementSibling.text());                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(expectedText, originalNextSibling.text());                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        Element cloneElement = clone.body().child(0);\n        try{ cloneElement.after(\"<div>\" + cloneExpect + \"</div>\");                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        Element cloneNextElementSibling = cloneElement.nextElementSibling();\n        Element cloneNextSibling = (Element) cloneElement.nextSibling();\n        try{ assertEquals(cloneExpect, cloneNextElementSibling.text());                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(cloneExpect, cloneNextSibling.text());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "\t@Test\n    public void testNextElementSiblingAfterClone$catena_1() {\n        // via https://github.com/jhy/jsoup/issues/951\n        String html = \"<!DOCTYPE html><html lang=\\\"en\\\"><head></head><body><div>Initial element</div></body></html>\";\n        String expectedText = \"New element\";\n        String cloneExpect = \"New element in clone\";\n\n        Document original = Jsoup.parse(html);\n        Document clone = original.clone();\n\n        Element originalElement = original.body().child(0);\n        try{ originalElement.after(\"<div>\" + expectedText + \"</div>\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        Element originalNextElementSibling = originalElement.nextElementSibling();\n        Element originalNextSibling = (Element) originalElement.nextSibling();\n        assertEquals(expectedText, originalNextElementSibling.text());                                      /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(expectedText, originalNextSibling.text());                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        Element cloneElement = clone.body().child(0);\n        try{ cloneElement.after(\"<div>\" + cloneExpect + \"</div>\");                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        Element cloneNextElementSibling = cloneElement.nextElementSibling();\n        Element cloneNextSibling = (Element) cloneElement.nextSibling();\n        try{ assertEquals(cloneExpect, cloneNextElementSibling.text());                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(cloneExpect, cloneNextSibling.text());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "\t@Test\n    public void testNextElementSiblingAfterClone$catena_2() {\n        // via https://github.com/jhy/jsoup/issues/951\n        String html = \"<!DOCTYPE html><html lang=\\\"en\\\"><head></head><body><div>Initial element</div></body></html>\";\n        String expectedText = \"New element\";\n        String cloneExpect = \"New element in clone\";\n\n        Document original = Jsoup.parse(html);\n        Document clone = original.clone();\n\n        Element originalElement = original.body().child(0);\n        try{ originalElement.after(\"<div>\" + expectedText + \"</div>\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        Element originalNextElementSibling = originalElement.nextElementSibling();\n        Element originalNextSibling = (Element) originalElement.nextSibling();\n        try{ assertEquals(expectedText, originalNextElementSibling.text());                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(expectedText, originalNextSibling.text());                                             /***** ORIGINAL ASSERTION IS HERE *****/\n\n        Element cloneElement = clone.body().child(0);\n        try{ cloneElement.after(\"<div>\" + cloneExpect + \"</div>\");                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        Element cloneNextElementSibling = cloneElement.nextElementSibling();\n        Element cloneNextSibling = (Element) cloneElement.nextSibling();\n        try{ assertEquals(cloneExpect, cloneNextElementSibling.text());                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(cloneExpect, cloneNextSibling.text());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "\t@Test\n    public void testNextElementSiblingAfterClone$catena_3() {\n        // via https://github.com/jhy/jsoup/issues/951\n        String html = \"<!DOCTYPE html><html lang=\\\"en\\\"><head></head><body><div>Initial element</div></body></html>\";\n        String expectedText = \"New element\";\n        String cloneExpect = \"New element in clone\";\n\n        Document original = Jsoup.parse(html);\n        Document clone = original.clone();\n\n        Element originalElement = original.body().child(0);\n        try{ originalElement.after(\"<div>\" + expectedText + \"</div>\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        Element originalNextElementSibling = originalElement.nextElementSibling();\n        Element originalNextSibling = (Element) originalElement.nextSibling();\n        try{ assertEquals(expectedText, originalNextElementSibling.text());                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(expectedText, originalNextSibling.text());                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        Element cloneElement = clone.body().child(0);\n        cloneElement.after(\"<div>\" + cloneExpect + \"</div>\");                                               /***** ORIGINAL ASSERTION IS HERE *****/\n        Element cloneNextElementSibling = cloneElement.nextElementSibling();\n        Element cloneNextSibling = (Element) cloneElement.nextSibling();\n        try{ assertEquals(cloneExpect, cloneNextElementSibling.text());                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(cloneExpect, cloneNextSibling.text());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "\t@Test\n    public void testNextElementSiblingAfterClone$catena_5() {\n        // via https://github.com/jhy/jsoup/issues/951\n        String html = \"<!DOCTYPE html><html lang=\\\"en\\\"><head></head><body><div>Initial element</div></body></html>\";\n        String expectedText = \"New element\";\n        String cloneExpect = \"New element in clone\";\n\n        Document original = Jsoup.parse(html);\n        Document clone = original.clone();\n\n        Element originalElement = original.body().child(0);\n        try{ originalElement.after(\"<div>\" + expectedText + \"</div>\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        Element originalNextElementSibling = originalElement.nextElementSibling();\n        Element originalNextSibling = (Element) originalElement.nextSibling();\n        try{ assertEquals(expectedText, originalNextElementSibling.text());                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(expectedText, originalNextSibling.text());                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        Element cloneElement = clone.body().child(0);\n        try{ cloneElement.after(\"<div>\" + cloneExpect + \"</div>\");                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        Element cloneNextElementSibling = cloneElement.nextElementSibling();\n        Element cloneNextSibling = (Element) cloneElement.nextSibling();\n        try{ assertEquals(cloneExpect, cloneNextElementSibling.text());                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(cloneExpect, cloneNextSibling.text());                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    }
}