{
    "org.jsoup.nodes.FormElementTest::createsFormData": {
        "begin_line_no": 27,
        "end_line_no": 47,
        "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java",
        "to": [
            "    @Test public void createsFormData$catena_0() {\n        String html = \"<form><input name='one' value='two'><select name='three'><option value='not'>\" +\n                \"<option value='four' selected><option value='five' selected><textarea name=six>seven</textarea>\" +\n                \"<input name='seven' type='radio' value='on' checked><input name='seven' type='radio' value='off'>\" +\n                \"<input name='eight' type='checkbox' checked><input name='nine' type='checkbox' value='unset'>\" +\n                \"<input name='ten' value='text' disabled>\" +\n                \"</form>\";\n        Document doc = Jsoup.parse(html);\n        FormElement form = (FormElement) doc.select(\"form\").first();\n        List<Connection.KeyVal> data = form.formData();\n\n        assertEquals(6, data.size());                                                                       /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(\"one=two\", data.get(0).toString());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"three=four\", data.get(1).toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"three=five\", data.get(2).toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"six=seven\", data.get(3).toString());                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"seven=on\", data.get(4).toString());                                       }catch(Throwable __SHOULD_BE_IGNORED){} // set\n        try{ assertEquals(\"eight=on\", data.get(5).toString());                                   }catch(Throwable __SHOULD_BE_IGNORED){} // default\n        // nine should not appear, not checked checkbox\n        // ten should not appear, disabled\n    }",
            "    @Test public void createsFormData$catena_1() {\n        String html = \"<form><input name='one' value='two'><select name='three'><option value='not'>\" +\n                \"<option value='four' selected><option value='five' selected><textarea name=six>seven</textarea>\" +\n                \"<input name='seven' type='radio' value='on' checked><input name='seven' type='radio' value='off'>\" +\n                \"<input name='eight' type='checkbox' checked><input name='nine' type='checkbox' value='unset'>\" +\n                \"<input name='ten' value='text' disabled>\" +\n                \"</form>\";\n        Document doc = Jsoup.parse(html);\n        FormElement form = (FormElement) doc.select(\"form\").first();\n        List<Connection.KeyVal> data = form.formData();\n\n        try{ assertEquals(6, data.size());                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(\"one=two\", data.get(0).toString());                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(\"three=four\", data.get(1).toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"three=five\", data.get(2).toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"six=seven\", data.get(3).toString());                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"seven=on\", data.get(4).toString());                                       }catch(Throwable __SHOULD_BE_IGNORED){} // set\n        try{ assertEquals(\"eight=on\", data.get(5).toString());                                   }catch(Throwable __SHOULD_BE_IGNORED){} // default\n        // nine should not appear, not checked checkbox\n        // ten should not appear, disabled\n    }",
            "    @Test public void createsFormData$catena_2() {\n        String html = \"<form><input name='one' value='two'><select name='three'><option value='not'>\" +\n                \"<option value='four' selected><option value='five' selected><textarea name=six>seven</textarea>\" +\n                \"<input name='seven' type='radio' value='on' checked><input name='seven' type='radio' value='off'>\" +\n                \"<input name='eight' type='checkbox' checked><input name='nine' type='checkbox' value='unset'>\" +\n                \"<input name='ten' value='text' disabled>\" +\n                \"</form>\";\n        Document doc = Jsoup.parse(html);\n        FormElement form = (FormElement) doc.select(\"form\").first();\n        List<Connection.KeyVal> data = form.formData();\n\n        try{ assertEquals(6, data.size());                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"one=two\", data.get(0).toString());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(\"three=four\", data.get(1).toString());                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(\"three=five\", data.get(2).toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"six=seven\", data.get(3).toString());                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"seven=on\", data.get(4).toString());                                       }catch(Throwable __SHOULD_BE_IGNORED){} // set\n        try{ assertEquals(\"eight=on\", data.get(5).toString());                                   }catch(Throwable __SHOULD_BE_IGNORED){} // default\n        // nine should not appear, not checked checkbox\n        // ten should not appear, disabled\n    }",
            "    @Test public void createsFormData$catena_3() {\n        String html = \"<form><input name='one' value='two'><select name='three'><option value='not'>\" +\n                \"<option value='four' selected><option value='five' selected><textarea name=six>seven</textarea>\" +\n                \"<input name='seven' type='radio' value='on' checked><input name='seven' type='radio' value='off'>\" +\n                \"<input name='eight' type='checkbox' checked><input name='nine' type='checkbox' value='unset'>\" +\n                \"<input name='ten' value='text' disabled>\" +\n                \"</form>\";\n        Document doc = Jsoup.parse(html);\n        FormElement form = (FormElement) doc.select(\"form\").first();\n        List<Connection.KeyVal> data = form.formData();\n\n        try{ assertEquals(6, data.size());                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"one=two\", data.get(0).toString());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"three=four\", data.get(1).toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(\"three=five\", data.get(2).toString());                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(\"six=seven\", data.get(3).toString());                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"seven=on\", data.get(4).toString());                                       }catch(Throwable __SHOULD_BE_IGNORED){} // set\n        try{ assertEquals(\"eight=on\", data.get(5).toString());                                   }catch(Throwable __SHOULD_BE_IGNORED){} // default\n        // nine should not appear, not checked checkbox\n        // ten should not appear, disabled\n    }",
            "    @Test public void createsFormData$catena_4() {\n        String html = \"<form><input name='one' value='two'><select name='three'><option value='not'>\" +\n                \"<option value='four' selected><option value='five' selected><textarea name=six>seven</textarea>\" +\n                \"<input name='seven' type='radio' value='on' checked><input name='seven' type='radio' value='off'>\" +\n                \"<input name='eight' type='checkbox' checked><input name='nine' type='checkbox' value='unset'>\" +\n                \"<input name='ten' value='text' disabled>\" +\n                \"</form>\";\n        Document doc = Jsoup.parse(html);\n        FormElement form = (FormElement) doc.select(\"form\").first();\n        List<Connection.KeyVal> data = form.formData();\n\n        try{ assertEquals(6, data.size());                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"one=two\", data.get(0).toString());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"three=four\", data.get(1).toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"three=five\", data.get(2).toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(\"six=seven\", data.get(3).toString());                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(\"seven=on\", data.get(4).toString());                                       }catch(Throwable __SHOULD_BE_IGNORED){} // set\n        try{ assertEquals(\"eight=on\", data.get(5).toString());                                   }catch(Throwable __SHOULD_BE_IGNORED){} // default\n        // nine should not appear, not checked checkbox\n        // ten should not appear, disabled\n    }",
            "    @Test public void createsFormData$catena_5() {\n        String html = \"<form><input name='one' value='two'><select name='three'><option value='not'>\" +\n                \"<option value='four' selected><option value='five' selected><textarea name=six>seven</textarea>\" +\n                \"<input name='seven' type='radio' value='on' checked><input name='seven' type='radio' value='off'>\" +\n                \"<input name='eight' type='checkbox' checked><input name='nine' type='checkbox' value='unset'>\" +\n                \"<input name='ten' value='text' disabled>\" +\n                \"</form>\";\n        Document doc = Jsoup.parse(html);\n        FormElement form = (FormElement) doc.select(\"form\").first();\n        List<Connection.KeyVal> data = form.formData();\n\n        try{ assertEquals(6, data.size());                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"one=two\", data.get(0).toString());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"three=four\", data.get(1).toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"three=five\", data.get(2).toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"six=seven\", data.get(3).toString());                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(\"seven=on\", data.get(4).toString());                                            /***** ORIGINAL ASSERTION IS HERE *****/ // set\n        try{ assertEquals(\"eight=on\", data.get(5).toString());                                   }catch(Throwable __SHOULD_BE_IGNORED){} // default\n        // nine should not appear, not checked checkbox\n        // ten should not appear, disabled\n    }"
        ]
    },
    "org.jsoup.nodes.FormElementTest::usesOnForCheckboxValueIfNoValueSet": {
        "begin_line_no": 118,
        "end_line_no": 124,
        "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java",
        "to": [
            "    @Test public void usesOnForCheckboxValueIfNoValueSet$catena_1() {\n        Document doc = Jsoup.parse(\"<form><input type=checkbox checked name=foo></form>\");\n        FormElement form = (FormElement) doc.select(\"form\").first();\n        List<Connection.KeyVal> data = form.formData();\n        try{ assertEquals(\"on\", data.get(0).value());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(\"foo\", data.get(0).key());                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    }
}