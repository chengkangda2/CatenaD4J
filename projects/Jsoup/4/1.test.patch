{
    "org.jsoup.nodes.EntitiesTest::caseSensitive": {
        "begin_line_no": 30,
        "end_line_no": 36,
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "to": [
            "    @Test public void caseSensitive$catena_0() {\n        String unescaped = \"\u00dc \u00fc & &\";\n        assertEquals(\"&Uuml; &uuml; &amp; &amp;\", Entities.escape(unescaped, Charset.forName(\"ascii\").newEncoder(), Entities.EscapeMode.extended));         /***** ORIGINAL ASSERTION IS HERE *****/\n        \n        String escaped = \"&Uuml; &uuml; &amp; &AMP\";\n        try{ assertEquals(\"\u00dc \u00fc & &\", Entities.unescape(escaped));                                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    },
    "org.jsoup.nodes.EntitiesTest::escape": {
        "begin_line_no": 11,
        "end_line_no": 21,
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "to": [
            "    @Test public void escape$catena_1() {\n        String text = \"Hello &<> \u00c5 \u00e5 \u03c0 \u65b0 there\";\n        String escapedAscii = Entities.escape(text, Charset.forName(\"ascii\").newEncoder(), Entities.EscapeMode.base);\n        String escapedAsciiFull = Entities.escape(text, Charset.forName(\"ascii\").newEncoder(), Entities.EscapeMode.extended);\n        String escapedUtf = Entities.escape(text, Charset.forName(\"UTF-8\").newEncoder(), Entities.EscapeMode.base);\n\n        try{ assertEquals(\"Hello &amp;&lt;&gt; &Aring; &aring; &#960; &#26032; there\", escapedAscii);       }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(\"Hello &amp;&lt;&gt; &angst; &aring; &pi; &#26032; there\", escapedAsciiFull);          /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(\"Hello &amp;&lt;&gt; &Aring; &aring; \u03c0 \u65b0 there\", escapedUtf);                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        // odd that it's defined as aring in base but angst in full\n    }"
        ]
    }
}