{
    "org.jsoup.helper.DataUtilTest::supportsBOMinFiles": {
        "begin_line_no": 104,
        "end_line_no": 126,
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "to": [
            "    @Test\n    public void supportsBOMinFiles$catena_7() throws IOException {\n        // test files from http://www.i18nl10n.com/korean/utftest/\n        File in = getFile(\"/bomtests/bom_utf16be.html\");\n        Document doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf16le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32be.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                          /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    @Test\n    public void supportsBOMinFiles$catena_0() throws IOException {\n        // test files from http://www.i18nl10n.com/korean/utftest/\n        File in = getFile(\"/bomtests/bom_utf16be.html\");\n        Document doc = Jsoup.parse(in, null, \"http://example.com\");\n        assertTrue(doc.title().contains(\"UTF-16BE\"));                                                       /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf16le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32be.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test\n    public void supportsBOMinFiles$catena_4() throws IOException {\n        // test files from http://www.i18nl10n.com/korean/utftest/\n        File in = getFile(\"/bomtests/bom_utf16be.html\");\n        Document doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf16le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32be.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        assertTrue(doc.title().contains(\"UTF-32BE\"));                                                       /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test\n    public void supportsBOMinFiles$catena_2() throws IOException {\n        // test files from http://www.i18nl10n.com/korean/utftest/\n        File in = getFile(\"/bomtests/bom_utf16be.html\");\n        Document doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf16le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        assertTrue(doc.title().contains(\"UTF-16LE\"));                                                       /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32be.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test\n    public void supportsBOMinFiles$catena_1() throws IOException {\n        // test files from http://www.i18nl10n.com/korean/utftest/\n        File in = getFile(\"/bomtests/bom_utf16be.html\");\n        Document doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                          /***** ORIGINAL ASSERTION IS HERE *****/\n\n        in = getFile(\"/bomtests/bom_utf16le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32be.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test\n    public void supportsBOMinFiles$catena_5() throws IOException {\n        // test files from http://www.i18nl10n.com/korean/utftest/\n        File in = getFile(\"/bomtests/bom_utf16be.html\");\n        Document doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf16le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32be.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                          /***** ORIGINAL ASSERTION IS HERE *****/\n\n        in = getFile(\"/bomtests/bom_utf32le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test\n    public void supportsBOMinFiles$catena_3() throws IOException {\n        // test files from http://www.i18nl10n.com/korean/utftest/\n        File in = getFile(\"/bomtests/bom_utf16be.html\");\n        Document doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf16le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                          /***** ORIGINAL ASSERTION IS HERE *****/\n\n        in = getFile(\"/bomtests/bom_utf32be.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test\n    public void supportsBOMinFiles$catena_6() throws IOException {\n        // test files from http://www.i18nl10n.com/korean/utftest/\n        File in = getFile(\"/bomtests/bom_utf16be.html\");\n        Document doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf16le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-16LE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32be.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        try{ assertTrue(doc.title().contains(\"UTF-32BE\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        in = getFile(\"/bomtests/bom_utf32le.html\");\n        doc = Jsoup.parse(in, null, \"http://example.com\");\n        assertTrue(doc.title().contains(\"UTF-32LE\"));                                                       /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(doc.text().contains(\"\uac00\uac01\uac02\uac03\uac04\uac05\"));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}