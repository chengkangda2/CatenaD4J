{
    "org.jsoup.integration.ConnectTest::testBinaryResultThrows": {
        "begin_line_no": 509,
        "end_line_no": 524,
        "file_path": "src/test/java/org/jsoup/integration/ConnectTest.java",
        "to": [
            "    @Test\n    public void testBinaryResultThrows$catena_1() {\n        Connection con = Jsoup.connect(FileServlet.Url);\n        con.data(FileServlet.LocationParam, \"/htmltests/thumb.jpg\");\n        con.data(FileServlet.ContentTypeParam, \"text/html\");\n\n        boolean threw = false;\n        try {\n            con.execute();\n            Document doc = con.response().parse();\n        } catch (IOException e) {\n            threw = true;\n            try{ assertEquals(\"Input is binary and unsupported\", e.getMessage());                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n        assertTrue(threw);                                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    @Test\n    public void testBinaryResultThrows$catena_0() {\n        Connection con = Jsoup.connect(FileServlet.Url);\n        con.data(FileServlet.LocationParam, \"/htmltests/thumb.jpg\");\n        con.data(FileServlet.ContentTypeParam, \"text/html\");\n\n        boolean threw = false;\n        try {\n            con.execute();\n            Document doc = con.response().parse();\n        } catch (IOException e) {\n            threw = true;\n            assertEquals(\"Input is binary and unsupported\", e.getMessage());                                /***** ORIGINAL ASSERTION IS HERE *****/\n        }\n        try{ assertTrue(threw);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    },
    "org.jsoup.integration.ParseTest::testBinaryThrowsException": {
        "begin_line_no": 68,
        "end_line_no": 80,
        "file_path": "src/test/java/org/jsoup/integration/ParseTest.java",
        "to": [
            "    @Test\n    public void testBinaryThrowsException$catena_1() throws IOException {\n        File in = getFile(\"/htmltests/thumb.jpg\");\n\n        boolean threw = false;\n        try {\n            Document doc = Jsoup.parse(in, \"UTF-8\");\n        } catch (IOException e) {\n            threw = true;\n            try{ assertEquals(\"Input is binary and unsupported\", e.getMessage());                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n        assertTrue(threw);                                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    @Test\n    public void testBinaryThrowsException$catena_0() throws IOException {\n        File in = getFile(\"/htmltests/thumb.jpg\");\n\n        boolean threw = false;\n        try {\n            Document doc = Jsoup.parse(in, \"UTF-8\");\n        } catch (IOException e) {\n            threw = true;\n            assertEquals(\"Input is binary and unsupported\", e.getMessage());                                /***** ORIGINAL ASSERTION IS HERE *****/\n        }\n        try{ assertTrue(threw);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    },
    "org.jsoup.integration.ConnectTest::testBinaryThrowsExceptionWhenTypeIgnored": {
        "begin_line_no": 491,
        "end_line_no": 507,
        "file_path": "src/test/java/org/jsoup/integration/ConnectTest.java",
        "to": [
            "    @Test\n    public void testBinaryThrowsExceptionWhenTypeIgnored$catena_1() {\n        Connection con = Jsoup.connect(FileServlet.Url);\n        con.data(FileServlet.LocationParam, \"/htmltests/thumb.jpg\");\n        con.data(FileServlet.ContentTypeParam, \"image/jpeg\");\n        con.ignoreContentType(true);\n\n        boolean threw = false;\n        try {\n            con.execute();\n            Document doc = con.response().parse();\n        } catch (IOException e) {\n            threw = true;\n            try{ assertEquals(\"Input is binary and unsupported\", e.getMessage());                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n        assertTrue(threw);                                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    @Test\n    public void testBinaryThrowsExceptionWhenTypeIgnored$catena_0() {\n        Connection con = Jsoup.connect(FileServlet.Url);\n        con.data(FileServlet.LocationParam, \"/htmltests/thumb.jpg\");\n        con.data(FileServlet.ContentTypeParam, \"image/jpeg\");\n        con.ignoreContentType(true);\n\n        boolean threw = false;\n        try {\n            con.execute();\n            Document doc = con.response().parse();\n        } catch (IOException e) {\n            threw = true;\n            assertEquals(\"Input is binary and unsupported\", e.getMessage());                                /***** ORIGINAL ASSERTION IS HERE *****/\n        }\n        try{ assertTrue(threw);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}