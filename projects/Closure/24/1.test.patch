{
    "com.google.javascript.jscomp.ScopedAliasesTest::testNonAliasLocal": {
        "begin_line_no": 405,
        "end_line_no": 415,
        "file_path": "test/com/google/javascript/jscomp/ScopedAliasesTest.java",
        "to": [
            "  public void testNonAliasLocal$catena_4() {\n    try{ testScopedFailure(\"var x = 10\", ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                         }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ testScopedFailure(\"var x = goog.dom + 10\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ testScopedFailure(\"var x = goog['dom']\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ testScopedFailure(\"var x = goog.dom, y = 10\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    testScopedFailure(\"function f() {}\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          /***** ORIGINAL ASSERTION IS HERE *****/\n  }",
            "  public void testNonAliasLocal$catena_0() {\n    testScopedFailure(\"var x = 10\", ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                              /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ testScopedFailure(\"var x = goog.dom + 10\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ testScopedFailure(\"var x = goog['dom']\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ testScopedFailure(\"var x = goog.dom, y = 10\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ testScopedFailure(\"function f() {}\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testNonAliasLocal$catena_1() {\n    try{ testScopedFailure(\"var x = 10\", ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                         }catch(Throwable __SHOULD_BE_IGNORED){}\n    testScopedFailure(\"var x = goog.dom + 10\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ testScopedFailure(\"var x = goog['dom']\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ testScopedFailure(\"var x = goog.dom, y = 10\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ testScopedFailure(\"function f() {}\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testNonAliasLocal$catena_2() {\n    try{ testScopedFailure(\"var x = 10\", ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                         }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ testScopedFailure(\"var x = goog.dom + 10\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    testScopedFailure(\"var x = goog['dom']\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ testScopedFailure(\"var x = goog.dom, y = 10\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ testScopedFailure(\"function f() {}\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testNonAliasLocal$catena_3() {\n    try{ testScopedFailure(\"var x = 10\", ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                         }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ testScopedFailure(\"var x = goog.dom + 10\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ testScopedFailure(\"var x = goog['dom']\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    testScopedFailure(\"var x = goog.dom, y = 10\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ testScopedFailure(\"function f() {}\",\n        ScopedAliases.GOOG_SCOPE_NON_ALIAS_LOCAL);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n  }"
        ]
    }
}