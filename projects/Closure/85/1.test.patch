{
    "com.google.javascript.jscomp.UnreachableCodeEliminationTest::testCascadedRemovalOfUnlessUnconditonalJumps": {
        "begin_line_no": 234,
        "end_line_no": 250,
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "to": [
            "  public void testCascadedRemovalOfUnlessUnconditonalJumps$catena_2() {\n    try{ test(\"switch (a) { case 'a': break; case 'b': break; case 'c': break }\",\n         \"switch (a) { case 'a': break; case 'b': case 'c': }\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    // Only one break removed per pass.\n    try{ test(\"switch (a) { case 'a': break; case 'b': case 'c': }\",\n         \"switch (a) { case 'a': case 'b': case 'c': }\");                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    test(\"function foo() {\" +\n      \"  switch (a) { case 'a':return; case 'b':return; case 'c':return }}\",\n      \"function foo() { switch (a) { case 'a':return; case 'b': case 'c': }}\");                             /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ test(\"function foo() {\" +\n      \"  switch (a) { case 'a':return; case 'b': case 'c': }}\",\n      \"function foo() { switch (a) { case 'a': case 'b': case 'c': }}\");                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ testSame(\"function foo() {\" +\n             \"switch (a) { case 'a':return 2; case 'b':return 1}}\");                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testCascadedRemovalOfUnlessUnconditonalJumps$catena_0() {\n    test(\"switch (a) { case 'a': break; case 'b': break; case 'c': break }\",\n         \"switch (a) { case 'a': break; case 'b': case 'c': }\");                                            /***** ORIGINAL ASSERTION IS HERE *****/\n    // Only one break removed per pass.\n    try{ test(\"switch (a) { case 'a': break; case 'b': case 'c': }\",\n         \"switch (a) { case 'a': case 'b': case 'c': }\");                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ test(\"function foo() {\" +\n      \"  switch (a) { case 'a':return; case 'b':return; case 'c':return }}\",\n      \"function foo() { switch (a) { case 'a':return; case 'b': case 'c': }}\");                             }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ test(\"function foo() {\" +\n      \"  switch (a) { case 'a':return; case 'b': case 'c': }}\",\n      \"function foo() { switch (a) { case 'a': case 'b': case 'c': }}\");                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ testSame(\"function foo() {\" +\n             \"switch (a) { case 'a':return 2; case 'b':return 1}}\");                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n  }"
        ]
    }
}