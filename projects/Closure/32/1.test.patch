{
    "com.google.javascript.jscomp.IntegrationTest::testIssue701": {
        "begin_line_no": 1660,
        "end_line_no": 1675,
        "file_path": "test/com/google/javascript/jscomp/IntegrationTest.java",
        "to": [
            "  public void testIssue701$catena_1() {\n    // Check ASCII art in license comments.\n    String ascii = \"/**\\n\" +\n        \" * @preserve\\n\" +\n        \"   This\\n\" +\n        \"     is\\n\" +\n        \"       ASCII    ART\\n\" +\n        \"*/\";\n    String result = \"/*\\n\\n\" +\n        \"   This\\n\" +\n        \"     is\\n\" +\n        \"       ASCII    ART\\n\" +\n        \"*/\\n\";\n    try{ testSame(createCompilerOptions(), ascii);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertEquals(result, lastCompiler.toSource());                                                          /***** ORIGINAL ASSERTION IS HERE *****/\n  }",
            "  public void testIssue701$catena_0() {\n    // Check ASCII art in license comments.\n    String ascii = \"/**\\n\" +\n        \" * @preserve\\n\" +\n        \"   This\\n\" +\n        \"     is\\n\" +\n        \"       ASCII    ART\\n\" +\n        \"*/\";\n    String result = \"/*\\n\\n\" +\n        \"   This\\n\" +\n        \"     is\\n\" +\n        \"       ASCII    ART\\n\" +\n        \"*/\\n\";\n    testSame(createCompilerOptions(), ascii);                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertEquals(result, lastCompiler.toSource());                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n  }"
        ]
    },
    "com.google.javascript.jscomp.parsing.JsDocInfoParserTest::testParsePreserve": {
        "begin_line_no": 1273,
        "end_line_no": 1279,
        "file_path": "test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java",
        "to": [
            "  public void testParsePreserve$catena_1() throws Exception {\n    Node node = new Node(1);\n    this.fileLevelJsDocBuilder = node.getJsDocBuilderForNode();\n    String comment = \"@preserve Foo\\nBar\\n\\nBaz*/\";\n    try{ parse(comment);                                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertEquals(\" Foo\\nBar\\n\\nBaz\", node.getJSDocInfo().getLicense());                                     /***** ORIGINAL ASSERTION IS HERE *****/\n  }",
            "  public void testParsePreserve$catena_0() throws Exception {\n    Node node = new Node(1);\n    this.fileLevelJsDocBuilder = node.getJsDocBuilderForNode();\n    String comment = \"@preserve Foo\\nBar\\n\\nBaz*/\";\n    parse(comment);                                                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertEquals(\" Foo\\nBar\\n\\nBaz\", node.getJSDocInfo().getLicense());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n  }"
        ]
    },
    "com.google.javascript.jscomp.parsing.JsDocInfoParserTest::testParseLicense": {
        "begin_line_no": 1281,
        "end_line_no": 1287,
        "file_path": "test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java",
        "to": [
            "  public void testParseLicense$catena_1() throws Exception {\n    Node node = new Node(1);\n    this.fileLevelJsDocBuilder = node.getJsDocBuilderForNode();\n    String comment = \"@license Foo\\nBar\\n\\nBaz*/\";\n    try{ parse(comment);                                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertEquals(\" Foo\\nBar\\n\\nBaz\", node.getJSDocInfo().getLicense());                                     /***** ORIGINAL ASSERTION IS HERE *****/\n  }",
            "  public void testParseLicense$catena_0() throws Exception {\n    Node node = new Node(1);\n    this.fileLevelJsDocBuilder = node.getJsDocBuilderForNode();\n    String comment = \"@license Foo\\nBar\\n\\nBaz*/\";\n    parse(comment);                                                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertEquals(\" Foo\\nBar\\n\\nBaz\", node.getJSDocInfo().getLicense());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n  }"
        ]
    },
    "com.google.javascript.jscomp.parsing.JsDocInfoParserTest::testParseLicenseAscii": {
        "begin_line_no": 1289,
        "end_line_no": 1295,
        "file_path": "test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java",
        "to": [
            "  public void testParseLicenseAscii$catena_1() throws Exception {\n    Node node = new Node(1);\n    this.fileLevelJsDocBuilder = node.getJsDocBuilderForNode();\n    String comment = \"@license Foo\\n *   Bar\\n\\n  Baz*/\";\n    try{ parse(comment);                                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertEquals(\" Foo\\n   Bar\\n\\n  Baz\", node.getJSDocInfo().getLicense());                                /***** ORIGINAL ASSERTION IS HERE *****/\n  }",
            "  public void testParseLicenseAscii$catena_0() throws Exception {\n    Node node = new Node(1);\n    this.fileLevelJsDocBuilder = node.getJsDocBuilderForNode();\n    String comment = \"@license Foo\\n *   Bar\\n\\n  Baz*/\";\n    parse(comment);                                                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertEquals(\" Foo\\n   Bar\\n\\n  Baz\", node.getJSDocInfo().getLicense());                           }catch(Throwable __SHOULD_BE_IGNORED){}\n  }"
        ]
    }
}