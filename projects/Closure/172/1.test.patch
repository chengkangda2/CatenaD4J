{
    "com.google.javascript.jscomp.TypeCheckTest::testIssue1024": {
        "begin_line_no": 11992,
        "end_line_no": 12021,
        "file_path": "test/com/google/javascript/jscomp/TypeCheckTest.java",
        "to": [
            "  public void testIssue1024$catena_0() throws Exception {\n     testTypes(\n        \"/** @param {Object} a */\\n\" +\n        \"function f(a) {\\n\" +\n        \"  a.prototype = '__proto'\\n\" +\n        \"}\\n\" +\n        \"/** @param {Object} b\\n\" +\n        \" *  @return {!Object}\\n\" +\n        \" */\\n\" +\n        \"function g(b) {\\n\" +\n        \"  return b.prototype\\n\" +\n        \"}\\n\");                                                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n     /* TODO(blickly): Make this warning go away.\n      * This is old behavior, but it doesn't make sense to warn about since\n      * both assignments are inferred.\n      */\n     try{ testTypes(\n        \"/** @param {Object} a */\\n\" +\n        \"function f(a) {\\n\" +\n        \"  a.prototype = {foo:3};\\n\" +\n        \"}\\n\" +\n        \"/** @param {Object} b\\n\" +\n        \" */\\n\" +\n        \"function g(b) {\\n\" +\n        \"  b.prototype = function(){};\\n\" +\n        \"}\\n\",\n        \"assignment to property prototype of Object\\n\" +\n        \"found   : {foo: number}\\n\" +\n        \"required: function (): undefined\");                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testIssue1024$catena_1() throws Exception {\n     try{ testTypes(\n        \"/** @param {Object} a */\\n\" +\n        \"function f(a) {\\n\" +\n        \"  a.prototype = '__proto'\\n\" +\n        \"}\\n\" +\n        \"/** @param {Object} b\\n\" +\n        \" *  @return {!Object}\\n\" +\n        \" */\\n\" +\n        \"function g(b) {\\n\" +\n        \"  return b.prototype\\n\" +\n        \"}\\n\");                                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n     /* TODO(blickly): Make this warning go away.\n      * This is old behavior, but it doesn't make sense to warn about since\n      * both assignments are inferred.\n      */\n     testTypes(\n        \"/** @param {Object} a */\\n\" +\n        \"function f(a) {\\n\" +\n        \"  a.prototype = {foo:3};\\n\" +\n        \"}\\n\" +\n        \"/** @param {Object} b\\n\" +\n        \" */\\n\" +\n        \"function g(b) {\\n\" +\n        \"  b.prototype = function(){};\\n\" +\n        \"}\\n\",\n        \"assignment to property prototype of Object\\n\" +\n        \"found   : {foo: number}\\n\" +\n        \"required: function (): undefined\");                                                                /***** ORIGINAL ASSERTION IS HERE *****/\n  }"
        ]
    }
}