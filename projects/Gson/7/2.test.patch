{
    "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": {
        "begin_line_no": 188,
        "end_line_no": 196,
        "file_path": "gson/src/test/java/com/google/gson/functional/MapTest.java",
        "to": [
            "  public void testMapDeserializationWithUnquotedLongKeys$catena_2() {\n    long longKey = 9876543210L;\n    String json = String.format(\"{%d:\\\"456\\\"}\", longKey);\n    Type typeOfMap = new TypeToken<Map<Long, String>>() {}.getType();\n    Map<Long, String> map = gson.fromJson(json, typeOfMap);\n    try{ assertEquals(1, map.size());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertTrue(map.containsKey(longKey));                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertEquals(\"456\", map.get(longKey));                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n  }",
            "  public void testMapDeserializationWithUnquotedLongKeys$catena_1() {\n    long longKey = 9876543210L;\n    String json = String.format(\"{%d:\\\"456\\\"}\", longKey);\n    Type typeOfMap = new TypeToken<Map<Long, String>>() {}.getType();\n    Map<Long, String> map = gson.fromJson(json, typeOfMap);\n    try{ assertEquals(1, map.size());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertTrue(map.containsKey(longKey));                                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertEquals(\"456\", map.get(longKey));                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testMapDeserializationWithUnquotedLongKeys$catena_0() {\n    long longKey = 9876543210L;\n    String json = String.format(\"{%d:\\\"456\\\"}\", longKey);\n    Type typeOfMap = new TypeToken<Map<Long, String>>() {}.getType();\n    Map<Long, String> map = gson.fromJson(json, typeOfMap);\n    assertEquals(1, map.size());                                                                            /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertTrue(map.containsKey(longKey));                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertEquals(\"456\", map.get(longKey));                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n  }"
        ]
    },
    "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": {
        "begin_line_no": 170,
        "end_line_no": 176,
        "file_path": "gson/src/test/java/com/google/gson/functional/MapTest.java",
        "to": [
            ""
        ]
    },
    "com.google.gson.stream.JsonReaderTest::testPeekingUnquotedStringsPrefixedWithIntegers": {
        "begin_line_no": 496,
        "end_line_no": 507,
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonReaderTest.java",
        "to": [
            ""
        ]
    }
}