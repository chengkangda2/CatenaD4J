{
    "com.google.gson.stream.JsonReaderTest::testPeekingUnquotedStringsPrefixedWithIntegers": {
        "begin_line_no": 496,
        "end_line_no": 507,
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonReaderTest.java",
        "to": [
            "  public void testPeekingUnquotedStringsPrefixedWithIntegers$catena_1() throws IOException {\n    JsonReader reader = new JsonReader(reader(\"[12.34e5x]\"));\n    reader.setLenient(true);\n    reader.beginArray();\n    try{ assertEquals(STRING, reader.peek());                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    try {\n      reader.nextInt();\n      fail();                                                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n    } catch (NumberFormatException expected) {\n    }\n    try{ assertEquals(\"12.34e5x\", reader.nextString());                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testPeekingUnquotedStringsPrefixedWithIntegers$catena_0() throws IOException {\n    JsonReader reader = new JsonReader(reader(\"[12.34e5x]\"));\n    reader.setLenient(true);\n    reader.beginArray();\n    assertEquals(STRING, reader.peek());                                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n    try {\n      reader.nextInt();\n      try{ fail();                                                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    } catch (NumberFormatException expected) {\n    }\n    try{ assertEquals(\"12.34e5x\", reader.nextString());                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testPeekingUnquotedStringsPrefixedWithIntegers$catena_2() throws IOException {\n    JsonReader reader = new JsonReader(reader(\"[12.34e5x]\"));\n    reader.setLenient(true);\n    reader.beginArray();\n    try{ assertEquals(STRING, reader.peek());                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    try {\n      reader.nextInt();\n      try{ fail();                                                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    } catch (NumberFormatException expected) {\n    }\n    assertEquals(\"12.34e5x\", reader.nextString());                                                          /***** ORIGINAL ASSERTION IS HERE *****/\n  }"
        ]
    },
    "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedIntegerKeys": {
        "begin_line_no": 170,
        "end_line_no": 176,
        "file_path": "gson/src/test/java/com/google/gson/functional/MapTest.java",
        "to": [
            "  public void testMapDeserializationWithUnquotedIntegerKeys$catena_1() {\n    Type typeOfMap = new TypeToken<Map<Integer, String>>() {}.getType();\n    Map<Integer, String> map = gson.fromJson(\"{123:\\\"456\\\"}\", typeOfMap);\n    try{ assertEquals(1, map.size());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertTrue(map.containsKey(123));                                                                       /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertEquals(\"456\", map.get(123));                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testMapDeserializationWithUnquotedIntegerKeys$catena_0() {\n    Type typeOfMap = new TypeToken<Map<Integer, String>>() {}.getType();\n    Map<Integer, String> map = gson.fromJson(\"{123:\\\"456\\\"}\", typeOfMap);\n    assertEquals(1, map.size());                                                                            /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertTrue(map.containsKey(123));                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertEquals(\"456\", map.get(123));                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testMapDeserializationWithUnquotedIntegerKeys$catena_2() {\n    Type typeOfMap = new TypeToken<Map<Integer, String>>() {}.getType();\n    Map<Integer, String> map = gson.fromJson(\"{123:\\\"456\\\"}\", typeOfMap);\n    try{ assertEquals(1, map.size());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertTrue(map.containsKey(123));                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertEquals(\"456\", map.get(123));                                                                      /***** ORIGINAL ASSERTION IS HERE *****/\n  }"
        ]
    },
    "com.google.gson.functional.MapTest::testMapDeserializationWithUnquotedLongKeys": {
        "begin_line_no": 188,
        "end_line_no": 196,
        "file_path": "gson/src/test/java/com/google/gson/functional/MapTest.java",
        "to": [
            ""
        ]
    }
}