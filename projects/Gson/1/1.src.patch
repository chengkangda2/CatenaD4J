{
    "patch": [
        {
            "file_name": "gson/src/main/java/com/google/gson/TypeInfoFactory.java",
            "replaced_with": "      } else if (typeToEvaluate instanceof TypeVariable<?>) {\n        Type theSearchedType = null;\n",
            "patch_type": "insert",
            "next_line_no": 93
        },
        {
            "file_name": "gson/src/main/java/com/google/gson/TypeInfoFactory.java",
            "replaced_with": "        do {\n          theSearchedType = extractTypeForHierarchy(parentType, (TypeVariable<?>) typeToEvaluate);\n        } while ((theSearchedType != null) && (theSearchedType instanceof TypeVariable<?>));\n",
            "patch_type": "insert",
            "next_line_no": 94
        },
        {
            "file_name": "gson/src/main/java/com/google/gson/TypeInfoFactory.java",
            "replaced_with": "        if (theSearchedType != null) {\n          return theSearchedType;\n        }\n",
            "patch_type": "insert",
            "next_line_no": 95
        },
        {
            "file_name": "gson/src/main/java/com/google/gson/TypeInfoFactory.java",
            "replaced_with": "  private static Type extractTypeForHierarchy(Type parentType, TypeVariable<?> typeToEvaluate) {\n    Class<?> rawParentType = null;\n    if (parentType instanceof Class<?>) {\n      rawParentType = (Class<?>) parentType;\n    } else if (parentType instanceof ParameterizedType) {\n      ParameterizedType parentTypeAsPT = (ParameterizedType) parentType;\n      rawParentType = (Class<?>) parentTypeAsPT.getRawType();\n    } else {\n      return null;\n    }\n",
            "patch_type": "insert",
            "next_line_no": 109
        },
        {
            "file_name": "gson/src/main/java/com/google/gson/TypeInfoFactory.java",
            "replaced_with": "    Type superClass = rawParentType.getGenericSuperclass();\n    if (superClass instanceof ParameterizedType\n        && ((ParameterizedType) superClass).getRawType() == typeToEvaluate.getGenericDeclaration()) {\n",
            "patch_type": "insert",
            "next_line_no": 110
        },
        {
            "file_name": "gson/src/main/java/com/google/gson/TypeInfoFactory.java",
            "replaced_with": "      TypeVariable<?>[] classTypeVariables =\n          ((Class<?>) ((ParameterizedType) superClass).getRawType()).getTypeParameters();\n      int indexOfActualTypeArgument = getIndex(classTypeVariables, typeToEvaluate);\n\n      Type[] actualTypeArguments = null;\n      if (parentType instanceof Class<?>) {\n        actualTypeArguments = ((ParameterizedType) superClass).getActualTypeArguments();\n      } else if (parentType instanceof ParameterizedType) {\n        actualTypeArguments = ((ParameterizedType) parentType).getActualTypeArguments();\n      } else {\n        return null;\n      }\n",
            "patch_type": "insert",
            "next_line_no": 111
        },
        {
            "file_name": "gson/src/main/java/com/google/gson/TypeInfoFactory.java",
            "replaced_with": "      return actualTypeArguments[indexOfActualTypeArgument];\n    }\n",
            "patch_type": "insert",
            "next_line_no": 112
        },
        {
            "file_name": "gson/src/main/java/com/google/gson/TypeInfoFactory.java",
            "replaced_with": "    Type searchedType = null;\n    if (superClass != null) {\n      searchedType = extractTypeForHierarchy(superClass, typeToEvaluate);\n    }\n    return searchedType;\n  }\n",
            "patch_type": "insert",
            "next_line_no": 113
        }
    ]
}