{
    "com.google.gson.stream.JsonWriterTest::testTopLevelValueTypes": {
        "begin_line_no": 28,
        "end_line_no": 58,
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "to": [
            "  public void testTopLevelValueTypes$catena_1() throws IOException {\n    StringWriter string1 = new StringWriter();\n    JsonWriter writer1 = new JsonWriter(string1);\n    writer1.value(true);\n    writer1.close();\n    try{ assertEquals(\"true\", string1.toString());                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string2 = new StringWriter();\n    JsonWriter writer2 = new JsonWriter(string2);\n    writer2.nullValue();\n    writer2.close();\n    assertEquals(\"null\", string2.toString());                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n\n    StringWriter string3 = new StringWriter();\n    JsonWriter writer3 = new JsonWriter(string3);\n    writer3.value(123);\n    writer3.close();\n    try{ assertEquals(\"123\", string3.toString());                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string4 = new StringWriter();\n    JsonWriter writer4 = new JsonWriter(string4);\n    writer4.value(123.4);\n    writer4.close();\n    try{ assertEquals(\"123.4\", string4.toString());                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string5 = new StringWriter();\n    JsonWriter writert = new JsonWriter(string5);\n    writert.value(\"a\");\n    writert.close();\n    try{ assertEquals(\"\\\"a\\\"\", string5.toString());                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testTopLevelValueTypes$catena_0() throws IOException {\n    StringWriter string1 = new StringWriter();\n    JsonWriter writer1 = new JsonWriter(string1);\n    writer1.value(true);\n    writer1.close();\n    assertEquals(\"true\", string1.toString());                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n\n    StringWriter string2 = new StringWriter();\n    JsonWriter writer2 = new JsonWriter(string2);\n    writer2.nullValue();\n    writer2.close();\n    try{ assertEquals(\"null\", string2.toString());                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string3 = new StringWriter();\n    JsonWriter writer3 = new JsonWriter(string3);\n    writer3.value(123);\n    writer3.close();\n    try{ assertEquals(\"123\", string3.toString());                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string4 = new StringWriter();\n    JsonWriter writer4 = new JsonWriter(string4);\n    writer4.value(123.4);\n    writer4.close();\n    try{ assertEquals(\"123.4\", string4.toString());                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string5 = new StringWriter();\n    JsonWriter writert = new JsonWriter(string5);\n    writert.value(\"a\");\n    writert.close();\n    try{ assertEquals(\"\\\"a\\\"\", string5.toString());                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testTopLevelValueTypes$catena_4() throws IOException {\n    StringWriter string1 = new StringWriter();\n    JsonWriter writer1 = new JsonWriter(string1);\n    writer1.value(true);\n    writer1.close();\n    try{ assertEquals(\"true\", string1.toString());                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string2 = new StringWriter();\n    JsonWriter writer2 = new JsonWriter(string2);\n    writer2.nullValue();\n    writer2.close();\n    try{ assertEquals(\"null\", string2.toString());                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string3 = new StringWriter();\n    JsonWriter writer3 = new JsonWriter(string3);\n    writer3.value(123);\n    writer3.close();\n    try{ assertEquals(\"123\", string3.toString());                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string4 = new StringWriter();\n    JsonWriter writer4 = new JsonWriter(string4);\n    writer4.value(123.4);\n    writer4.close();\n    try{ assertEquals(\"123.4\", string4.toString());                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string5 = new StringWriter();\n    JsonWriter writert = new JsonWriter(string5);\n    writert.value(\"a\");\n    writert.close();\n    assertEquals(\"\\\"a\\\"\", string5.toString());                                                              /***** ORIGINAL ASSERTION IS HERE *****/\n  }",
            "  public void testTopLevelValueTypes$catena_2() throws IOException {\n    StringWriter string1 = new StringWriter();\n    JsonWriter writer1 = new JsonWriter(string1);\n    writer1.value(true);\n    writer1.close();\n    try{ assertEquals(\"true\", string1.toString());                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string2 = new StringWriter();\n    JsonWriter writer2 = new JsonWriter(string2);\n    writer2.nullValue();\n    writer2.close();\n    try{ assertEquals(\"null\", string2.toString());                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string3 = new StringWriter();\n    JsonWriter writer3 = new JsonWriter(string3);\n    writer3.value(123);\n    writer3.close();\n    assertEquals(\"123\", string3.toString());                                                                /***** ORIGINAL ASSERTION IS HERE *****/\n\n    StringWriter string4 = new StringWriter();\n    JsonWriter writer4 = new JsonWriter(string4);\n    writer4.value(123.4);\n    writer4.close();\n    try{ assertEquals(\"123.4\", string4.toString());                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string5 = new StringWriter();\n    JsonWriter writert = new JsonWriter(string5);\n    writert.value(\"a\");\n    writert.close();\n    try{ assertEquals(\"\\\"a\\\"\", string5.toString());                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testTopLevelValueTypes$catena_3() throws IOException {\n    StringWriter string1 = new StringWriter();\n    JsonWriter writer1 = new JsonWriter(string1);\n    writer1.value(true);\n    writer1.close();\n    try{ assertEquals(\"true\", string1.toString());                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string2 = new StringWriter();\n    JsonWriter writer2 = new JsonWriter(string2);\n    writer2.nullValue();\n    writer2.close();\n    try{ assertEquals(\"null\", string2.toString());                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string3 = new StringWriter();\n    JsonWriter writer3 = new JsonWriter(string3);\n    writer3.value(123);\n    writer3.close();\n    try{ assertEquals(\"123\", string3.toString());                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    StringWriter string4 = new StringWriter();\n    JsonWriter writer4 = new JsonWriter(string4);\n    writer4.value(123.4);\n    writer4.close();\n    assertEquals(\"123.4\", string4.toString());                                                              /***** ORIGINAL ASSERTION IS HERE *****/\n\n    StringWriter string5 = new StringWriter();\n    JsonWriter writert = new JsonWriter(string5);\n    writert.value(\"a\");\n    writert.close();\n    try{ assertEquals(\"\\\"a\\\"\", string5.toString());                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n  }"
        ]
    },
    "com.google.gson.stream.JsonReaderTest::testTopLevelValueTypeWithSkipValue": {
        "begin_line_no": 1249,
        "end_line_no": 1253,
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonReaderTest.java",
        "to": [
            ""
        ]
    },
    "com.google.gson.stream.JsonReaderTest::testTopLevelValueTypes": {
        "begin_line_no": 1222,
        "end_line_no": 1247,
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonReaderTest.java",
        "to": [
            ""
        ]
    }
}