{
    "patch": [
        {
            "file_name": "src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
            "replaced_with": "        if (len <= buf.length) {\n            text.getChars(offset, offset+len, buf, 0);\n            _writeRawSegment(buf, 0, len);\n            return;\n        }\n",
            "patch_type": "insert",
            "next_line_no": 528
        },
        {
            "file_name": "src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
            "replaced_with": "        final int maxChunk = (_outputEnd >> 2) + (_outputEnd >> 4); // == (1/4 + 1/16) == 5/16\n        final int maxBytes = maxChunk * 3;\n",
            "patch_type": "insert",
            "next_line_no": 532
        },
        {
            "file_name": "src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
            "from_line_no": 536,
            "to_line_no": 536,
            "replaced_with": "            if ((_outputTail + maxBytes) > _outputEnd) {\n                _flushBuffer();\n            }\n",
            "replaced": "            writeRaw(buf, 0, len2);\n",
            "patch_type": "replace",
            "next_line_no": 537
        },
        {
            "file_name": "src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
            "replaced_with": "    private void _writeRawSegment(char[] cbuf, int offset, int end) throws IOException\n    {\n        main_loop:\n        while (offset < end) {\n            inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= end) {\n                    break main_loop;\n                }\n            }\n            char ch = cbuf[offset++];\n            if (ch < 0x800) { // 2-byte?\n                _outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));\n                _outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n            } else {\n                offset = _outputRawMultiByteChar(ch, cbuf, offset, end);\n            }\n        }\n    }\n",
            "patch_type": "insert",
            "next_line_no": 672
        }
    ]
}