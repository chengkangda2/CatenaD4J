{
    "com.fasterxml.jackson.dataformat.xml.misc.XmlTextTest::testMixedContent": {
        "begin_line_no": 66,
        "end_line_no": 73,
        "file_path": "src/test/java/com/fasterxml/jackson/dataformat/xml/misc/XmlTextTest.java",
        "to": [
            "    public void testMixedContent$catena_0() throws Exception\n    {\n        WindSpeed result = MAPPER.readValue(\"<windSpeed units='kt'> 27 <radius>20</radius></windSpeed>\",\n                WindSpeed.class);\n        assertEquals(27, result.value);                                                                     /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertNotNull(result.radius);                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(20, result.radius.value);                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testMixedContent$catena_1() throws Exception\n    {\n        WindSpeed result = MAPPER.readValue(\"<windSpeed units='kt'> 27 <radius>20</radius></windSpeed>\",\n                WindSpeed.class);\n        try{ assertEquals(27, result.value);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertNotNull(result.radius);                                                                       /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(20, result.radius.value);                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testMixedContent$catena_2() throws Exception\n    {\n        WindSpeed result = MAPPER.readValue(\"<windSpeed units='kt'> 27 <radius>20</radius></windSpeed>\",\n                WindSpeed.class);\n        try{ assertEquals(27, result.value);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertNotNull(result.radius);                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(20, result.radius.value);                                                              /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    }
}