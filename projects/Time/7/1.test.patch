{
    "org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear": {
        "begin_line_no": 929,
        "end_line_no": 934,
        "file_path": "src/test/java/org/joda/time/format/TestDateTimeFormatter.java",
        "to": [
            "    public void testParseInto_monthDay_feb29_newYork_startOfYear$catena_0() {\n        DateTimeFormatter f = DateTimeFormat.forPattern(\"M d\").withLocale(Locale.UK);\n        MutableDateTime result = new MutableDateTime(2004, 1, 1, 0, 0, 0, 0, NEWYORK);\n        assertEquals(4, f.parseInto(result, \"2 29\", 0));                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(new MutableDateTime(2004, 2, 29, 0, 0, 0, 0, NEWYORK), result);                   }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testParseInto_monthDay_feb29_newYork_startOfYear$catena_1() {\n        DateTimeFormatter f = DateTimeFormat.forPattern(\"M d\").withLocale(Locale.UK);\n        MutableDateTime result = new MutableDateTime(2004, 1, 1, 0, 0, 0, 0, NEWYORK);\n        try{ assertEquals(4, f.parseInto(result, \"2 29\", 0));                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(new MutableDateTime(2004, 2, 29, 0, 0, 0, 0, NEWYORK), result);                        /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    },
    "org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear": {
        "begin_line_no": 957,
        "end_line_no": 962,
        "file_path": "src/test/java/org/joda/time/format/TestDateTimeFormatter.java",
        "to": [
            "    public void testParseInto_monthDay_feb29_tokyo_endOfYear$catena_0() {\n        DateTimeFormatter f = DateTimeFormat.forPattern(\"M d\").withLocale(Locale.UK);\n        MutableDateTime result = new MutableDateTime(2004, 12, 31, 23, 59, 59, 999, TOKYO);\n        assertEquals(4, f.parseInto(result, \"2 29\", 0));                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(new MutableDateTime(2004, 2, 29, 23, 59, 59, 999, TOKYO), result);                }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testParseInto_monthDay_feb29_tokyo_endOfYear$catena_1() {\n        DateTimeFormatter f = DateTimeFormat.forPattern(\"M d\").withLocale(Locale.UK);\n        MutableDateTime result = new MutableDateTime(2004, 12, 31, 23, 59, 59, 999, TOKYO);\n        try{ assertEquals(4, f.parseInto(result, \"2 29\", 0));                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(new MutableDateTime(2004, 2, 29, 23, 59, 59, 999, TOKYO), result);                     /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    }
}