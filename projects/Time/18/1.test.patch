{
    "org.joda.time.chrono.TestGJChronology::testLeapYearRulesConstruction": {
        "begin_line_no": 494,
        "end_line_no": 500,
        "file_path": "src/test/java/org/joda/time/chrono/TestGJChronology.java",
        "to": [
            "    public void testLeapYearRulesConstruction$catena_1() {\n        // 1500 not leap in Gregorian, but is leap in Julian\n        DateMidnight dt = new DateMidnight(1500, 2, 29, GJChronology.getInstanceUTC());\n        try{ assertEquals(dt.getYear(), 1500);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(dt.getMonthOfYear(), 2);                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(dt.getDayOfMonth(), 29);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testLeapYearRulesConstruction$catena_0() {\n        // 1500 not leap in Gregorian, but is leap in Julian\n        DateMidnight dt = new DateMidnight(1500, 2, 29, GJChronology.getInstanceUTC());\n        assertEquals(dt.getYear(), 1500);                                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(dt.getMonthOfYear(), 2);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(dt.getDayOfMonth(), 29);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testLeapYearRulesConstruction$catena_2() {\n        // 1500 not leap in Gregorian, but is leap in Julian\n        DateMidnight dt = new DateMidnight(1500, 2, 29, GJChronology.getInstanceUTC());\n        try{ assertEquals(dt.getYear(), 1500);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(dt.getMonthOfYear(), 2);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(dt.getDayOfMonth(), 29);                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    }
}