{
    "patch": [
        {
            "file_name": "src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java",
            "replaced_with": "            if (DeflateCompressorInputStream.matches(signature, signatureLength)) {\n                return new DeflateCompressorInputStream(in);\n            }\n",
            "patch_type": "insert",
            "next_line_no": 240
        },
        {
            "file_name": "src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java",
            "replaced_with": "    private static final int MAGIC_1 = 0x78;\n    private static final int MAGIC_2a = 0x01;\n    private static final int MAGIC_2b = 0x5e;\n    private static final int MAGIC_2c = 0x9c;\n    private static final int MAGIC_2d = 0xda;\n",
            "patch_type": "insert",
            "next_line_no": 33
        },
        {
            "file_name": "src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java",
            "replaced_with": "    public static boolean matches(byte[] signature, int length) {\n        return length > 3 && signature[0] == MAGIC_1 && (\n                signature[1] == (byte) MAGIC_2a ||\n                signature[1] == (byte) MAGIC_2b ||\n                signature[1] == (byte) MAGIC_2c ||\n                signature[1] == (byte) MAGIC_2d);\n    }\n",
            "patch_type": "insert",
            "next_line_no": 106
        }
    ]
}