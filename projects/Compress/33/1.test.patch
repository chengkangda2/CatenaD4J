{
    "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection": {
        "begin_line_no": 90,
        "end_line_no": 118,
        "file_path": "src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java",
        "to": [
            "    @Test\n    public void testDetection$catena_6() throws Exception {\n        CompressorInputStream bzip2 = getStreamFor(\"bla.txt.bz2\"); \n        try{ assertNotNull(bzip2);                                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(bzip2 instanceof BZip2CompressorInputStream);                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream gzip = getStreamFor(\"bla.tgz\");\n        try{ assertNotNull(gzip);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(gzip instanceof GzipCompressorInputStream);                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        CompressorInputStream pack200 = getStreamFor(\"bla.pack\");\n        try{ assertNotNull(pack200);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(pack200 instanceof Pack200CompressorInputStream);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream xz = getStreamFor(\"bla.tar.xz\");\n        assertNotNull(xz);                                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(xz instanceof XZCompressorInputStream);                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream zlib = getStreamFor(\"bla.tar.deflatez\");\n        try{ assertNotNull(zlib);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(zlib instanceof DeflateCompressorInputStream);                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try {\n            factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));\n            try{ fail(\"No exception thrown for an empty input stream\");                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (CompressorException e) {\n            // expected\n        }\n    }",
            "    @Test\n    public void testDetection$catena_2() throws Exception {\n        CompressorInputStream bzip2 = getStreamFor(\"bla.txt.bz2\"); \n        try{ assertNotNull(bzip2);                                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(bzip2 instanceof BZip2CompressorInputStream);                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream gzip = getStreamFor(\"bla.tgz\");\n        assertNotNull(gzip);                                                                                /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(gzip instanceof GzipCompressorInputStream);                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        CompressorInputStream pack200 = getStreamFor(\"bla.pack\");\n        try{ assertNotNull(pack200);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(pack200 instanceof Pack200CompressorInputStream);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream xz = getStreamFor(\"bla.tar.xz\");\n        try{ assertNotNull(xz);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(xz instanceof XZCompressorInputStream);                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream zlib = getStreamFor(\"bla.tar.deflatez\");\n        try{ assertNotNull(zlib);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(zlib instanceof DeflateCompressorInputStream);                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try {\n            factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));\n            try{ fail(\"No exception thrown for an empty input stream\");                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (CompressorException e) {\n            // expected\n        }\n    }",
            "    @Test\n    public void testDetection$catena_0() throws Exception {\n        CompressorInputStream bzip2 = getStreamFor(\"bla.txt.bz2\"); \n        assertNotNull(bzip2);                                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(bzip2 instanceof BZip2CompressorInputStream);                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream gzip = getStreamFor(\"bla.tgz\");\n        try{ assertNotNull(gzip);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(gzip instanceof GzipCompressorInputStream);                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        CompressorInputStream pack200 = getStreamFor(\"bla.pack\");\n        try{ assertNotNull(pack200);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(pack200 instanceof Pack200CompressorInputStream);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream xz = getStreamFor(\"bla.tar.xz\");\n        try{ assertNotNull(xz);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(xz instanceof XZCompressorInputStream);                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream zlib = getStreamFor(\"bla.tar.deflatez\");\n        try{ assertNotNull(zlib);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(zlib instanceof DeflateCompressorInputStream);                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try {\n            factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));\n            try{ fail(\"No exception thrown for an empty input stream\");                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (CompressorException e) {\n            // expected\n        }\n    }",
            "    @Test\n    public void testDetection$catena_9() throws Exception {\n        CompressorInputStream bzip2 = getStreamFor(\"bla.txt.bz2\"); \n        try{ assertNotNull(bzip2);                                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(bzip2 instanceof BZip2CompressorInputStream);                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream gzip = getStreamFor(\"bla.tgz\");\n        try{ assertNotNull(gzip);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(gzip instanceof GzipCompressorInputStream);                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        CompressorInputStream pack200 = getStreamFor(\"bla.pack\");\n        try{ assertNotNull(pack200);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(pack200 instanceof Pack200CompressorInputStream);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream xz = getStreamFor(\"bla.tar.xz\");\n        try{ assertNotNull(xz);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(xz instanceof XZCompressorInputStream);                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream zlib = getStreamFor(\"bla.tar.deflatez\");\n        try{ assertNotNull(zlib);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(zlib instanceof DeflateCompressorInputStream);                                           /***** ORIGINAL ASSERTION IS HERE *****/\n\n        try {\n            factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));\n            try{ fail(\"No exception thrown for an empty input stream\");                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (CompressorException e) {\n            // expected\n        }\n    }",
            "    @Test\n    public void testDetection$catena_7() throws Exception {\n        CompressorInputStream bzip2 = getStreamFor(\"bla.txt.bz2\"); \n        try{ assertNotNull(bzip2);                                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(bzip2 instanceof BZip2CompressorInputStream);                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream gzip = getStreamFor(\"bla.tgz\");\n        try{ assertNotNull(gzip);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(gzip instanceof GzipCompressorInputStream);                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        CompressorInputStream pack200 = getStreamFor(\"bla.pack\");\n        try{ assertNotNull(pack200);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(pack200 instanceof Pack200CompressorInputStream);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream xz = getStreamFor(\"bla.tar.xz\");\n        try{ assertNotNull(xz);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(xz instanceof XZCompressorInputStream);                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n\n        CompressorInputStream zlib = getStreamFor(\"bla.tar.deflatez\");\n        try{ assertNotNull(zlib);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(zlib instanceof DeflateCompressorInputStream);                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try {\n            factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));\n            try{ fail(\"No exception thrown for an empty input stream\");                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (CompressorException e) {\n            // expected\n        }\n    }",
            "    @Test\n    public void testDetection$catena_8() throws Exception {\n        CompressorInputStream bzip2 = getStreamFor(\"bla.txt.bz2\"); \n        try{ assertNotNull(bzip2);                                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(bzip2 instanceof BZip2CompressorInputStream);                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream gzip = getStreamFor(\"bla.tgz\");\n        try{ assertNotNull(gzip);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(gzip instanceof GzipCompressorInputStream);                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        CompressorInputStream pack200 = getStreamFor(\"bla.pack\");\n        try{ assertNotNull(pack200);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(pack200 instanceof Pack200CompressorInputStream);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream xz = getStreamFor(\"bla.tar.xz\");\n        try{ assertNotNull(xz);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(xz instanceof XZCompressorInputStream);                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream zlib = getStreamFor(\"bla.tar.deflatez\");\n        assertNotNull(zlib);                                                                                /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(zlib instanceof DeflateCompressorInputStream);                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try {\n            factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));\n            try{ fail(\"No exception thrown for an empty input stream\");                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (CompressorException e) {\n            // expected\n        }\n    }",
            "    @Test\n    public void testDetection$catena_3() throws Exception {\n        CompressorInputStream bzip2 = getStreamFor(\"bla.txt.bz2\"); \n        try{ assertNotNull(bzip2);                                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(bzip2 instanceof BZip2CompressorInputStream);                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream gzip = getStreamFor(\"bla.tgz\");\n        try{ assertNotNull(gzip);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(gzip instanceof GzipCompressorInputStream);                                              /***** ORIGINAL ASSERTION IS HERE *****/\n        \n        CompressorInputStream pack200 = getStreamFor(\"bla.pack\");\n        try{ assertNotNull(pack200);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(pack200 instanceof Pack200CompressorInputStream);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream xz = getStreamFor(\"bla.tar.xz\");\n        try{ assertNotNull(xz);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(xz instanceof XZCompressorInputStream);                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream zlib = getStreamFor(\"bla.tar.deflatez\");\n        try{ assertNotNull(zlib);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(zlib instanceof DeflateCompressorInputStream);                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try {\n            factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));\n            try{ fail(\"No exception thrown for an empty input stream\");                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (CompressorException e) {\n            // expected\n        }\n    }",
            "    @Test\n    public void testDetection$catena_10() throws Exception {\n        CompressorInputStream bzip2 = getStreamFor(\"bla.txt.bz2\"); \n        try{ assertNotNull(bzip2);                                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(bzip2 instanceof BZip2CompressorInputStream);                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream gzip = getStreamFor(\"bla.tgz\");\n        try{ assertNotNull(gzip);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(gzip instanceof GzipCompressorInputStream);                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        CompressorInputStream pack200 = getStreamFor(\"bla.pack\");\n        try{ assertNotNull(pack200);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(pack200 instanceof Pack200CompressorInputStream);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream xz = getStreamFor(\"bla.tar.xz\");\n        try{ assertNotNull(xz);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(xz instanceof XZCompressorInputStream);                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream zlib = getStreamFor(\"bla.tar.deflatez\");\n        try{ assertNotNull(zlib);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(zlib instanceof DeflateCompressorInputStream);                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try {\n            factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));\n            fail(\"No exception thrown for an empty input stream\");                                          /***** ORIGINAL ASSERTION IS HERE *****/\n        } catch (CompressorException e) {\n            // expected\n        }\n    }",
            "    @Test\n    public void testDetection$catena_4() throws Exception {\n        CompressorInputStream bzip2 = getStreamFor(\"bla.txt.bz2\"); \n        try{ assertNotNull(bzip2);                                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(bzip2 instanceof BZip2CompressorInputStream);                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream gzip = getStreamFor(\"bla.tgz\");\n        try{ assertNotNull(gzip);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(gzip instanceof GzipCompressorInputStream);                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        CompressorInputStream pack200 = getStreamFor(\"bla.pack\");\n        assertNotNull(pack200);                                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(pack200 instanceof Pack200CompressorInputStream);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream xz = getStreamFor(\"bla.tar.xz\");\n        try{ assertNotNull(xz);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(xz instanceof XZCompressorInputStream);                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream zlib = getStreamFor(\"bla.tar.deflatez\");\n        try{ assertNotNull(zlib);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(zlib instanceof DeflateCompressorInputStream);                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try {\n            factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));\n            try{ fail(\"No exception thrown for an empty input stream\");                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (CompressorException e) {\n            // expected\n        }\n    }",
            "    @Test\n    public void testDetection$catena_5() throws Exception {\n        CompressorInputStream bzip2 = getStreamFor(\"bla.txt.bz2\"); \n        try{ assertNotNull(bzip2);                                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(bzip2 instanceof BZip2CompressorInputStream);                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream gzip = getStreamFor(\"bla.tgz\");\n        try{ assertNotNull(gzip);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(gzip instanceof GzipCompressorInputStream);                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        CompressorInputStream pack200 = getStreamFor(\"bla.pack\");\n        try{ assertNotNull(pack200);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(pack200 instanceof Pack200CompressorInputStream);                                        /***** ORIGINAL ASSERTION IS HERE *****/\n\n        CompressorInputStream xz = getStreamFor(\"bla.tar.xz\");\n        try{ assertNotNull(xz);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(xz instanceof XZCompressorInputStream);                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream zlib = getStreamFor(\"bla.tar.deflatez\");\n        try{ assertNotNull(zlib);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(zlib instanceof DeflateCompressorInputStream);                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try {\n            factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));\n            try{ fail(\"No exception thrown for an empty input stream\");                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (CompressorException e) {\n            // expected\n        }\n    }",
            "    @Test\n    public void testDetection$catena_1() throws Exception {\n        CompressorInputStream bzip2 = getStreamFor(\"bla.txt.bz2\"); \n        try{ assertNotNull(bzip2);                                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(bzip2 instanceof BZip2CompressorInputStream);                                            /***** ORIGINAL ASSERTION IS HERE *****/\n\n        CompressorInputStream gzip = getStreamFor(\"bla.tgz\");\n        try{ assertNotNull(gzip);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(gzip instanceof GzipCompressorInputStream);                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        CompressorInputStream pack200 = getStreamFor(\"bla.pack\");\n        try{ assertNotNull(pack200);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(pack200 instanceof Pack200CompressorInputStream);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream xz = getStreamFor(\"bla.tar.xz\");\n        try{ assertNotNull(xz);                                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(xz instanceof XZCompressorInputStream);                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        CompressorInputStream zlib = getStreamFor(\"bla.tar.deflatez\");\n        try{ assertNotNull(zlib);                                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(zlib instanceof DeflateCompressorInputStream);                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try {\n            factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));\n            try{ fail(\"No exception thrown for an empty input stream\");                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (CompressorException e) {\n            // expected\n        }\n    }"
        ]
    }
}