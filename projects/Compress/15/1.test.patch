{
    "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest::testNullCommentEqualsEmptyComment": {
        "begin_line_no": 243,
        "end_line_no": 253,
        "file_path": "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java",
        "to": [
            "    public void testNullCommentEqualsEmptyComment$catena_0() {\n        ZipArchiveEntry entry1 = new ZipArchiveEntry(\"foo\");\n        ZipArchiveEntry entry2 = new ZipArchiveEntry(\"foo\");\n        ZipArchiveEntry entry3 = new ZipArchiveEntry(\"foo\");\n        entry1.setComment(null);\n        entry2.setComment(\"\");\n        entry3.setComment(\"bar\");\n        assertEquals(entry1, entry2);                                                                       /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertFalse(entry1.equals(entry3));                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertFalse(entry2.equals(entry3));                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testNullCommentEqualsEmptyComment$catena_1() {\n        ZipArchiveEntry entry1 = new ZipArchiveEntry(\"foo\");\n        ZipArchiveEntry entry2 = new ZipArchiveEntry(\"foo\");\n        ZipArchiveEntry entry3 = new ZipArchiveEntry(\"foo\");\n        entry1.setComment(null);\n        entry2.setComment(\"\");\n        entry3.setComment(\"bar\");\n        try{ assertEquals(entry1, entry2);                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertFalse(entry1.equals(entry3));                                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertFalse(entry2.equals(entry3));                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testNullCommentEqualsEmptyComment$catena_2() {\n        ZipArchiveEntry entry1 = new ZipArchiveEntry(\"foo\");\n        ZipArchiveEntry entry2 = new ZipArchiveEntry(\"foo\");\n        ZipArchiveEntry entry3 = new ZipArchiveEntry(\"foo\");\n        entry1.setComment(null);\n        entry2.setComment(\"\");\n        entry3.setComment(\"bar\");\n        try{ assertEquals(entry1, entry2);                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertFalse(entry1.equals(entry3));                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertFalse(entry2.equals(entry3));                                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    }
}