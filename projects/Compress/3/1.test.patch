{
    "org.apache.commons.compress.archivers.ArchiveOutputStreamTest::testFinish": {
        "begin_line_no": 24,
        "end_line_no": 71,
        "file_path": "src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java",
        "to": [
            "    public void testFinish$catena_4() throws Exception {\n        OutputStream out1 = new ByteArrayOutputStream();\n        \n        ArchiveOutputStream aos1 = factory.createArchiveOutputStream(\"zip\", out1);\n        aos1.putArchiveEntry(new ZipArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"jar\", out1);\n        aos1.putArchiveEntry(new JarArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"ar\", out1);\n        aos1.putArchiveEntry(new ArArchiveEntry(\"dummy\", 100));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"cpio\", out1);\n        aos1.putArchiveEntry(new CpioArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"tar\", out1);\n        aos1.putArchiveEntry(new TarArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            fail(\"After putArchive should follow closeArchive\");                                            /***** ORIGINAL ASSERTION IS HERE *****/\n        } catch (IOException io) {\n            // Exception expected\n        }\n    }",
            "    public void testFinish$catena_0() throws Exception {\n        OutputStream out1 = new ByteArrayOutputStream();\n        \n        ArchiveOutputStream aos1 = factory.createArchiveOutputStream(\"zip\", out1);\n        aos1.putArchiveEntry(new ZipArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            fail(\"After putArchive should follow closeArchive\");                                            /***** ORIGINAL ASSERTION IS HERE *****/\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"jar\", out1);\n        aos1.putArchiveEntry(new JarArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"ar\", out1);\n        aos1.putArchiveEntry(new ArArchiveEntry(\"dummy\", 100));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"cpio\", out1);\n        aos1.putArchiveEntry(new CpioArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"tar\", out1);\n        aos1.putArchiveEntry(new TarArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n    }",
            "    public void testFinish$catena_1() throws Exception {\n        OutputStream out1 = new ByteArrayOutputStream();\n        \n        ArchiveOutputStream aos1 = factory.createArchiveOutputStream(\"zip\", out1);\n        aos1.putArchiveEntry(new ZipArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"jar\", out1);\n        aos1.putArchiveEntry(new JarArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            fail(\"After putArchive should follow closeArchive\");                                            /***** ORIGINAL ASSERTION IS HERE *****/\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"ar\", out1);\n        aos1.putArchiveEntry(new ArArchiveEntry(\"dummy\", 100));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"cpio\", out1);\n        aos1.putArchiveEntry(new CpioArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"tar\", out1);\n        aos1.putArchiveEntry(new TarArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n    }",
            "    public void testFinish$catena_2() throws Exception {\n        OutputStream out1 = new ByteArrayOutputStream();\n        \n        ArchiveOutputStream aos1 = factory.createArchiveOutputStream(\"zip\", out1);\n        aos1.putArchiveEntry(new ZipArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"jar\", out1);\n        aos1.putArchiveEntry(new JarArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"ar\", out1);\n        aos1.putArchiveEntry(new ArArchiveEntry(\"dummy\", 100));\n        try {\n            aos1.finish();\n            fail(\"After putArchive should follow closeArchive\");                                            /***** ORIGINAL ASSERTION IS HERE *****/\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"cpio\", out1);\n        aos1.putArchiveEntry(new CpioArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"tar\", out1);\n        aos1.putArchiveEntry(new TarArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n    }",
            "    public void testFinish$catena_3() throws Exception {\n        OutputStream out1 = new ByteArrayOutputStream();\n        \n        ArchiveOutputStream aos1 = factory.createArchiveOutputStream(\"zip\", out1);\n        aos1.putArchiveEntry(new ZipArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"jar\", out1);\n        aos1.putArchiveEntry(new JarArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"ar\", out1);\n        aos1.putArchiveEntry(new ArArchiveEntry(\"dummy\", 100));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"cpio\", out1);\n        aos1.putArchiveEntry(new CpioArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            fail(\"After putArchive should follow closeArchive\");                                            /***** ORIGINAL ASSERTION IS HERE *****/\n        } catch (IOException io) {\n            // Exception expected\n        }\n        \n        aos1 = factory.createArchiveOutputStream(\"tar\", out1);\n        aos1.putArchiveEntry(new TarArchiveEntry(\"dummy\"));\n        try {\n            aos1.finish();\n            try{ fail(\"After putArchive should follow closeArchive\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (IOException io) {\n            // Exception expected\n        }\n    }"
        ]
    }
}