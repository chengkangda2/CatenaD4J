{
    "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest::properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown": {
        "begin_line_no": 329,
        "end_line_no": 341,
        "file_path": "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java",
        "to": [
            "    @Test\n    public void properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown$catena_2() throws Exception {\n        // we never read any data\n        try (ZipArchiveInputStream zis = new ZipArchiveInputStream(new ByteArrayInputStream(new byte[0]))) {\n            ZipArchiveEntry e = new ZipArchiveEntry(\"test\");\n            e.setMethod(ZipMethod.DEFLATED.getCode());\n            try{ assertTrue(zis.canReadEntryData(e));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n            e.setMethod(ZipMethod.ENHANCED_DEFLATED.getCode());\n            try{ assertTrue(zis.canReadEntryData(e));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n            e.setMethod(ZipMethod.BZIP2.getCode());\n            assertFalse(zis.canReadEntryData(e));                                                           /***** ORIGINAL ASSERTION IS HERE *****/\n        }\n    }",
            "    @Test\n    public void properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown$catena_0() throws Exception {\n        // we never read any data\n        try (ZipArchiveInputStream zis = new ZipArchiveInputStream(new ByteArrayInputStream(new byte[0]))) {\n            ZipArchiveEntry e = new ZipArchiveEntry(\"test\");\n            e.setMethod(ZipMethod.DEFLATED.getCode());\n            assertTrue(zis.canReadEntryData(e));                                                            /***** ORIGINAL ASSERTION IS HERE *****/\n            e.setMethod(ZipMethod.ENHANCED_DEFLATED.getCode());\n            try{ assertTrue(zis.canReadEntryData(e));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n            e.setMethod(ZipMethod.BZIP2.getCode());\n            try{ assertFalse(zis.canReadEntryData(e));                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n    }",
            "    @Test\n    public void properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown$catena_1() throws Exception {\n        // we never read any data\n        try (ZipArchiveInputStream zis = new ZipArchiveInputStream(new ByteArrayInputStream(new byte[0]))) {\n            ZipArchiveEntry e = new ZipArchiveEntry(\"test\");\n            e.setMethod(ZipMethod.DEFLATED.getCode());\n            try{ assertTrue(zis.canReadEntryData(e));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n            e.setMethod(ZipMethod.ENHANCED_DEFLATED.getCode());\n            assertTrue(zis.canReadEntryData(e));                                                            /***** ORIGINAL ASSERTION IS HERE *****/\n            e.setMethod(ZipMethod.BZIP2.getCode());\n            try{ assertFalse(zis.canReadEntryData(e));                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n    }"
        ]
    }
}