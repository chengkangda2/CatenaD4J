{
    "com.fasterxml.jackson.databind.deser.TestJdkTypes::testLocale": {
        "begin_line_no": 142,
        "end_line_no": 154,
        "file_path": "src/test/java/com/fasterxml/jackson/databind/deser/TestJdkTypes.java",
        "to": [
            "    public void testLocale$catena_3() throws IOException\n    {\n        try{ assertEquals(new Locale(\"en\"), MAPPER.readValue(quote(\"en\"), Locale.class));                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Locale(\"es\", \"ES\"), MAPPER.readValue(quote(\"es_ES\"), Locale.class));          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Locale(\"FI\", \"fi\", \"savo\"),\n                MAPPER.readValue(quote(\"fi_FI_savo\"), Locale.class));                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(new Locale(\"en\", \"US\"),\n                MAPPER.readValue(quote(\"en-US\"), Locale.class));                                            /***** ORIGINAL ASSERTION IS HERE *****/\n\n        // [databind#1123]\n        Locale loc = MAPPER.readValue(quote(\"\"), Locale.class);\n        try{ assertSame(Locale.ROOT, loc);                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testLocale$catena_0() throws IOException\n    {\n        assertEquals(new Locale(\"en\"), MAPPER.readValue(quote(\"en\"), Locale.class));                        /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(new Locale(\"es\", \"ES\"), MAPPER.readValue(quote(\"es_ES\"), Locale.class));          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Locale(\"FI\", \"fi\", \"savo\"),\n                MAPPER.readValue(quote(\"fi_FI_savo\"), Locale.class));                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Locale(\"en\", \"US\"),\n                MAPPER.readValue(quote(\"en-US\"), Locale.class));                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // [databind#1123]\n        Locale loc = MAPPER.readValue(quote(\"\"), Locale.class);\n        try{ assertSame(Locale.ROOT, loc);                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testLocale$catena_1() throws IOException\n    {\n        try{ assertEquals(new Locale(\"en\"), MAPPER.readValue(quote(\"en\"), Locale.class));                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(new Locale(\"es\", \"ES\"), MAPPER.readValue(quote(\"es_ES\"), Locale.class));               /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(new Locale(\"FI\", \"fi\", \"savo\"),\n                MAPPER.readValue(quote(\"fi_FI_savo\"), Locale.class));                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Locale(\"en\", \"US\"),\n                MAPPER.readValue(quote(\"en-US\"), Locale.class));                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // [databind#1123]\n        Locale loc = MAPPER.readValue(quote(\"\"), Locale.class);\n        try{ assertSame(Locale.ROOT, loc);                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testLocale$catena_2() throws IOException\n    {\n        try{ assertEquals(new Locale(\"en\"), MAPPER.readValue(quote(\"en\"), Locale.class));                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Locale(\"es\", \"ES\"), MAPPER.readValue(quote(\"es_ES\"), Locale.class));          }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(new Locale(\"FI\", \"fi\", \"savo\"),\n                MAPPER.readValue(quote(\"fi_FI_savo\"), Locale.class));                                       /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(new Locale(\"en\", \"US\"),\n                MAPPER.readValue(quote(\"en-US\"), Locale.class));                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // [databind#1123]\n        Locale loc = MAPPER.readValue(quote(\"\"), Locale.class);\n        try{ assertSame(Locale.ROOT, loc);                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testLocale$catena_4() throws IOException\n    {\n        try{ assertEquals(new Locale(\"en\"), MAPPER.readValue(quote(\"en\"), Locale.class));                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Locale(\"es\", \"ES\"), MAPPER.readValue(quote(\"es_ES\"), Locale.class));          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Locale(\"FI\", \"fi\", \"savo\"),\n                MAPPER.readValue(quote(\"fi_FI_savo\"), Locale.class));                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Locale(\"en\", \"US\"),\n                MAPPER.readValue(quote(\"en-US\"), Locale.class));                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // [databind#1123]\n        Locale loc = MAPPER.readValue(quote(\"\"), Locale.class);\n        assertSame(Locale.ROOT, loc);                                                                       /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    }
}