{
    "com.fasterxml.jackson.databind.interop.DeprecatedTypeHandling1102Test::testDeprecatedTypeResolution": {
        "begin_line_no": 92,
        "end_line_no": 108,
        "file_path": "src/test/java/com/fasterxml/jackson/databind/interop/DeprecatedTypeHandling1102Test.java",
        "to": [
            "    @SuppressWarnings(\"deprecation\")\n    public void testDeprecatedTypeResolution$catena_2() throws Exception\n    {\n        TypeFactory tf = MAPPER.getTypeFactory();\n\n        // first, with real (if irrelevant) context\n        JavaType t = tf.constructType(Point.class, getClass());\n        try{ assertEquals(Point.class, t.getRawClass());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // and then missing context\n        JavaType t2 = tf.constructType(Point.class, (Class<?>) null);\n        try{ assertEquals(Point.class, t2.getRawClass());                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        JavaType ctxt = tf.constructType(getClass());\n        JavaType t3 = tf.constructType(Point.class, ctxt);\n        assertEquals(Point.class, t3.getRawClass());                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    @SuppressWarnings(\"deprecation\")\n    public void testDeprecatedTypeResolution$catena_0() throws Exception\n    {\n        TypeFactory tf = MAPPER.getTypeFactory();\n\n        // first, with real (if irrelevant) context\n        JavaType t = tf.constructType(Point.class, getClass());\n        assertEquals(Point.class, t.getRawClass());                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n\n        // and then missing context\n        JavaType t2 = tf.constructType(Point.class, (Class<?>) null);\n        try{ assertEquals(Point.class, t2.getRawClass());                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        JavaType ctxt = tf.constructType(getClass());\n        JavaType t3 = tf.constructType(Point.class, ctxt);\n        try{ assertEquals(Point.class, t3.getRawClass());                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @SuppressWarnings(\"deprecation\")\n    public void testDeprecatedTypeResolution$catena_1() throws Exception\n    {\n        TypeFactory tf = MAPPER.getTypeFactory();\n\n        // first, with real (if irrelevant) context\n        JavaType t = tf.constructType(Point.class, getClass());\n        try{ assertEquals(Point.class, t.getRawClass());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // and then missing context\n        JavaType t2 = tf.constructType(Point.class, (Class<?>) null);\n        assertEquals(Point.class, t2.getRawClass());                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n\n        JavaType ctxt = tf.constructType(getClass());\n        JavaType t3 = tf.constructType(Point.class, ctxt);\n        try{ assertEquals(Point.class, t3.getRawClass());                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}