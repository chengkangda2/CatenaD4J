{
    "patch": [
        {
            "file_name": "src/main/java/com/fasterxml/jackson/databind/ObjectReader.java",
            "from_line_no": 1169,
            "to_line_no": 1169,
            "replaced_with": "        return (T) _bindAsTreeOrNull(p);\n",
            "replaced": "        return (T) _bindAsTree(p);\n",
            "patch_type": "replace",
            "next_line_no": 1170
        },
        {
            "file_name": "src/main/java/com/fasterxml/jackson/databind/ObjectReader.java",
            "replaced_with": "    protected final JsonNode _bindAsTreeOrNull(JsonParser p) throws IOException\n    {\n        _config.initialize(p);\n        if (_schema != null) {\n            p.setSchema(_schema);\n        }\n        JsonToken t = p.getCurrentToken();\n        if (t == null) {\n            t = p.nextToken();\n            if (t == null) {\n                return null;\n            }\n        }\n        final JsonNode resultNode;\n        if (t == JsonToken.VALUE_NULL) {\n            resultNode = _config.getNodeFactory().nullNode();\n        } else {\n            final DeserializationContext ctxt = createDeserializationContext(p);\n            final JsonDeserializer<Object> deser = _findTreeDeserializer(ctxt);\n            if (_unwrapRoot) {\n                resultNode = (JsonNode) _unwrapAndDeserialize(p, ctxt, JSON_NODE_TYPE, deser);\n            } else {\n                resultNode = (JsonNode) deser.deserialize(p, ctxt);\n                if (_config.isEnabled(DeserializationFeature.FAIL_ON_TRAILING_TOKENS)) {\n                    _verifyNoTrailingTokens(p, ctxt, JSON_NODE_TYPE);\n                }\n            }\n        }\n        return resultNode;\n    }\n",
            "patch_type": "insert",
            "next_line_no": 1707
        }
    ]
}