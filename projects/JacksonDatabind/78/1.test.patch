{
    "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest::testIssue1599": {
        "begin_line_no": 16,
        "end_line_no": 39,
        "file_path": "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java",
        "to": [
            "    public void testIssue1599$catena_2() throws Exception\n    {\n        final String JSON = aposToQuotes(\n \"{'id': 124,\\n\"\n+\" 'obj':[ 'com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl',\\n\"\n+\"  {\\n\"\n+\"    'transletBytecodes' : [ 'AAIAZQ==' ],\\n\"\n+\"    'transletName' : 'a.b',\\n\"\n+\"    'outputProperties' : { }\\n\"\n+\"  }\\n\"\n+\" ]\\n\"\n+\"}\"\n        );\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.enableDefaultTyping();\n        try {\n            mapper.readValue(JSON, Bean1599.class);\n            try{ fail(\"Should not pass\");                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (JsonMappingException e) {\n            try{ verifyException(e, \"Illegal type\");                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n            verifyException(e, \"to deserialize\");                                                           /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ verifyException(e, \"prevented for security reasons\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n    }",
            "    public void testIssue1599$catena_3() throws Exception\n    {\n        final String JSON = aposToQuotes(\n \"{'id': 124,\\n\"\n+\" 'obj':[ 'com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl',\\n\"\n+\"  {\\n\"\n+\"    'transletBytecodes' : [ 'AAIAZQ==' ],\\n\"\n+\"    'transletName' : 'a.b',\\n\"\n+\"    'outputProperties' : { }\\n\"\n+\"  }\\n\"\n+\" ]\\n\"\n+\"}\"\n        );\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.enableDefaultTyping();\n        try {\n            mapper.readValue(JSON, Bean1599.class);\n            try{ fail(\"Should not pass\");                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (JsonMappingException e) {\n            try{ verifyException(e, \"Illegal type\");                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ verifyException(e, \"to deserialize\");                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n            verifyException(e, \"prevented for security reasons\");                                           /***** ORIGINAL ASSERTION IS HERE *****/\n        }\n    }",
            "    public void testIssue1599$catena_1() throws Exception\n    {\n        final String JSON = aposToQuotes(\n \"{'id': 124,\\n\"\n+\" 'obj':[ 'com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl',\\n\"\n+\"  {\\n\"\n+\"    'transletBytecodes' : [ 'AAIAZQ==' ],\\n\"\n+\"    'transletName' : 'a.b',\\n\"\n+\"    'outputProperties' : { }\\n\"\n+\"  }\\n\"\n+\" ]\\n\"\n+\"}\"\n        );\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.enableDefaultTyping();\n        try {\n            mapper.readValue(JSON, Bean1599.class);\n            try{ fail(\"Should not pass\");                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (JsonMappingException e) {\n            verifyException(e, \"Illegal type\");                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ verifyException(e, \"to deserialize\");                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ verifyException(e, \"prevented for security reasons\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n    }",
            "    public void testIssue1599$catena_0() throws Exception\n    {\n        final String JSON = aposToQuotes(\n \"{'id': 124,\\n\"\n+\" 'obj':[ 'com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl',\\n\"\n+\"  {\\n\"\n+\"    'transletBytecodes' : [ 'AAIAZQ==' ],\\n\"\n+\"    'transletName' : 'a.b',\\n\"\n+\"    'outputProperties' : { }\\n\"\n+\"  }\\n\"\n+\" ]\\n\"\n+\"}\"\n        );\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.enableDefaultTyping();\n        try {\n            mapper.readValue(JSON, Bean1599.class);\n            fail(\"Should not pass\");                                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n        } catch (JsonMappingException e) {\n            try{ verifyException(e, \"Illegal type\");                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ verifyException(e, \"to deserialize\");                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ verifyException(e, \"prevented for security reasons\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n    }"
        ]
    }
}