{
    "com.fasterxml.jackson.databind.convert.TestUpdateValue::testIssue744": {
        "begin_line_no": 187,
        "end_line_no": 225,
        "file_path": "src/test/java/com/fasterxml/jackson/databind/convert/TestUpdateValue.java",
        "to": [
            "    public void testIssue744$catena_3() throws IOException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        try{ assertEquals(5, dbNewViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        try{ assertEquals(5, dbNewViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(13, dbNewViaNode.k);                                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        try{ assertEquals(1, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaString.k);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        try{ assertEquals(5, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try{ assertEquals(1, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaNode.k);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        try{ assertEquals(5, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testIssue744$catena_9() throws IOException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        try{ assertEquals(5, dbNewViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        try{ assertEquals(5, dbNewViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        try{ assertEquals(1, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaString.k);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        try{ assertEquals(5, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try{ assertEquals(1, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(3, dbUpdViaNode.k);                                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        \n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        try{ assertEquals(5, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testIssue744$catena_5() throws IOException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        try{ assertEquals(5, dbNewViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        try{ assertEquals(5, dbNewViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        try{ assertEquals(1, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(3, dbUpdViaString.k);                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        try{ assertEquals(5, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try{ assertEquals(1, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaNode.k);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        try{ assertEquals(5, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testIssue744$catena_0() throws IOException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        assertEquals(5, dbNewViaString.da.i);                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(13, dbNewViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        try{ assertEquals(5, dbNewViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        try{ assertEquals(1, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaString.k);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        try{ assertEquals(5, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try{ assertEquals(1, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaNode.k);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        try{ assertEquals(5, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testIssue744$catena_4() throws IOException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        try{ assertEquals(5, dbNewViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        try{ assertEquals(5, dbNewViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        assertEquals(1, dbUpdViaString.da.i);                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(3, dbUpdViaString.k);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        try{ assertEquals(5, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try{ assertEquals(1, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaNode.k);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        try{ assertEquals(5, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testIssue744$catena_2() throws IOException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        try{ assertEquals(5, dbNewViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        assertEquals(5, dbNewViaNode.da.i);                                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(13, dbNewViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        try{ assertEquals(1, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaString.k);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        try{ assertEquals(5, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try{ assertEquals(1, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaNode.k);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        try{ assertEquals(5, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testIssue744$catena_8() throws IOException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        try{ assertEquals(5, dbNewViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        try{ assertEquals(5, dbNewViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        try{ assertEquals(1, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaString.k);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        try{ assertEquals(5, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        assertEquals(1, dbUpdViaNode.da.i);                                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(3, dbUpdViaNode.k);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        try{ assertEquals(5, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testIssue744$catena_11() throws IOException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        try{ assertEquals(5, dbNewViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        try{ assertEquals(5, dbNewViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        try{ assertEquals(1, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaString.k);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        try{ assertEquals(5, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try{ assertEquals(1, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaNode.k);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        try{ assertEquals(5, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(13, dbUpdViaNode.k);                                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    public void testIssue744$catena_7() throws IOException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        try{ assertEquals(5, dbNewViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        try{ assertEquals(5, dbNewViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        try{ assertEquals(1, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaString.k);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        try{ assertEquals(5, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(13, dbUpdViaString.k);                                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n\n        try{ assertEquals(1, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaNode.k);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        try{ assertEquals(5, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testIssue744$catena_10() throws IOException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        try{ assertEquals(5, dbNewViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        try{ assertEquals(5, dbNewViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        try{ assertEquals(1, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaString.k);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        try{ assertEquals(5, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try{ assertEquals(1, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaNode.k);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        assertEquals(5, dbUpdViaNode.da.i);                                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(13, dbUpdViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testIssue744$catena_1() throws IOException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        try{ assertEquals(5, dbNewViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(13, dbNewViaString.k);                                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        try{ assertEquals(5, dbNewViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        try{ assertEquals(1, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaString.k);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        try{ assertEquals(5, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try{ assertEquals(1, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaNode.k);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        try{ assertEquals(5, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testIssue744$catena_6() throws IOException\n    {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        try{ assertEquals(5, dbNewViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        try{ assertEquals(5, dbNewViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbNewViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        try{ assertEquals(1, dbUpdViaString.da.i);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaString.k);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        assertEquals(5, dbUpdViaString.da.i);                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(13, dbUpdViaString.k);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try{ assertEquals(1, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3, dbUpdViaNode.k);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        try{ assertEquals(5, dbUpdViaNode.da.i);                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(13, dbUpdViaNode.k);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}