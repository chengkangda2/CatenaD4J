{
    "com.fasterxml.jackson.databind.deser.TestArrayDeserialization::testByteArrayTypeOverride890": {
        "begin_line_no": 561,
        "end_line_no": 568,
        "file_path": "src/test/java/com/fasterxml/jackson/databind/deser/TestArrayDeserialization.java",
        "to": [
            "    public void testByteArrayTypeOverride890$catena_2() throws Exception\n    {\n        HiddenBinaryBean890 result = MAPPER.readValue(\n                aposToQuotes(\"{'someBytes':'AQIDBA=='}\"), HiddenBinaryBean890.class);\n        try{ assertNotNull(result);                                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertNotNull(result.someBytes);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(byte[].class, result.someBytes.getClass());                                            /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    public void testByteArrayTypeOverride890$catena_1() throws Exception\n    {\n        HiddenBinaryBean890 result = MAPPER.readValue(\n                aposToQuotes(\"{'someBytes':'AQIDBA=='}\"), HiddenBinaryBean890.class);\n        try{ assertNotNull(result);                                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertNotNull(result.someBytes);                                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(byte[].class, result.someBytes.getClass());                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testByteArrayTypeOverride890$catena_0() throws Exception\n    {\n        HiddenBinaryBean890 result = MAPPER.readValue(\n                aposToQuotes(\"{'someBytes':'AQIDBA=='}\"), HiddenBinaryBean890.class);\n        assertNotNull(result);                                                                              /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertNotNull(result.someBytes);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(byte[].class, result.someBytes.getClass());                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}