{
    "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest::testReadOnlyAndWriteOnly": {
        "begin_line_no": 61,
        "end_line_no": 70,
        "file_path": "src/test/java/com/fasterxml/jackson/databind/deser/ReadOrWriteOnlyTest.java",
        "to": [
            "    public void testReadOnlyAndWriteOnly$catena_0() throws Exception\n    {\n        String json = MAPPER.writeValueAsString(new ReadXWriteY());\n        assertEquals(\"{\\\"x\\\":1}\", json);                                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n\n        ReadXWriteY result = MAPPER.readValue(\"{\\\"x\\\":5, \\\"y\\\":6}\", ReadXWriteY.class);\n        try{ assertNotNull(result);                                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(1, result.x);                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(6, result.y);                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testReadOnlyAndWriteOnly$catena_1() throws Exception\n    {\n        String json = MAPPER.writeValueAsString(new ReadXWriteY());\n        try{ assertEquals(\"{\\\"x\\\":1}\", json);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        ReadXWriteY result = MAPPER.readValue(\"{\\\"x\\\":5, \\\"y\\\":6}\", ReadXWriteY.class);\n        assertNotNull(result);                                                                              /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(1, result.x);                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(6, result.y);                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testReadOnlyAndWriteOnly$catena_3() throws Exception\n    {\n        String json = MAPPER.writeValueAsString(new ReadXWriteY());\n        try{ assertEquals(\"{\\\"x\\\":1}\", json);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        ReadXWriteY result = MAPPER.readValue(\"{\\\"x\\\":5, \\\"y\\\":6}\", ReadXWriteY.class);\n        try{ assertNotNull(result);                                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(1, result.x);                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(6, result.y);                                                                          /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    public void testReadOnlyAndWriteOnly$catena_2() throws Exception\n    {\n        String json = MAPPER.writeValueAsString(new ReadXWriteY());\n        try{ assertEquals(\"{\\\"x\\\":1}\", json);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        ReadXWriteY result = MAPPER.readValue(\"{\\\"x\\\":5, \\\"y\\\":6}\", ReadXWriteY.class);\n        try{ assertNotNull(result);                                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(1, result.x);                                                                          /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(6, result.y);                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}