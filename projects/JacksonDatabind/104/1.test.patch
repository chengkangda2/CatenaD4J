{
    "com.fasterxml.jackson.databind.ser.jdk.DateSerializationTest::testDateISO8601_BCE": {
        "begin_line_no": 140,
        "end_line_no": 152,
        "file_path": "src/test/java/com/fasterxml/jackson/databind/ser/jdk/DateSerializationTest.java",
        "to": [
            "    public void testDateISO8601_BCE$catena_3() throws IOException\n    {\n        ObjectWriter w = MAPPER.writer()\n                .without(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n\n        // First: I _think_ BCE-1 is what you get with year 0, and should become \"+0000\"\n        // and from further back in time, it'll be \"-0001\" (BCE-2) etc)\n\n        try{ serialize(w, judate(0, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"+0000-01-01T00:00:00.000+0000\");                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ serialize(w, judate(-1, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"-0001-01-01T00:00:00.000+0000\");                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ serialize(w, judate(-49, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"-0049-01-01T00:00:00.000+0000\");    }catch(Throwable __SHOULD_BE_IGNORED){} // All hail Caesar\n        serialize(w, judate(-264, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"-0264-01-01T00:00:00.000+0000\");          /***** ORIGINAL ASSERTION IS HERE *****/ // Carthage FTW?\n    }",
            "    public void testDateISO8601_BCE$catena_1() throws IOException\n    {\n        ObjectWriter w = MAPPER.writer()\n                .without(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n\n        // First: I _think_ BCE-1 is what you get with year 0, and should become \"+0000\"\n        // and from further back in time, it'll be \"-0001\" (BCE-2) etc)\n\n        try{ serialize(w, judate(0, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"+0000-01-01T00:00:00.000+0000\");                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        serialize(w, judate(-1, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"-0001-01-01T00:00:00.000+0000\");                             /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ serialize(w, judate(-49, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"-0049-01-01T00:00:00.000+0000\");    }catch(Throwable __SHOULD_BE_IGNORED){} // All hail Caesar\n        try{ serialize(w, judate(-264, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"-0264-01-01T00:00:00.000+0000\");     }catch(Throwable __SHOULD_BE_IGNORED){} // Carthage FTW?\n    }",
            "    public void testDateISO8601_BCE$catena_0() throws IOException\n    {\n        ObjectWriter w = MAPPER.writer()\n                .without(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n\n        // First: I _think_ BCE-1 is what you get with year 0, and should become \"+0000\"\n        // and from further back in time, it'll be \"-0001\" (BCE-2) etc)\n\n        serialize(w, judate(0, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"+0000-01-01T00:00:00.000+0000\");                              /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ serialize(w, judate(-1, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"-0001-01-01T00:00:00.000+0000\");                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ serialize(w, judate(-49, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"-0049-01-01T00:00:00.000+0000\");    }catch(Throwable __SHOULD_BE_IGNORED){} // All hail Caesar\n        try{ serialize(w, judate(-264, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"-0264-01-01T00:00:00.000+0000\");     }catch(Throwable __SHOULD_BE_IGNORED){} // Carthage FTW?\n    }",
            "    public void testDateISO8601_BCE$catena_2() throws IOException\n    {\n        ObjectWriter w = MAPPER.writer()\n                .without(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n\n        // First: I _think_ BCE-1 is what you get with year 0, and should become \"+0000\"\n        // and from further back in time, it'll be \"-0001\" (BCE-2) etc)\n\n        try{ serialize(w, judate(0, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"+0000-01-01T00:00:00.000+0000\");                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ serialize(w, judate(-1, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"-0001-01-01T00:00:00.000+0000\");                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        serialize(w, judate(-49, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"-0049-01-01T00:00:00.000+0000\");         /***** ORIGINAL ASSERTION IS HERE *****/ // All hail Caesar\n        try{ serialize(w, judate(-264, 1, 1,  00, 00, 00, 0, \"UTC\"),   \"-0264-01-01T00:00:00.000+0000\");     }catch(Throwable __SHOULD_BE_IGNORED){} // Carthage FTW?\n    }"
        ]
    },
    "com.fasterxml.jackson.databind.ser.jdk.DateSerializationTest::testDateISO8601_10k": {
        "begin_line_no": 130,
        "end_line_no": 137,
        "file_path": "src/test/java/com/fasterxml/jackson/databind/ser/jdk/DateSerializationTest.java",
        "to": [
            ""
        ]
    }
}