{
    "org.apache.commons.cli.bug.BugCLI265Test::shouldParseConcatenatedShortOptions": {
        "begin_line_no": 76,
        "end_line_no": 87,
        "file_path": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
        "to": [
            "    @Test\n    public void shouldParseConcatenatedShortOptions$catena_1() throws Exception {\n        String[] concatenatedShortOptions = new String[] { \"-t1\", \"-ab\" };\n\n        final CommandLine commandLine = parser.parse(options, concatenatedShortOptions);\n\n        try{ assertTrue(commandLine.hasOption(\"t1\"));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertNull(commandLine.getOptionValue(\"t1\"));                                                       /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(commandLine.hasOption(\"a\"));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(commandLine.hasOption(\"b\"));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertFalse(commandLine.hasOption(\"last\"));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test\n    public void shouldParseConcatenatedShortOptions$catena_2() throws Exception {\n        String[] concatenatedShortOptions = new String[] { \"-t1\", \"-ab\" };\n\n        final CommandLine commandLine = parser.parse(options, concatenatedShortOptions);\n\n        try{ assertTrue(commandLine.hasOption(\"t1\"));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertNull(commandLine.getOptionValue(\"t1\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(commandLine.hasOption(\"a\"));                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(commandLine.hasOption(\"b\"));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertFalse(commandLine.hasOption(\"last\"));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test\n    public void shouldParseConcatenatedShortOptions$catena_3() throws Exception {\n        String[] concatenatedShortOptions = new String[] { \"-t1\", \"-ab\" };\n\n        final CommandLine commandLine = parser.parse(options, concatenatedShortOptions);\n\n        try{ assertTrue(commandLine.hasOption(\"t1\"));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertNull(commandLine.getOptionValue(\"t1\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(commandLine.hasOption(\"a\"));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(commandLine.hasOption(\"b\"));                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertFalse(commandLine.hasOption(\"last\"));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test\n    public void shouldParseConcatenatedShortOptions$catena_0() throws Exception {\n        String[] concatenatedShortOptions = new String[] { \"-t1\", \"-ab\" };\n\n        final CommandLine commandLine = parser.parse(options, concatenatedShortOptions);\n\n        assertTrue(commandLine.hasOption(\"t1\"));                                                            /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertNull(commandLine.getOptionValue(\"t1\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(commandLine.hasOption(\"a\"));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(commandLine.hasOption(\"b\"));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertFalse(commandLine.hasOption(\"last\"));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    @Test\n    public void shouldParseConcatenatedShortOptions$catena_4() throws Exception {\n        String[] concatenatedShortOptions = new String[] { \"-t1\", \"-ab\" };\n\n        final CommandLine commandLine = parser.parse(options, concatenatedShortOptions);\n\n        try{ assertTrue(commandLine.hasOption(\"t1\"));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertNull(commandLine.getOptionValue(\"t1\"));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(commandLine.hasOption(\"a\"));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(commandLine.hasOption(\"b\"));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertFalse(commandLine.hasOption(\"last\"));                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    }
}