{
    "org.apache.commons.cli.OptionBuilderTest::testBuilderIsResettedAlways": {
        "begin_line_no": 154,
        "end_line_no": 176,
        "file_path": "src/test/org/apache/commons/cli/OptionBuilderTest.java",
        "to": [
            "    public void testBuilderIsResettedAlways$catena_1() {\n        try\n        {\n            OptionBuilder.withDescription(\"JUnit\").create('\"');\n            try{ fail(\"IllegalArgumentException expected\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n        catch (IllegalArgumentException e)\n        {\n            // expected\n        }\n        assertNull(\"we inherited a description\", OptionBuilder.create('x').getDescription());               /***** ORIGINAL ASSERTION IS HERE *****/\n\n        try\n        {\n            OptionBuilder.withDescription(\"JUnit\").create();\n            try{ fail(\"IllegalArgumentException expected\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n        catch (IllegalArgumentException e)\n        {\n            // expected\n        }\n        try{ assertNull(\"we inherited a description\", OptionBuilder.create('x').getDescription());          }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testBuilderIsResettedAlways$catena_0() {\n        try\n        {\n            OptionBuilder.withDescription(\"JUnit\").create('\"');\n            fail(\"IllegalArgumentException expected\");                                                      /***** ORIGINAL ASSERTION IS HERE *****/\n        }\n        catch (IllegalArgumentException e)\n        {\n            // expected\n        }\n        try{ assertNull(\"we inherited a description\", OptionBuilder.create('x').getDescription());          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try\n        {\n            OptionBuilder.withDescription(\"JUnit\").create();\n            try{ fail(\"IllegalArgumentException expected\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n        catch (IllegalArgumentException e)\n        {\n            // expected\n        }\n        try{ assertNull(\"we inherited a description\", OptionBuilder.create('x').getDescription());          }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testBuilderIsResettedAlways$catena_2() {\n        try\n        {\n            OptionBuilder.withDescription(\"JUnit\").create('\"');\n            try{ fail(\"IllegalArgumentException expected\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n        catch (IllegalArgumentException e)\n        {\n            // expected\n        }\n        try{ assertNull(\"we inherited a description\", OptionBuilder.create('x').getDescription());          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try\n        {\n            OptionBuilder.withDescription(\"JUnit\").create();\n            fail(\"IllegalArgumentException expected\");                                                      /***** ORIGINAL ASSERTION IS HERE *****/\n        }\n        catch (IllegalArgumentException e)\n        {\n            // expected\n        }\n        try{ assertNull(\"we inherited a description\", OptionBuilder.create('x').getDescription());          }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testBuilderIsResettedAlways$catena_3() {\n        try\n        {\n            OptionBuilder.withDescription(\"JUnit\").create('\"');\n            try{ fail(\"IllegalArgumentException expected\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n        catch (IllegalArgumentException e)\n        {\n            // expected\n        }\n        try{ assertNull(\"we inherited a description\", OptionBuilder.create('x').getDescription());          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        try\n        {\n            OptionBuilder.withDescription(\"JUnit\").create();\n            try{ fail(\"IllegalArgumentException expected\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n        }\n        catch (IllegalArgumentException e)\n        {\n            // expected\n        }\n        assertNull(\"we inherited a description\", OptionBuilder.create('x').getDescription());               /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    }
}