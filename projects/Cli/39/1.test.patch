{
    "org.apache.commons.cli.PatternOptionBuilderTest::testExistingFilePattern": {
        "begin_line_no": 161,
        "end_line_no": 172,
        "file_path": "src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java",
        "to": [
            "    @Test\n    public void testExistingFilePattern$catena_1() throws Exception\n    {\n        final Options options = PatternOptionBuilder.parsePattern(\"g<\");\n        final CommandLineParser parser = new PosixParser();\n        final CommandLine line = parser.parse(options, new String[] { \"-g\", \"src/test/resources/existing-readable.file\" });\n\n        final Object parsedReadableFileStream = line.getOptionObject(\"g\");\n\n        try{ assertNotNull(\"option g not parsed\", parsedReadableFileStream);                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(\"option g not FileInputStream\", parsedReadableFileStream instanceof FileInputStream);         /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    @Test\n    public void testExistingFilePattern$catena_0() throws Exception\n    {\n        final Options options = PatternOptionBuilder.parsePattern(\"g<\");\n        final CommandLineParser parser = new PosixParser();\n        final CommandLine line = parser.parse(options, new String[] { \"-g\", \"src/test/resources/existing-readable.file\" });\n\n        final Object parsedReadableFileStream = line.getOptionObject(\"g\");\n\n        assertNotNull(\"option g not parsed\", parsedReadableFileStream);                                          /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(\"option g not FileInputStream\", parsedReadableFileStream instanceof FileInputStream);    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}