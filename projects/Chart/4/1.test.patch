{
    "org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset": {
        "begin_line_no": 125,
        "end_line_no": 146,
        "file_path": "tests/org/jfree/chart/junit/TimeSeriesChartTests.java",
        "to": [
            "    public void testReplaceDataset$catena_0() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        assertEquals(true, l.flag);                                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        try{ assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }",
            "    public void testReplaceDataset$catena_2() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        try{ assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   /***** ORIGINAL ASSERTION IS HERE *****/\n\n    }",
            "    public void testReplaceDataset$catena_1() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }"
        ]
    },
    "org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset": {
        "begin_line_no": 126,
        "end_line_no": 147,
        "file_path": "tests/org/jfree/chart/junit/XYStepAreaChartTests.java",
        "to": [
            "    public void testReplaceDataset$catena_1() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }",
            "    public void testReplaceDataset$catena_0() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        assertEquals(true, l.flag);                                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        try{ assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }",
            "    public void testReplaceDataset$catena_2() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        try{ assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   /***** ORIGINAL ASSERTION IS HERE *****/\n\n    }"
        ]
    },
    "org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset": {
        "begin_line_no": 126,
        "end_line_no": 147,
        "file_path": "tests/org/jfree/chart/junit/XYAreaChartTests.java",
        "to": [
            "    public void testReplaceDataset$catena_2() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        try{ assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   /***** ORIGINAL ASSERTION IS HERE *****/\n\n    }",
            "    public void testReplaceDataset$catena_1() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }",
            "    public void testReplaceDataset$catena_0() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        assertEquals(true, l.flag);                                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        try{ assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }"
        ]
    },
    "org.jfree.chart.junit.XYStepChartTests::testReplaceDataset": {
        "begin_line_no": 126,
        "end_line_no": 147,
        "file_path": "tests/org/jfree/chart/junit/XYStepChartTests.java",
        "to": [
            "    public void testReplaceDataset$catena_2() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        try{ assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   /***** ORIGINAL ASSERTION IS HERE *****/\n\n    }",
            "    public void testReplaceDataset$catena_0() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        assertEquals(true, l.flag);                                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        try{ assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }",
            "    public void testReplaceDataset$catena_1() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }"
        ]
    },
    "org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2": {
        "begin_line_no": 375,
        "end_line_no": 397,
        "file_path": "tests/org/jfree/chart/axis/junit/NumberAxisTests.java",
        "to": [
            "    public void testXYAutoRange2$catena_0() {\n        XYSeries series = new XYSeries(\"Series 1\");\n        series.add(1.0, 1.0);\n        series.add(2.0, 2.0);\n        series.add(3.0, 3.0);\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        dataset.addSeries(series);\n        JFreeChart chart = ChartFactory.createScatterPlot(\n            \"Test\",\n            \"X\",\n            \"Y\",\n            dataset,\n            PlotOrientation.VERTICAL,\n            false,\n            false,\n            false\n        );\n        XYPlot plot = (XYPlot) chart.getPlot();\n        NumberAxis axis = (NumberAxis) plot.getRangeAxis();\n        axis.setAutoRangeIncludesZero(false);\n        assertEquals(0.9, axis.getLowerBound(), EPSILON);                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(3.1, axis.getUpperBound(), EPSILON);                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testXYAutoRange2$catena_1() {\n        XYSeries series = new XYSeries(\"Series 1\");\n        series.add(1.0, 1.0);\n        series.add(2.0, 2.0);\n        series.add(3.0, 3.0);\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        dataset.addSeries(series);\n        JFreeChart chart = ChartFactory.createScatterPlot(\n            \"Test\",\n            \"X\",\n            \"Y\",\n            dataset,\n            PlotOrientation.VERTICAL,\n            false,\n            false,\n            false\n        );\n        XYPlot plot = (XYPlot) chart.getPlot();\n        NumberAxis axis = (NumberAxis) plot.getRangeAxis();\n        axis.setAutoRangeIncludesZero(false);\n        try{ assertEquals(0.9, axis.getLowerBound(), EPSILON);                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(3.1, axis.getUpperBound(), EPSILON);                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    },
    "org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset": {
        "begin_line_no": 130,
        "end_line_no": 151,
        "file_path": "tests/org/jfree/chart/junit/ScatterPlotTests.java",
        "to": [
            "    public void testReplaceDataset$catena_0() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        assertEquals(true, l.flag);                                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        try{ assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }",
            "    public void testReplaceDataset$catena_2() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        try{ assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   /***** ORIGINAL ASSERTION IS HERE *****/\n\n    }",
            "    public void testReplaceDataset$catena_1() {\n\n        // create a dataset...\n        XYSeries series1 = new XYSeries(\"Series 1\");\n        series1.add(10.0, 10.0);\n        series1.add(20.0, 20.0);\n        series1.add(30.0, 30.0);\n        XYDataset dataset = new XYSeriesCollection(series1);\n\n        LocalListener l = new LocalListener();\n        this.chart.addChangeListener(l);\n        XYPlot plot = (XYPlot) this.chart.getPlot();\n        plot.setDataset(dataset);\n        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        ValueAxis axis = plot.getRangeAxis();\n        Range range = axis.getRange();\n        assertTrue(\"Expecting the lower bound of the range to be around 10: \"\n                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertTrue(\"Expecting the upper bound of the range to be around 30: \"\n                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }"
        ]
    },
    "org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1": {
        "begin_line_no": 253,
        "end_line_no": 275,
        "file_path": "tests/org/jfree/chart/axis/junit/LogAxisTests.java",
        "to": [
            "    public void testXYAutoRange1$catena_0() {\n        XYSeries series = new XYSeries(\"Series 1\");\n        series.add(1.0, 1.0);\n        series.add(2.0, 2.0);\n        series.add(3.0, 3.0);\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        dataset.addSeries(series);\n        JFreeChart chart = ChartFactory.createScatterPlot(\n            \"Test\",\n            \"X\",\n            \"Y\",\n            dataset,\n            PlotOrientation.VERTICAL,\n            false,\n            false,\n            false\n        );\n        XYPlot plot = (XYPlot) chart.getPlot();\n        LogAxis axis = new LogAxis(\"Log(Y)\");\n        plot.setRangeAxis(axis);\n        assertEquals(0.9465508226401592, axis.getLowerBound(), EPSILON);                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(3.1694019256486126, axis.getUpperBound(), EPSILON);                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testXYAutoRange1$catena_1() {\n        XYSeries series = new XYSeries(\"Series 1\");\n        series.add(1.0, 1.0);\n        series.add(2.0, 2.0);\n        series.add(3.0, 3.0);\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        dataset.addSeries(series);\n        JFreeChart chart = ChartFactory.createScatterPlot(\n            \"Test\",\n            \"X\",\n            \"Y\",\n            dataset,\n            PlotOrientation.VERTICAL,\n            false,\n            false,\n            false\n        );\n        XYPlot plot = (XYPlot) chart.getPlot();\n        LogAxis axis = new LogAxis(\"Log(Y)\");\n        plot.setRangeAxis(axis);\n        try{ assertEquals(0.9465508226401592, axis.getLowerBound(), EPSILON);                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(3.1694019256486126, axis.getUpperBound(), EPSILON);                                    /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    },
    "org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins": {
        "begin_line_no": 228,
        "end_line_no": 245,
        "file_path": "tests/org/jfree/chart/axis/junit/ValueAxisTests.java",
        "to": [
            "    public void testAxisMargins$catena_0() {\n        XYSeries series = new XYSeries(\"S1\");\n        series.add(100.0, 1.1);\n        series.add(200.0, 2.2);\n        XYSeriesCollection dataset = new XYSeriesCollection(series);\n        dataset.setIntervalWidth(0.0);\n        JFreeChart chart = ChartFactory.createScatterPlot(\n            \"Title\", \"X\", \"Y\", dataset, PlotOrientation.VERTICAL,\n            false, false, false\n        );\n        ValueAxis domainAxis = ((XYPlot) chart.getPlot()).getDomainAxis();\n        Range r = domainAxis.getRange();\n        assertEquals(110.0, r.getLength(), EPSILON);                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n        domainAxis.setLowerMargin(0.10);\n        domainAxis.setUpperMargin(0.10);\n        r = domainAxis.getRange();\n        try{ assertEquals(120.0, r.getLength(), EPSILON);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testAxisMargins$catena_1() {\n        XYSeries series = new XYSeries(\"S1\");\n        series.add(100.0, 1.1);\n        series.add(200.0, 2.2);\n        XYSeriesCollection dataset = new XYSeriesCollection(series);\n        dataset.setIntervalWidth(0.0);\n        JFreeChart chart = ChartFactory.createScatterPlot(\n            \"Title\", \"X\", \"Y\", dataset, PlotOrientation.VERTICAL,\n            false, false, false\n        );\n        ValueAxis domainAxis = ((XYPlot) chart.getPlot()).getDomainAxis();\n        Range r = domainAxis.getRange();\n        try{ assertEquals(110.0, r.getLength(), EPSILON);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        domainAxis.setLowerMargin(0.10);\n        domainAxis.setUpperMargin(0.10);\n        r = domainAxis.getRange();\n        assertEquals(120.0, r.getLength(), EPSILON);                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    },
    "org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1": {
        "begin_line_no": 347,
        "end_line_no": 369,
        "file_path": "tests/org/jfree/chart/axis/junit/NumberAxisTests.java",
        "to": [
            "    public void testXYAutoRange1$catena_0() {\n        XYSeries series = new XYSeries(\"Series 1\");\n        series.add(1.0, 1.0);\n        series.add(2.0, 2.0);\n        series.add(3.0, 3.0);\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        dataset.addSeries(series);\n        JFreeChart chart = ChartFactory.createScatterPlot(\n            \"Test\",\n            \"X\",\n            \"Y\",\n            dataset,\n            PlotOrientation.VERTICAL,\n            false,\n            false,\n            false\n        );\n        XYPlot plot = (XYPlot) chart.getPlot();\n        NumberAxis axis = (NumberAxis) plot.getDomainAxis();\n        axis.setAutoRangeIncludesZero(false);\n        assertEquals(0.9, axis.getLowerBound(), EPSILON);                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(3.1, axis.getUpperBound(), EPSILON);                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testXYAutoRange1$catena_1() {\n        XYSeries series = new XYSeries(\"Series 1\");\n        series.add(1.0, 1.0);\n        series.add(2.0, 2.0);\n        series.add(3.0, 3.0);\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        dataset.addSeries(series);\n        JFreeChart chart = ChartFactory.createScatterPlot(\n            \"Test\",\n            \"X\",\n            \"Y\",\n            dataset,\n            PlotOrientation.VERTICAL,\n            false,\n            false,\n            false\n        );\n        XYPlot plot = (XYPlot) chart.getPlot();\n        NumberAxis axis = (NumberAxis) plot.getDomainAxis();\n        axis.setAutoRangeIncludesZero(false);\n        try{ assertEquals(0.9, axis.getLowerBound(), EPSILON);                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(3.1, axis.getUpperBound(), EPSILON);                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    },
    "org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2": {
        "begin_line_no": 281,
        "end_line_no": 303,
        "file_path": "tests/org/jfree/chart/axis/junit/LogAxisTests.java",
        "to": [
            "    public void testXYAutoRange2$catena_1() {\n        XYSeries series = new XYSeries(\"Series 1\");\n        series.add(1.0, 1.0);\n        series.add(2.0, 2.0);\n        series.add(3.0, 3.0);\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        dataset.addSeries(series);\n        JFreeChart chart = ChartFactory.createScatterPlot(\n            \"Test\",\n            \"X\",\n            \"Y\",\n            dataset,\n            PlotOrientation.VERTICAL,\n            false,\n            false,\n            false\n        );\n        XYPlot plot = (XYPlot) chart.getPlot();\n        LogAxis axis = new LogAxis(\"Log(Y)\");\n        plot.setRangeAxis(axis);\n        try{ assertEquals(0.9465508226401592, axis.getLowerBound(), EPSILON);                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(3.1694019256486126, axis.getUpperBound(), EPSILON);                                    /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    public void testXYAutoRange2$catena_0() {\n        XYSeries series = new XYSeries(\"Series 1\");\n        series.add(1.0, 1.0);\n        series.add(2.0, 2.0);\n        series.add(3.0, 3.0);\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        dataset.addSeries(series);\n        JFreeChart chart = ChartFactory.createScatterPlot(\n            \"Test\",\n            \"X\",\n            \"Y\",\n            dataset,\n            PlotOrientation.VERTICAL,\n            false,\n            false,\n            false\n        );\n        XYPlot plot = (XYPlot) chart.getPlot();\n        LogAxis axis = new LogAxis(\"Log(Y)\");\n        plot.setRangeAxis(axis);\n        assertEquals(0.9465508226401592, axis.getLowerBound(), EPSILON);                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(3.1694019256486126, axis.getUpperBound(), EPSILON);                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}