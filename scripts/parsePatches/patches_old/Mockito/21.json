{
    "num_of_hunks": 5,
    "0": {
        "file_name": "src/org/mockito/internal/creation/instance/ConstructorInstantiator.java",
        "from_line_no": 17,
        "to_line_no": 17,
        "replaced_with": "        return withParams(cls, outerClassInstance);\n",
        "replaced": "        return withOuterClass(cls);\n",
        "patch_type": "replace",
        "next_line_no": 18
    },
    "1": {
        "file_name": "src/org/mockito/internal/creation/instance/ConstructorInstantiator.java",
        "from_line_no": 20,
        "to_line_no": 20,
        "replaced_with": "    private static <T> T withParams(Class<T> cls, Object... params) {\n",
        "replaced": "    private <T> T withOuterClass(Class<T> cls) {\n",
        "patch_type": "replace",
        "next_line_no": 21
    },
    "2": {
        "file_name": "src/org/mockito/internal/creation/instance/ConstructorInstantiator.java",
        "from_line_no": 24,
        "to_line_no": 25,
        "replaced_with": "            for (Constructor<?> constructor : cls.getDeclaredConstructors()) {\n                Class<?>[] types = constructor.getParameterTypes();\n                if (paramsMatch(types, params)) {\n                    return (T) constructor.newInstance(params);\n                }\n            }\n",
        "replaced": "            Constructor<T> c = cls.getDeclaredConstructor(outerClassInstance.getClass());\n            return c.newInstance(outerClassInstance);\n",
        "patch_type": "replace",
        "next_line_no": 26
    },
    "3": {
        "file_name": "src/org/mockito/internal/creation/instance/ConstructorInstantiator.java",
        "replaced_with": "        throw paramsException(cls, null);\n",
        "patch_type": "insert",
        "next_line_no": 29
    },
    "4": {
        "file_name": "src/org/mockito/internal/creation/instance/ConstructorInstantiator.java",
        "replaced_with": "    private static boolean paramsMatch(Class<?>[] types, Object[] params) {\n        if (params.length != types.length) {\n            return false;\n        }\n        for (int i = 0; i < params.length; i++) {\n            if (!types[i].isInstance(params[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n",
        "patch_type": "insert",
        "next_line_no": 36
    }
}