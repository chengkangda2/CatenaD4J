{
    "num_of_hunks": 4,
    "0": {
        "file_name": "src/main/java/org/apache/commons/math/fraction/BigFraction.java",
        "replaced_with": "        if (Double.isNaN(result)) {\n",
        "patch_type": "insert",
        "next_line_no": 686
    },
    "1": {
        "file_name": "src/main/java/org/apache/commons/math/fraction/BigFraction.java",
        "replaced_with": "            int shift = Math.max(numerator.bitLength(),\n                                 denominator.bitLength()) - Double.MAX_EXPONENT;\n            result = numerator.shiftRight(shift).doubleValue() /\n                denominator.shiftRight(shift).doubleValue();\n        }\n",
        "patch_type": "insert",
        "next_line_no": 688
    },
    "2": {
        "file_name": "src/main/java/org/apache/commons/math/fraction/BigFraction.java",
        "replaced_with": "        if (Double.isNaN(result)) {\n",
        "patch_type": "insert",
        "next_line_no": 733
    },
    "3": {
        "file_name": "src/main/java/org/apache/commons/math/fraction/BigFraction.java",
        "replaced_with": "            int shift = Math.max(numerator.bitLength(),\n                                 denominator.bitLength()) - Float.MAX_EXPONENT;\n            result = numerator.shiftRight(shift).floatValue() /\n                denominator.shiftRight(shift).floatValue();\n        }\n",
        "patch_type": "insert",
        "next_line_no": 735
    }
}