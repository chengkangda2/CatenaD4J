{
    "num_of_hunks": 3,
    "0": {
        "file_name": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "from_line_no": 43,
        "to_line_no": 46,
        "replaced_with": "        weightMatrix = new DiagonalMatrix(weight);\n",
        "replaced": "        weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim);\n        for (int i = 0; i < dim; i++) {\n            weightMatrix.setEntry(i, i, weight[i]);\n        }\n",
        "patch_type": "replace",
        "next_line_no": 47
    },
    "1": {
        "file_name": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "replaced_with": "        if (m instanceof DiagonalMatrix) {\n            final int dim = m.getRowDimension();\n            final RealMatrix sqrtM = new DiagonalMatrix(dim);\n            for (int i = 0; i < dim; i++) {\n                sqrtM.setEntry(i, i, FastMath.sqrt(m.getEntry(i, i)));\n            }\n            return sqrtM;\n        } else {\n",
        "patch_type": "insert",
        "next_line_no": 267
    },
    "2": {
        "file_name": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "replaced_with": "        }\n",
        "patch_type": "insert",
        "next_line_no": 269
    }
}