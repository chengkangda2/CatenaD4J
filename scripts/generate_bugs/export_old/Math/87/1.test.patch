{
    "org.apache.commons.math.optimization.linear.SimplexSolverTest::testSingleVariableAndConstraint": {
        "begin_line_no": 67,
        "end_line_no": 77,
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "to": [
            "    @Test\n    public void testSingleVariableAndConstraint$catena_1() throws OptimizationException {\n        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 3 }, 0);\n        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();\n        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.LEQ, 10));\n\n        SimplexSolver solver = new SimplexSolver();\n        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);\n        try{ assertEquals(10.0, solution.getPoint()[0], 0.0);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(30.0, solution.getValue(), 0.0);                                                       /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    @Test\n    public void testSingleVariableAndConstraint$catena_0() throws OptimizationException {\n        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 3 }, 0);\n        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();\n        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.LEQ, 10));\n\n        SimplexSolver solver = new SimplexSolver();\n        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);\n        assertEquals(10.0, solution.getPoint()[0], 0.0);                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(30.0, solution.getValue(), 0.0);                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}