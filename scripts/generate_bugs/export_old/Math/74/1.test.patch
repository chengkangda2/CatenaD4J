{
    "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest::polynomial": {
        "begin_line_no": 135,
        "end_line_no": 154,
        "file_path": "src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java",
        "to": [
            "    @Test\n    public void polynomial$catena_2() throws DerivativeException, IntegratorException {\n        TestProblem6 pb = new TestProblem6();\n        double range = Math.abs(pb.getFinalTime() - pb.getInitialTime());\n\n        for (int nSteps = 1; nSteps < 7; ++nSteps) {\n            AdamsMoultonIntegrator integ =\n                new AdamsMoultonIntegrator(nSteps, 1.0e-6 * range, 0.1 * range, 1.0e-9, 1.0e-9);\n            TestProblemHandler handler = new TestProblemHandler(pb, integ);\n            integ.addStepHandler(handler);\n            try{ integ.integrate(pb, pb.getInitialTime(), pb.getInitialState(),\n                            pb.getFinalTime(), new double[pb.getDimension()]);                              }catch(Throwable __SHOULD_BE_IGNORED){}\n            if (nSteps < 4) {\n                try{ assertTrue(integ.getEvaluations() > 140);                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n            } else {\n                assertTrue(integ.getEvaluations() < 90);                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n            }\n        }\n\n    }"
        ]
    }
}