{
    "org.apache.commons.lang3.text.ExtendedMessageFormatTest::testEqualsHashcode": {
        "begin_line_no": 270,
        "end_line_no": 307,
        "file_path": "src/test/java/org/apache/commons/lang3/text/ExtendedMessageFormatTest.java",
        "to": [
            "    public void testEqualsHashcode$catena_9() {\n        Map<String, ? extends FormatFactory> registry = Collections.singletonMap(\"testfmt\", new LowerCaseFormatFactory());\n        Map<String, ? extends FormatFactory> otherRegitry = Collections.singletonMap(\"testfmt\", new UpperCaseFormatFactory());\n\n        String pattern = \"Pattern: {0,testfmt}\";\n        ExtendedMessageFormat emf = new ExtendedMessageFormat(pattern, Locale.US, registry);\n\n        ExtendedMessageFormat other = null;\n\n        // Same object\n        try{ assertTrue(\"same, equals()\",   emf.equals(emf));                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(\"same, hashcode()\", emf.hashCode() == emf.hashCode());                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // Equal Object\n        other = new ExtendedMessageFormat(pattern, Locale.US, registry);\n        try{ assertTrue(\"equal, equals()\",   emf.equals(other));                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(\"equal, hashcode()\", emf.hashCode() == other.hashCode());                           }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // Different Class\n        other = new OtherExtendedMessageFormat(pattern, Locale.US, registry);\n        try{ assertFalse(\"class, equals()\",  emf.equals(other));                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(\"class, hashcode()\", emf.hashCode() == other.hashCode());          }catch(Throwable __SHOULD_BE_IGNORED){} // same hashcode\n        \n        // Different pattern\n        other = new ExtendedMessageFormat(\"X\" + pattern, Locale.US, registry);\n        try{ assertFalse(\"pattern, equals()\",   emf.equals(other));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertFalse(\"pattern, hashcode()\", emf.hashCode() == other.hashCode());                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        // Different registry\n        other = new ExtendedMessageFormat(pattern, Locale.US, otherRegitry);\n        try{ assertFalse(\"registry, equals()\",   emf.equals(other));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertFalse(\"registry, hashcode()\", emf.hashCode() == other.hashCode());                            /***** ORIGINAL ASSERTION IS HERE *****/\n\n        // Different Locale\n        other = new ExtendedMessageFormat(pattern, Locale.FRANCE, registry);\n        try{ assertFalse(\"locale, equals()\",  emf.equals(other));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertTrue(\"locale, hashcode()\", emf.hashCode() == other.hashCode());         }catch(Throwable __SHOULD_BE_IGNORED){} // same hashcode\n    }"
        ]
    }
}