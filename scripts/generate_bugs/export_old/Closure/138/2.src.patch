{
    "patch": [
        {
            "file_name": "src/com/google/javascript/jscomp/ClosureReverseAbstractInterpreter.java",
            "from_line_no": 208,
            "to_line_no": 208,
            "replaced": "        if (paramType != null) {\n",
            "patch_type": "delete",
            "next_line_no": 209
        },
        {
            "file_name": "src/com/google/javascript/jscomp/ClosureReverseAbstractInterpreter.java",
            "from_line_no": 218,
            "to_line_no": 218,
            "replaced": "            }\n",
            "patch_type": "delete",
            "next_line_no": 219
        },
        {
            "file_name": "src/com/google/javascript/jscomp/TypeInference.java",
            "replaced_with": "        boolean isInferred = var.isTypeInferred();\n        boolean unflowable =\n            isInferred && unflowableVarNames.contains(varName);\n",
            "patch_type": "insert",
            "next_line_no": 639
        },
        {
            "file_name": "src/com/google/javascript/jscomp/TypeInference.java",
            "replaced_with": "        boolean nonLocalInferredSlot =\n            isInferred &&\n            syntacticScope.getParent() != null &&\n            var == syntacticScope.getParent().getSlot(varName);\n",
            "patch_type": "insert",
            "next_line_no": 643
        },
        {
            "file_name": "src/com/google/javascript/jscomp/TypeInference.java",
            "replaced_with": "        if (!unflowable && !nonLocalInferredSlot) {\n",
            "patch_type": "insert",
            "next_line_no": 644
        },
        {
            "file_name": "src/com/google/javascript/jscomp/TypeInference.java",
            "replaced_with": "          }\n",
            "patch_type": "insert",
            "next_line_no": 647
        }
    ]
}