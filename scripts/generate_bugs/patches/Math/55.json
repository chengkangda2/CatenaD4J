{
    "num_of_hunks": 5,
    "0": {
        "file_name": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "replaced_with": "      final double n1 = v1.getNormSq();\n      final double n2 = v2.getNormSq();\n      if ((n1 * n2) < MathUtils.SAFE_MIN) {\n          return ZERO;\n      }\n",
        "patch_type": "insert",
        "next_line_no": 459
    },
    "1": {
        "file_name": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "replaced_with": "      final int deltaExp = (FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4;\n      final double x1    = FastMath.scalb(v1.x, -deltaExp);\n      final double y1    = FastMath.scalb(v1.y, -deltaExp);\n      final double z1    = FastMath.scalb(v1.z, -deltaExp);\n      final double x2    = FastMath.scalb(v2.x,  deltaExp);\n      final double y2    = FastMath.scalb(v2.y,  deltaExp);\n      final double z2    = FastMath.scalb(v2.z,  deltaExp);\n",
        "patch_type": "insert",
        "next_line_no": 462
    },
    "2": {
        "file_name": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "replaced_with": "      final double ratio = (x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2, 2 * deltaExp);\n      final double rho   = FastMath.rint(256 * ratio) / 256;\n",
        "patch_type": "insert",
        "next_line_no": 470
    },
    "3": {
        "file_name": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "replaced_with": "      final double x3 = x1 - rho * x2;\n      final double y3 = y1 - rho * y2;\n      final double z3 = z1 - rho * z2;\n",
        "patch_type": "insert",
        "next_line_no": 471
    },
    "4": {
        "file_name": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "from_line_no": 473,
        "to_line_no": 473,
        "replaced_with": "      return new Vector3D(y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2);\n",
        "replaced": "      return new Vector3D(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);\n",
        "patch_type": "replace",
        "next_line_no": 474
    }
}