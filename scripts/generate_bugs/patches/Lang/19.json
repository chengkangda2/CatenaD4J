{
    "num_of_hunks": 5,
    "0": {
        "file_name": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "from_line_no": 40,
        "to_line_no": 40,
        "replaced_with": "        if(input.charAt(index) == '&' && index < seqEnd - 2 && input.charAt(index + 1) == '#') {\n",
        "replaced": "        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {\n",
        "patch_type": "replace",
        "next_line_no": 41
    },
    "1": {
        "file_name": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "replaced_with": "                if(start == seqEnd) {\n                    return 0;\n                }\n",
        "patch_type": "insert",
        "next_line_no": 50
    },
    "2": {
        "file_name": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "from_line_no": 54,
        "to_line_no": 54,
        "replaced_with": "            while(end < seqEnd && ( (input.charAt(end) >= '0' && input.charAt(end) <= '9') ||\n                                    (input.charAt(end) >= 'a' && input.charAt(end) <= 'f') ||\n                                    (input.charAt(end) >= 'A' && input.charAt(end) <= 'F') ) )\n",
        "replaced": "            while(input.charAt(end) != ';') \n",
        "patch_type": "replace",
        "next_line_no": 55
    },
    "3": {
        "file_name": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "replaced_with": "            boolean semiNext = (end != seqEnd) && (input.charAt(end) == ';');\n",
        "patch_type": "insert",
        "next_line_no": 79
    },
    "4": {
        "file_name": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "from_line_no": 80,
        "to_line_no": 80,
        "replaced_with": "            return 2 + (end - start) + (isHex ? 1 : 0) + (semiNext ? 1 : 0);\n",
        "replaced": "            return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n",
        "patch_type": "replace",
        "next_line_no": 81
    }
}