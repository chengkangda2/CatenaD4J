{
    "num_of_hunks": 9,
    "0": {
        "file_name": "src/com/google/javascript/jscomp/AmbiguateProperties.java",
        "from_line_no": 210,
        "to_line_no": 210,
        "replaced": "        computeRelatedTypes(p.type);\n",
        "patch_type": "delete",
        "next_line_no": 211
    },
    "1": {
        "file_name": "src/com/google/javascript/jscomp/AmbiguateProperties.java",
        "from_line_no": 356,
        "to_line_no": 356,
        "replaced_with": "      return !prop.relatedTypesSet.intersects(typesInSet);\n",
        "replaced": "      return !getRelated(prop.type).intersects(typesInSet);\n",
        "patch_type": "replace",
        "next_line_no": 357
    },
    "2": {
        "file_name": "src/com/google/javascript/jscomp/AmbiguateProperties.java",
        "from_line_no": 366,
        "to_line_no": 366,
        "replaced_with": "      typesRelatedToSet.or(prop.relatedTypesSet);\n",
        "replaced": "      typesRelatedToSet.or(getRelated(prop.type));\n",
        "patch_type": "replace",
        "next_line_no": 367
    },
    "3": {
        "file_name": "src/com/google/javascript/jscomp/AmbiguateProperties.java",
        "from_line_no": 553,
        "to_line_no": 553,
        "replaced": "    JSType type;\n",
        "patch_type": "delete",
        "next_line_no": 554
    },
    "4": {
        "file_name": "src/com/google/javascript/jscomp/AmbiguateProperties.java",
        "replaced_with": "    JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());\n",
        "patch_type": "insert",
        "next_line_no": 558
    },
    "5": {
        "file_name": "src/com/google/javascript/jscomp/AmbiguateProperties.java",
        "from_line_no": 594,
        "to_line_no": 597,
        "replaced_with": "      int typeInt = getIntForType(newType);\n      if (!typesSet.get(typeInt)) {\n        computeRelatedTypes(newType);\n        typesSet.set(typeInt);\n        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));\n",
        "replaced": "      if (type == null) {\n        type = newType;\n      } else {\n        type = type.getLeastSupertype(newType);\n",
        "patch_type": "replace",
        "next_line_no": 598
    },
    "6": {
        "file_name": "src/com/google/javascript/jscomp/AmbiguateProperties.java",
        "from_line_no": 599,
        "to_line_no": 599,
        "replaced": "      typesSet.set(getIntForType(newType));\n",
        "patch_type": "delete",
        "next_line_no": 600
    },
    "7": {
        "file_name": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "from_line_no": 560,
        "to_line_no": 560,
        "replaced_with": "      } else {\n",
        "replaced": "      }\n",
        "patch_type": "replace",
        "next_line_no": 561
    },
    "8": {
        "file_name": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "replaced_with": "        for (ObjectType iface :\n                 ownerType.getCtorImplementedInterfaces()) {\n          propType = iface.getPropertyType(propName);\n          if (propType instanceof FunctionType) {\n            return (FunctionType) propType;\n          }\n        }\n      }\n",
        "patch_type": "insert",
        "next_line_no": 563
    }
}