{
    "num_of_hunks": 6,
    "0": {
        "file_name": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "replaced_with": "    int lineStartChar = -1;\n",
        "patch_type": "insert",
        "next_line_no": 1358
    },
    "1": {
        "file_name": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "replaced_with": "            lineStartChar = stream.getCharno() + 1;\n",
        "patch_type": "insert",
        "next_line_no": 1364
    },
    "2": {
        "file_name": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "replaced_with": "          lineStartChar = 0;\n",
        "patch_type": "insert",
        "next_line_no": 1382
    },
    "3": {
        "file_name": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "replaced_with": "          boolean isEOC = token == JsDocToken.EOC;\n          if (!isEOC) {\n            if (lineStartChar != -1 && option == WhitespaceOption.PRESERVE) {\n              int numSpaces = stream.getCharno() - lineStartChar;\n              for (int i = 0; i < numSpaces; i++) {\n                builder.append(' ');\n              }\n              lineStartChar = -1;\n            } else if (builder.length() > 0) {\n",
        "patch_type": "insert",
        "next_line_no": 1389
    },
    "4": {
        "file_name": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "replaced_with": "              builder.append(' ');\n            }\n          }\n",
        "patch_type": "insert",
        "next_line_no": 1390
    },
    "5": {
        "file_name": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "from_line_no": 1414,
        "to_line_no": 1416,
        "replaced": "          if (builder.length() > 0) {\n            builder.append(' ');\n          }\n",
        "patch_type": "delete",
        "next_line_no": 1417
    }
}