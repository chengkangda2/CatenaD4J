{
    "org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek": {
        "begin_line_no": 255,
        "end_line_no": 263,
        "file_path": "src/test/java/org/joda/time/format/TestDateTimeFormatterBuilder.java",
        "to": [
            "    public void test_printParseZoneDawsonCreek$catena_1() {  // clashes with shorter Dawson\n        DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder()\n            .appendPattern(\"yyyy-MM-dd HH:mm \").appendTimeZoneId();\n        DateTimeFormatter f = bld.toFormatter();\n        \n        DateTime dt = new DateTime(2007, 3, 4, 12, 30, 0, DateTimeZone.forID(\"America/Dawson_Creek\"));\n        try{ assertEquals(\"2007-03-04 12:30 America/Dawson_Creek\", f.print(dt));                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(dt, f.parseDateTime(\"2007-03-04 12:30 America/Dawson_Creek\"));                         /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    public void test_printParseZoneDawsonCreek$catena_0() {  // clashes with shorter Dawson\n        DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder()\n            .appendPattern(\"yyyy-MM-dd HH:mm \").appendTimeZoneId();\n        DateTimeFormatter f = bld.toFormatter();\n        \n        DateTime dt = new DateTime(2007, 3, 4, 12, 30, 0, DateTimeZone.forID(\"America/Dawson_Creek\"));\n        assertEquals(\"2007-03-04 12:30 America/Dawson_Creek\", f.print(dt));                                 /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(dt, f.parseDateTime(\"2007-03-04 12:30 America/Dawson_Creek\"));                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}