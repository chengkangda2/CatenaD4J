{
    "org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero": {
        "begin_line_no": 266,
        "end_line_no": 272,
        "file_path": "src/test/java/org/joda/time/TestMutableDateTime_Adds.java",
        "to": [
            "    public void testAddDays_int_dstOverlapWinter_addZero$catena_1() {\n        MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"));\n        test.addHours(1);\n        try{ assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        test.addDays(0);\n        assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString());                                     /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    public void testAddDays_int_dstOverlapWinter_addZero$catena_0() {\n        MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"));\n        test.addHours(1);\n        assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString());                                     /***** ORIGINAL ASSERTION IS HERE *****/\n        test.addDays(0);\n        try{ assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    },
    "org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero": {
        "begin_line_no": 222,
        "end_line_no": 228,
        "file_path": "src/test/java/org/joda/time/TestMutableDateTime_Adds.java",
        "to": [
            "    public void testAddYears_int_dstOverlapWinter_addZero$catena_0() {\n        MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"));\n        test.addHours(1);\n        assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString());                                     /***** ORIGINAL ASSERTION IS HERE *****/\n        test.addYears(0);\n        try{ assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    },
    "org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero": {
        "begin_line_no": 295,
        "end_line_no": 301,
        "file_path": "src/test/java/org/joda/time/TestMutableDateTime_Adds.java",
        "to": [
            "    public void testAddWeeks_int_dstOverlapWinter_addZero$catena_0() {\n        MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"));\n        test.addHours(1);\n        assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString());                                     /***** ORIGINAL ASSERTION IS HERE *****/\n        test.addWeeks(0);\n        try{ assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    },
    "org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero": {
        "begin_line_no": 182,
        "end_line_no": 188,
        "file_path": "src/test/java/org/joda/time/TestMutableDateTime_Adds.java",
        "to": [
            "    public void testAdd_DurationFieldType_int_dstOverlapWinter_addZero$catena_0() {\n        MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"));\n        test.addHours(1);\n        assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString());                                     /***** ORIGINAL ASSERTION IS HERE *****/\n        test.add(DurationFieldType.years(), 0);\n        try{ assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    },
    "org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero": {
        "begin_line_no": 244,
        "end_line_no": 250,
        "file_path": "src/test/java/org/joda/time/TestMutableDateTime_Adds.java",
        "to": [
            "    public void testAddMonths_int_dstOverlapWinter_addZero$catena_0() {\n        MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"));\n        test.addHours(1);\n        assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString());                                     /***** ORIGINAL ASSERTION IS HERE *****/\n        test.addMonths(0);\n        try{ assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}