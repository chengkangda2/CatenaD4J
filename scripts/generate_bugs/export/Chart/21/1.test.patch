{
    "org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests::testGetRangeBounds": {
        "begin_line_no": 270,
        "end_line_no": 294,
        "file_path": "tests/org/jfree/data/statistics/junit/DefaultBoxAndWhiskerCategoryDatasetTests.java",
        "to": [
            "    public void testGetRangeBounds$catena_6() {\n        DefaultBoxAndWhiskerCategoryDataset d1 \n                = new DefaultBoxAndWhiskerCategoryDataset();\n        d1.add(new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, \n                new ArrayList()), \"R2\", \"C1\");\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        // this replaces the entry with the current minimum value, but the new\n        // minimum value is now in a different item\n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 8.6, 9.6, \n                new ArrayList()), \"R1\", \"C1\");\n        assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(false));                                        /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testGetRangeBounds$catena_7() {\n        DefaultBoxAndWhiskerCategoryDataset d1 \n                = new DefaultBoxAndWhiskerCategoryDataset();\n        d1.add(new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, \n                new ArrayList()), \"R2\", \"C1\");\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        // this replaces the entry with the current minimum value, but the new\n        // minimum value is now in a different item\n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 8.6, 9.6, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(true));                                         /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    public void testGetRangeBounds$catena_0() {\n        DefaultBoxAndWhiskerCategoryDataset d1 \n                = new DefaultBoxAndWhiskerCategoryDataset();\n        d1.add(new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, \n                new ArrayList()), \"R1\", \"C1\");\n        assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(false));                                        /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, \n                new ArrayList()), \"R2\", \"C1\");\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        // this replaces the entry with the current minimum value, but the new\n        // minimum value is now in a different item\n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 8.6, 9.6, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testGetRangeBounds$catena_1() {\n        DefaultBoxAndWhiskerCategoryDataset d1 \n                = new DefaultBoxAndWhiskerCategoryDataset();\n        d1.add(new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(true));                                         /***** ORIGINAL ASSERTION IS HERE *****/\n        \n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, \n                new ArrayList()), \"R2\", \"C1\");\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        // this replaces the entry with the current minimum value, but the new\n        // minimum value is now in a different item\n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 8.6, 9.6, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testGetRangeBounds$catena_2() {\n        DefaultBoxAndWhiskerCategoryDataset d1 \n                = new DefaultBoxAndWhiskerCategoryDataset();\n        d1.add(new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, \n                new ArrayList()), \"R1\", \"C1\");\n        assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(false));                                        /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, \n                new ArrayList()), \"R2\", \"C1\");\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        // this replaces the entry with the current minimum value, but the new\n        // minimum value is now in a different item\n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 8.6, 9.6, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testGetRangeBounds$catena_3() {\n        DefaultBoxAndWhiskerCategoryDataset d1 \n                = new DefaultBoxAndWhiskerCategoryDataset();\n        d1.add(new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(true));                                         /***** ORIGINAL ASSERTION IS HERE *****/\n        \n        d1.add(new BoxAndWhiskerItem(2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, \n                new ArrayList()), \"R2\", \"C1\");\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        // this replaces the entry with the current minimum value, but the new\n        // minimum value is now in a different item\n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 8.6, 9.6, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testGetRangeBounds$catena_4() {\n        DefaultBoxAndWhiskerCategoryDataset d1 \n                = new DefaultBoxAndWhiskerCategoryDataset();\n        d1.add(new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, \n                new ArrayList()), \"R2\", \"C1\");\n        assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(false));                                        /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        // this replaces the entry with the current minimum value, but the new\n        // minimum value is now in a different item\n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 8.6, 9.6, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testGetRangeBounds$catena_5() {\n        DefaultBoxAndWhiskerCategoryDataset d1 \n                = new DefaultBoxAndWhiskerCategoryDataset();\n        d1.add(new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        d1.add(new BoxAndWhiskerItem(2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, \n                new ArrayList()), \"R2\", \"C1\");\n        try{ assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(true));                                         /***** ORIGINAL ASSERTION IS HERE *****/\n        \n        // this replaces the entry with the current minimum value, but the new\n        // minimum value is now in a different item\n        d1.add(new BoxAndWhiskerItem(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 8.6, 9.6, \n                new ArrayList()), \"R1\", \"C1\");\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(false));                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(true));                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}