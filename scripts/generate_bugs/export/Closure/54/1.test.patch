{
    "com.google.javascript.jscomp.TypedScopeCreatorTest::testPropertyOnUnknownSuperClass2": {
        "begin_line_no": 365,
        "end_line_no": 379,
        "file_path": "test/com/google/javascript/jscomp/TypedScopeCreatorTest.java",
        "to": [
            "  public void testPropertyOnUnknownSuperClass2$catena_4() {\n    try{ testSame(\n        \"var goog = this.foo();\" +\n        \"/** @constructor \\n * @extends {goog.Unknown} */\" +\n        \"function Foo() {}\" +\n        \"Foo.prototype = {bar: 1};\" +\n        \"var x = new Foo();\",\n        RhinoErrorReporter.TYPE_PARSE_ERROR);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    ObjectType x = (ObjectType) findNameType(\"x\", globalScope);\n    try{ assertEquals(\"Foo\", x.toString());                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertEquals(\"Foo.prototype\", x.getImplicitPrototype().toString());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertTrue(x.getImplicitPrototype().hasOwnProperty(\"bar\"));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertEquals(\"?\", x.getPropertyType(\"bar\").toString());                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertTrue(x.isPropertyTypeInferred(\"bar\"));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testPropertyOnUnknownSuperClass2$catena_0() {\n    testSame(\n        \"var goog = this.foo();\" +\n        \"/** @constructor \\n * @extends {goog.Unknown} */\" +\n        \"function Foo() {}\" +\n        \"Foo.prototype = {bar: 1};\" +\n        \"var x = new Foo();\",\n        RhinoErrorReporter.TYPE_PARSE_ERROR);                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n    ObjectType x = (ObjectType) findNameType(\"x\", globalScope);\n    try{ assertEquals(\"Foo\", x.toString());                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertEquals(\"Foo.prototype\", x.getImplicitPrototype().toString());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertTrue(x.getImplicitPrototype().hasOwnProperty(\"bar\"));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertEquals(\"?\", x.getPropertyType(\"bar\").toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertTrue(x.isPropertyTypeInferred(\"bar\"));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testPropertyOnUnknownSuperClass2$catena_1() {\n    try{ testSame(\n        \"var goog = this.foo();\" +\n        \"/** @constructor \\n * @extends {goog.Unknown} */\" +\n        \"function Foo() {}\" +\n        \"Foo.prototype = {bar: 1};\" +\n        \"var x = new Foo();\",\n        RhinoErrorReporter.TYPE_PARSE_ERROR);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    ObjectType x = (ObjectType) findNameType(\"x\", globalScope);\n    assertEquals(\"Foo\", x.toString());                                                                      /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertEquals(\"Foo.prototype\", x.getImplicitPrototype().toString());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertTrue(x.getImplicitPrototype().hasOwnProperty(\"bar\"));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertEquals(\"?\", x.getPropertyType(\"bar\").toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertTrue(x.isPropertyTypeInferred(\"bar\"));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testPropertyOnUnknownSuperClass2$catena_2() {\n    try{ testSame(\n        \"var goog = this.foo();\" +\n        \"/** @constructor \\n * @extends {goog.Unknown} */\" +\n        \"function Foo() {}\" +\n        \"Foo.prototype = {bar: 1};\" +\n        \"var x = new Foo();\",\n        RhinoErrorReporter.TYPE_PARSE_ERROR);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    ObjectType x = (ObjectType) findNameType(\"x\", globalScope);\n    try{ assertEquals(\"Foo\", x.toString());                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertEquals(\"Foo.prototype\", x.getImplicitPrototype().toString());                                     /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertTrue(x.getImplicitPrototype().hasOwnProperty(\"bar\"));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertEquals(\"?\", x.getPropertyType(\"bar\").toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertTrue(x.isPropertyTypeInferred(\"bar\"));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testPropertyOnUnknownSuperClass2$catena_3() {\n    try{ testSame(\n        \"var goog = this.foo();\" +\n        \"/** @constructor \\n * @extends {goog.Unknown} */\" +\n        \"function Foo() {}\" +\n        \"Foo.prototype = {bar: 1};\" +\n        \"var x = new Foo();\",\n        RhinoErrorReporter.TYPE_PARSE_ERROR);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    ObjectType x = (ObjectType) findNameType(\"x\", globalScope);\n    try{ assertEquals(\"Foo\", x.toString());                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertEquals(\"Foo.prototype\", x.getImplicitPrototype().toString());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertTrue(x.getImplicitPrototype().hasOwnProperty(\"bar\"));                                             /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertEquals(\"?\", x.getPropertyType(\"bar\").toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertTrue(x.isPropertyTypeInferred(\"bar\"));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
            "  public void testPropertyOnUnknownSuperClass2$catena_5() {\n    try{ testSame(\n        \"var goog = this.foo();\" +\n        \"/** @constructor \\n * @extends {goog.Unknown} */\" +\n        \"function Foo() {}\" +\n        \"Foo.prototype = {bar: 1};\" +\n        \"var x = new Foo();\",\n        RhinoErrorReporter.TYPE_PARSE_ERROR);                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    ObjectType x = (ObjectType) findNameType(\"x\", globalScope);\n    try{ assertEquals(\"Foo\", x.toString());                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertEquals(\"Foo.prototype\", x.getImplicitPrototype().toString());                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertTrue(x.getImplicitPrototype().hasOwnProperty(\"bar\"));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertEquals(\"?\", x.getPropertyType(\"bar\").toString());                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertTrue(x.isPropertyTypeInferred(\"bar\"));                                                            /***** ORIGINAL ASSERTION IS HERE *****/\n  }"
        ]
    }
}