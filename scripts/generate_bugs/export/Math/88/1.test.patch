{
    "org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath272": {
        "begin_line_no": 34,
        "end_line_no": 49,
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "to": [
            "    @Test\n    public void testMath272$catena_2() throws OptimizationException {\n        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);\n        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();\n        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));\n        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));\n        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));\n\n        SimplexSolver solver = new SimplexSolver();\n        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);\n        \n        try{ assertEquals(0.0, solution.getPoint()[0], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(1.0, solution.getPoint()[1], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(1.0, solution.getPoint()[2], .0000001);                                                /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(3.0, solution.getValue(), .0000001);                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n      }",
            "    @Test\n    public void testMath272$catena_3() throws OptimizationException {\n        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);\n        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();\n        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));\n        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));\n        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));\n\n        SimplexSolver solver = new SimplexSolver();\n        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);\n        \n        try{ assertEquals(0.0, solution.getPoint()[0], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(1.0, solution.getPoint()[1], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(1.0, solution.getPoint()[2], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(3.0, solution.getValue(), .0000001);                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n      }",
            "    @Test\n    public void testMath272$catena_0() throws OptimizationException {\n        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);\n        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();\n        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));\n        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));\n        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));\n\n        SimplexSolver solver = new SimplexSolver();\n        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);\n        \n        assertEquals(0.0, solution.getPoint()[0], .0000001);                                                /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(1.0, solution.getPoint()[1], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(1.0, solution.getPoint()[2], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3.0, solution.getValue(), .0000001);                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n      }",
            "    @Test\n    public void testMath272$catena_1() throws OptimizationException {\n        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);\n        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();\n        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));\n        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));\n        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));\n\n        SimplexSolver solver = new SimplexSolver();\n        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);\n        \n        try{ assertEquals(0.0, solution.getPoint()[0], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(1.0, solution.getPoint()[1], .0000001);                                                /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(1.0, solution.getPoint()[2], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(3.0, solution.getValue(), .0000001);                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n      }"
        ]
    }
}