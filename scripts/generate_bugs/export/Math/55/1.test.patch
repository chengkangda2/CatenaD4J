{
    "org.apache.commons.math.geometry.Vector3DTest::testCrossProductCancellation": {
        "begin_line_no": 155,
        "end_line_no": 166,
        "file_path": "src/test/java/org/apache/commons/math/geometry/Vector3DTest.java",
        "to": [
            "    @Test\n    public void testCrossProductCancellation$catena_1() {\n        Vector3D v1 = new Vector3D(9070467121.0, 4535233560.0, 1);\n        Vector3D v2 = new Vector3D(9070467123.0, 4535233561.0, 1);\n        try{ checkVector(Vector3D.crossProduct(v1, v2), -1, 2, 1);                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        double scale    = FastMath.scalb(1.0, 100);\n        Vector3D big1   = new Vector3D(scale, v1);\n        Vector3D small2 = new Vector3D(1 / scale, v2);\n        checkVector(Vector3D.crossProduct(big1, small2), -1, 2, 1);                                         /***** ORIGINAL ASSERTION IS HERE *****/\n\n    }",
            "    @Test\n    public void testCrossProductCancellation$catena_0() {\n        Vector3D v1 = new Vector3D(9070467121.0, 4535233560.0, 1);\n        Vector3D v2 = new Vector3D(9070467123.0, 4535233561.0, 1);\n        checkVector(Vector3D.crossProduct(v1, v2), -1, 2, 1);                                               /***** ORIGINAL ASSERTION IS HERE *****/\n\n        double scale    = FastMath.scalb(1.0, 100);\n        Vector3D big1   = new Vector3D(scale, v1);\n        Vector3D small2 = new Vector3D(1 / scale, v2);\n        try{ checkVector(Vector3D.crossProduct(big1, small2), -1, 2, 1);                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }"
        ]
    }
}