{
    "org.apache.commons.math.analysis.solvers.BrentSolverTest::testRootEndpoints": {
        "begin_line_no": 305,
        "end_line_no": 322,
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java",
        "to": [
            "    public void testRootEndpoints$catena_3() throws Exception {\n        UnivariateRealFunction f = new SinFunction();\n        UnivariateRealSolver solver = new BrentSolver();\n\n        // endpoint is root\n        double result = solver.solve(f, Math.PI, 4);\n        try{ assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        result = solver.solve(f, 3, Math.PI);\n        try{ assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        result = solver.solve(f, Math.PI, 4, 3.5);\n        try{ assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        result = solver.solve(f, 3, Math.PI, 3.07);\n        assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());                                        /***** ORIGINAL ASSERTION IS HERE *****/\n\n    }",
            "    public void testRootEndpoints$catena_0() throws Exception {\n        UnivariateRealFunction f = new SinFunction();\n        UnivariateRealSolver solver = new BrentSolver();\n\n        // endpoint is root\n        double result = solver.solve(f, Math.PI, 4);\n        assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());                                        /***** ORIGINAL ASSERTION IS HERE *****/\n\n        result = solver.solve(f, 3, Math.PI);\n        try{ assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        result = solver.solve(f, Math.PI, 4, 3.5);\n        try{ assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        result = solver.solve(f, 3, Math.PI, 3.07);\n        try{ assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }",
            "    public void testRootEndpoints$catena_1() throws Exception {\n        UnivariateRealFunction f = new SinFunction();\n        UnivariateRealSolver solver = new BrentSolver();\n\n        // endpoint is root\n        double result = solver.solve(f, Math.PI, 4);\n        try{ assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        result = solver.solve(f, 3, Math.PI);\n        assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());                                        /***** ORIGINAL ASSERTION IS HERE *****/\n\n        result = solver.solve(f, Math.PI, 4, 3.5);\n        try{ assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        result = solver.solve(f, 3, Math.PI, 3.07);\n        try{ assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    }"
        ]
    }
}