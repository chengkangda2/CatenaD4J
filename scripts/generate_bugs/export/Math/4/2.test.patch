{
    "org.apache.commons.math3.geometry.euclidean.threed.SubLineTest::testIntersectionNotIntersecting": {
        "begin_line_no": 156,
        "end_line_no": 162,
        "file_path": "src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java",
        "to": [
            "    @Test\n    public void testIntersectionNotIntersecting$catena_1() throws MathIllegalArgumentException {\n        SubLine sub1 = new SubLine(new Vector3D(1, 1, 1), new Vector3D(1.5, 1, 1));\n        SubLine sub2 = new SubLine(new Vector3D(2, 3, 0), new Vector3D(2, 3, 0.5));\n        try{ Assert.assertNull(sub1.intersection(sub2, true));                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n        Assert.assertNull(sub1.intersection(sub2, false));                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    @Test\n    public void testIntersectionNotIntersecting$catena_0() throws MathIllegalArgumentException {\n        SubLine sub1 = new SubLine(new Vector3D(1, 1, 1), new Vector3D(1.5, 1, 1));\n        SubLine sub2 = new SubLine(new Vector3D(2, 3, 0), new Vector3D(2, 3, 0.5));\n        Assert.assertNull(sub1.intersection(sub2, true));                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ Assert.assertNull(sub1.intersection(sub2, false));                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    },
    "org.apache.commons.math3.geometry.euclidean.twod.SubLineTest::testIntersectionParallel": {
        "begin_line_no": 147,
        "end_line_no": 153,
        "file_path": "src/test/java/org/apache/commons/math3/geometry/euclidean/twod/SubLineTest.java",
        "to": [
            ""
        ]
    }
}