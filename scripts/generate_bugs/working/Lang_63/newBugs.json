{
    "original": {
        "num_of_hunks": 4,
        "0": {
            "file_name": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
            "from_line_no": 306,
            "to_line_no": 306,
            "replaced_with": "            end.add(Calendar.MONTH, -1);\n            days += end.getActualMaximum(Calendar.DAY_OF_MONTH);\n",
            "replaced": "            days += 31;\n",
            "patch_type": "replace",
            "next_line_no": 307
        },
        "1": {
            "file_name": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
            "replaced_with": "            end.add(Calendar.MONTH, 1);\n",
            "patch_type": "insert",
            "next_line_no": 313
        },
        "2": {
            "file_name": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
            "from_line_no": 318,
            "to_line_no": 324,
            "replaced": "        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);\n        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);\n        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);\n        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);\n        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);\n        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);\n        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);\n",
            "patch_type": "delete",
            "next_line_no": 325
        },
        "3": {
            "file_name": "src/java/org/apache/commons/lang/time/DurationFormatUtils.java",
            "from_line_no": 432,
            "to_line_no": 443,
            "replaced": "    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {\n        end.add( field, -1 * difference );\n        int endValue = end.get(field);\n        int startValue = start.get(field);\n        if (endValue < startValue) {\n            int newdiff = startValue - endValue;\n            end.add( field, newdiff );\n            return newdiff;\n        } else {\n            return 0;\n        }\n    }\n",
            "patch_type": "delete",
            "next_line_no": 444
        }
    },
    "method": {
        "failing_tests": [
            "org.apache.commons.lang.time.DurationFormatUtilsTest::testJiraLang281"
        ],
        "org.apache.commons.lang.time.DurationFormatUtilsTest::testJiraLang281": {
            "file_path": "src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java",
            "Instance": "Begin: Pos(417, 12)\nEnd: Pos(437, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Lang_63/src/test//org/apache/commons/lang/time/DurationFormatUtilsTest.java\nName: testJiraLang281\nChilds: [StatementAssertion<Begin: Pos(436, 9), End: Pos(436, 35)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Lang_63/src/test//org/apache/commons/lang/time/DurationFormatUtilsTest.java",
            "name": "testJiraLang281",
            "begin": "Pos(417, 12)",
            "end": "Pos(437, 5)",
            "begin_line_no": 417,
            "end_line_no": 437,
            "child": [
                "Begin: Pos(436, 9)\nEnd: Pos(436, 35)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [],
            "func": {}
        }
    },
    "0010": {
        "failing_tests": [
            "org.apache.commons.lang.time.DurationFormatUtilsTest::testJiraLang281"
        ]
    }
}