---
Begin generate bug_id: Math_26
num_of_hunks: 2
timeout for running: 3600
use working dir: ./working/data/Math_26
Try to checkout Math_26
build dir: ['./working/data/Math_26/target/classes', './working/data/Math_26/target/test-classes']
init FileManager
trace file: src/main/java/org/apache/commons/math3/fraction/Fraction.java
trying to replace old failing tests
edit: replace from 134 range 7 at src/test/java/org/apache/commons/math3/fraction/FractionTest.java
to
    @Test
    public void testIntegerOverflow$catena_0() {
        checkIntegerOverflow(0.75000000001455192);                                                          /***** ORIGINAL ASSERTION IS HERE *****/
        try{ checkIntegerOverflow(1.0e10);                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ checkIntegerOverflow(-1.0e10);                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ checkIntegerOverflow(-43979.60679604749);                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testIntegerOverflow$catena_1() {
        try{ checkIntegerOverflow(0.75000000001455192);                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        checkIntegerOverflow(1.0e10);                                                                       /***** ORIGINAL ASSERTION IS HERE *****/
        try{ checkIntegerOverflow(-1.0e10);                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ checkIntegerOverflow(-43979.60679604749);                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testIntegerOverflow$catena_2() {
        try{ checkIntegerOverflow(0.75000000001455192);                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ checkIntegerOverflow(1.0e10);                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
        checkIntegerOverflow(-1.0e10);                                                                      /***** ORIGINAL ASSERTION IS HERE *****/
        try{ checkIntegerOverflow(-43979.60679604749);                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testIntegerOverflow$catena_3() {
        try{ checkIntegerOverflow(0.75000000001455192);                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ checkIntegerOverflow(1.0e10);                                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ checkIntegerOverflow(-1.0e10);                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        checkIntegerOverflow(-43979.60679604749);                                                           /***** ORIGINAL ASSERTION IS HERE *****/
    }
trace file: src/test/java/org/apache/commons/math3/fraction/FractionTest.java
new test num: 4
ori test num: 0
pattern: 00
patches are written to file
running tests...
used time: Finished in 133.09 seconds
Failing tests: 2
	org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow$catena_2
	org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow$catena_3
processed: 00
pattern: 01
try to fix hunk: 1
replace from 209 with range 1 to
            if ((FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow)) {

patches are written to file
running tests...
used time: Finished in 112.26 seconds
Failing tests: 1
	org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow$catena_2
select new bug
Pattern: 01
new failing tests:
org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow$catena_3
Save found bug
processed: 01
pattern: 10
try to fix hunk: 0
replace from 181 with range 1 to
        if (FastMath.abs(a0) > overflow) {

patches are written to file
running tests...
used time: Finished in 107.32 seconds
Failing tests: 1
	org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow$catena_3
select new bug
Pattern: 10
new failing tests:
org.apache.commons.math3.fraction.FractionTest::testIntegerOverflow$catena_2
Save found bug
processed: 10
pattern: 11
try to fix hunk: 0
replace from 181 with range 1 to
        if (FastMath.abs(a0) > overflow) {

try to fix hunk: 1
replace from 209 with range 1 to
            if ((FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow)) {

patches are written to file
running tests...
used time: Finished in 103.99 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
processed: 11
Find 2 new bugs
