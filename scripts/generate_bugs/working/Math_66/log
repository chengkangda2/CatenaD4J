---
Begin generate bug_id: Math_66
num_of_hunks: 12
NOTICE: may not contains full fix patterns for hunks are too much (12 hunks)
timeout for running: 3600
use working dir: ./working/data/Math_66
Try to checkout Math_66
build dir: ['./working/data/Math_66/target/classes', './working/data/Math_66/target/test-classes']
init FileManager
trace file: src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java
trying to replace old failing tests
edit: replace from 55 range 46 at src/test/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java
to
    @Test
    public void testQuinticMin$catena_0() throws MathException {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        underlying.setRelativeAccuracy(1e-15);
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(4312000053L);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 5, g);
        minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
        minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());

        try {
            minimizer.getOptima();
            fail("an exception should have been thrown");                                                   /***** ORIGINAL ASSERTION IS HERE *****/
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try {
            minimizer.getOptimaValues();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }

        double result = minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);
        try{ assertEquals(-0.2719561270319131, result, 1.0e-13);                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.2719561270319131, minimizer.getResult(), 1.0e-13);                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.04433426954946637, minimizer.getFunctionValue(), 1.0e-13);                     }catch(Throwable __SHOULD_BE_IGNORED){}

        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 0; i < optima.length; ++i) {
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations()    >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMin$catena_1() throws MathException {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        underlying.setRelativeAccuracy(1e-15);
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(4312000053L);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 5, g);
        minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
        minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());

        try {
            minimizer.getOptima();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            fail("wrong exception caught");                                                                 /***** ORIGINAL ASSERTION IS HERE *****/
        }
        try {
            minimizer.getOptimaValues();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }

        double result = minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);
        try{ assertEquals(-0.2719561270319131, result, 1.0e-13);                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.2719561270319131, minimizer.getResult(), 1.0e-13);                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.04433426954946637, minimizer.getFunctionValue(), 1.0e-13);                     }catch(Throwable __SHOULD_BE_IGNORED){}

        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 0; i < optima.length; ++i) {
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations()    >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMin$catena_2() throws MathException {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        underlying.setRelativeAccuracy(1e-15);
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(4312000053L);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 5, g);
        minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
        minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());

        try {
            minimizer.getOptima();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try {
            minimizer.getOptimaValues();
            fail("an exception should have been thrown");                                                   /***** ORIGINAL ASSERTION IS HERE *****/
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }

        double result = minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);
        try{ assertEquals(-0.2719561270319131, result, 1.0e-13);                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.2719561270319131, minimizer.getResult(), 1.0e-13);                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.04433426954946637, minimizer.getFunctionValue(), 1.0e-13);                     }catch(Throwable __SHOULD_BE_IGNORED){}

        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 0; i < optima.length; ++i) {
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations()    >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMin$catena_3() throws MathException {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        underlying.setRelativeAccuracy(1e-15);
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(4312000053L);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 5, g);
        minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
        minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());

        try {
            minimizer.getOptima();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try {
            minimizer.getOptimaValues();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            fail("wrong exception caught");                                                                 /***** ORIGINAL ASSERTION IS HERE *****/
        }

        double result = minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);
        try{ assertEquals(-0.2719561270319131, result, 1.0e-13);                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.2719561270319131, minimizer.getResult(), 1.0e-13);                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.04433426954946637, minimizer.getFunctionValue(), 1.0e-13);                     }catch(Throwable __SHOULD_BE_IGNORED){}

        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 0; i < optima.length; ++i) {
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations()    >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMin$catena_4() throws MathException {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        underlying.setRelativeAccuracy(1e-15);
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(4312000053L);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 5, g);
        minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
        minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());

        try {
            minimizer.getOptima();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try {
            minimizer.getOptimaValues();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }

        double result = minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);
        assertEquals(-0.2719561270319131, result, 1.0e-13);                                                 /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-0.2719561270319131, minimizer.getResult(), 1.0e-13);                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.04433426954946637, minimizer.getFunctionValue(), 1.0e-13);                     }catch(Throwable __SHOULD_BE_IGNORED){}

        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 0; i < optima.length; ++i) {
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations()    >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMin$catena_5() throws MathException {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        underlying.setRelativeAccuracy(1e-15);
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(4312000053L);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 5, g);
        minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
        minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());

        try {
            minimizer.getOptima();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try {
            minimizer.getOptimaValues();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }

        double result = minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);
        try{ assertEquals(-0.2719561270319131, result, 1.0e-13);                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-0.2719561270319131, minimizer.getResult(), 1.0e-13);                                  /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-0.04433426954946637, minimizer.getFunctionValue(), 1.0e-13);                     }catch(Throwable __SHOULD_BE_IGNORED){}

        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 0; i < optima.length; ++i) {
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations()    >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMin$catena_6() throws MathException {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        underlying.setRelativeAccuracy(1e-15);
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(4312000053L);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 5, g);
        minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
        minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());

        try {
            minimizer.getOptima();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try {
            minimizer.getOptimaValues();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }

        double result = minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);
        try{ assertEquals(-0.2719561270319131, result, 1.0e-13);                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.2719561270319131, minimizer.getResult(), 1.0e-13);                             }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-0.04433426954946637, minimizer.getFunctionValue(), 1.0e-13);                          /***** ORIGINAL ASSERTION IS HERE *****/

        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 0; i < optima.length; ++i) {
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations()    >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMin$catena_7() throws MathException {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        underlying.setRelativeAccuracy(1e-15);
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(4312000053L);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 5, g);
        minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
        minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());

        try {
            minimizer.getOptima();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try {
            minimizer.getOptimaValues();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }

        double result = minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);
        try{ assertEquals(-0.2719561270319131, result, 1.0e-13);                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.2719561270319131, minimizer.getResult(), 1.0e-13);                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.04433426954946637, minimizer.getFunctionValue(), 1.0e-13);                     }catch(Throwable __SHOULD_BE_IGNORED){}

        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 0; i < optima.length; ++i) {
            assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                     /***** ORIGINAL ASSERTION IS HERE *****/
        }
        try{ assertTrue(minimizer.getEvaluations()    >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMin$catena_8() throws MathException {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        underlying.setRelativeAccuracy(1e-15);
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(4312000053L);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 5, g);
        minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
        minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());

        try {
            minimizer.getOptima();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try {
            minimizer.getOptimaValues();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }

        double result = minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);
        try{ assertEquals(-0.2719561270319131, result, 1.0e-13);                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.2719561270319131, minimizer.getResult(), 1.0e-13);                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.04433426954946637, minimizer.getFunctionValue(), 1.0e-13);                     }catch(Throwable __SHOULD_BE_IGNORED){}

        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 0; i < optima.length; ++i) {
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        assertTrue(minimizer.getEvaluations()    >= 120);                                                   /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue(minimizer.getEvaluations()    <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMin$catena_9() throws MathException {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        underlying.setRelativeAccuracy(1e-15);
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(4312000053L);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 5, g);
        minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
        minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());

        try {
            minimizer.getOptima();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try {
            minimizer.getOptimaValues();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }

        double result = minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);
        try{ assertEquals(-0.2719561270319131, result, 1.0e-13);                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.2719561270319131, minimizer.getResult(), 1.0e-13);                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.04433426954946637, minimizer.getFunctionValue(), 1.0e-13);                     }catch(Throwable __SHOULD_BE_IGNORED){}

        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 0; i < optima.length; ++i) {
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations()    >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue(minimizer.getEvaluations()    <= 170);                                                   /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue(minimizer.getIterationCount() >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMin$catena_10() throws MathException {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        underlying.setRelativeAccuracy(1e-15);
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(4312000053L);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 5, g);
        minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
        minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());

        try {
            minimizer.getOptima();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try {
            minimizer.getOptimaValues();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }

        double result = minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);
        try{ assertEquals(-0.2719561270319131, result, 1.0e-13);                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.2719561270319131, minimizer.getResult(), 1.0e-13);                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.04433426954946637, minimizer.getFunctionValue(), 1.0e-13);                     }catch(Throwable __SHOULD_BE_IGNORED){}

        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 0; i < optima.length; ++i) {
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations()    >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue(minimizer.getIterationCount() >= 120);                                                   /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue(minimizer.getIterationCount() <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMin$catena_11() throws MathException {
        // The quintic function has zeros at 0, +-0.5 and +-1.
        // The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        underlying.setRelativeAccuracy(1e-15);
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(4312000053L);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 5, g);
        minimizer.setAbsoluteAccuracy(10 * minimizer.getAbsoluteAccuracy());
        minimizer.setRelativeAccuracy(10 * minimizer.getRelativeAccuracy());

        try {
            minimizer.getOptima();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try {
            minimizer.getOptimaValues();
            try{ fail("an exception should have been thrown");                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalStateException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        }

        double result = minimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);
        try{ assertEquals(-0.2719561270319131, result, 1.0e-13);                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.2719561270319131, minimizer.getResult(), 1.0e-13);                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-0.04433426954946637, minimizer.getFunctionValue(), 1.0e-13);                     }catch(Throwable __SHOULD_BE_IGNORED){}

        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 0; i < optima.length; ++i) {
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations()    >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 170);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() >= 120);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue(minimizer.getIterationCount() <= 170);                                                   /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 34 range 20 at src/test/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java
to
    @Test
    public void testSinMin$catena_0() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(44428400075l);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 10, g);
        minimizer.optimize(f, GoalType.MINIMIZE, -100.0, 100.0);
        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 1; i < optima.length; ++i) {
            double d = (optima[i] - optima[i-1]) / (2 * Math.PI);
            assertTrue (Math.abs(d - Math.rint(d)) < 1.0e-8);                                               /***** ORIGINAL ASSERTION IS HERE *****/
            try{ assertEquals(-1.0, f.value(optima[i]), 1.0e-10);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations() > 150);                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations() < 250);                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testSinMin$catena_1() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(44428400075l);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 10, g);
        minimizer.optimize(f, GoalType.MINIMIZE, -100.0, 100.0);
        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 1; i < optima.length; ++i) {
            double d = (optima[i] - optima[i-1]) / (2 * Math.PI);
            try{ assertTrue (Math.abs(d - Math.rint(d)) < 1.0e-8);                                          }catch(Throwable __SHOULD_BE_IGNORED){}
            assertEquals(-1.0, f.value(optima[i]), 1.0e-10);                                                /***** ORIGINAL ASSERTION IS HERE *****/
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations() > 150);                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations() < 250);                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testSinMin$catena_2() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(44428400075l);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 10, g);
        minimizer.optimize(f, GoalType.MINIMIZE, -100.0, 100.0);
        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 1; i < optima.length; ++i) {
            double d = (optima[i] - optima[i-1]) / (2 * Math.PI);
            try{ assertTrue (Math.abs(d - Math.rint(d)) < 1.0e-8);                                          }catch(Throwable __SHOULD_BE_IGNORED){}
            try{ assertEquals(-1.0, f.value(optima[i]), 1.0e-10);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
            assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                     /***** ORIGINAL ASSERTION IS HERE *****/
        }
        try{ assertTrue(minimizer.getEvaluations() > 150);                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations() < 250);                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testSinMin$catena_3() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(44428400075l);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 10, g);
        minimizer.optimize(f, GoalType.MINIMIZE, -100.0, 100.0);
        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 1; i < optima.length; ++i) {
            double d = (optima[i] - optima[i-1]) / (2 * Math.PI);
            try{ assertTrue (Math.abs(d - Math.rint(d)) < 1.0e-8);                                          }catch(Throwable __SHOULD_BE_IGNORED){}
            try{ assertEquals(-1.0, f.value(optima[i]), 1.0e-10);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        assertTrue(minimizer.getEvaluations() > 150);                                                       /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue(minimizer.getEvaluations() < 250);                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testSinMin$catena_4() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer underlying = new BrentOptimizer();
        JDKRandomGenerator g = new JDKRandomGenerator();
        g.setSeed(44428400075l);
        MultiStartUnivariateRealOptimizer minimizer =
            new MultiStartUnivariateRealOptimizer(underlying, 10, g);
        minimizer.optimize(f, GoalType.MINIMIZE, -100.0, 100.0);
        double[] optima = minimizer.getOptima();
        double[] optimaValues = minimizer.getOptimaValues();
        for (int i = 1; i < optima.length; ++i) {
            double d = (optima[i] - optima[i-1]) / (2 * Math.PI);
            try{ assertTrue (Math.abs(d - Math.rint(d)) < 1.0e-8);                                          }catch(Throwable __SHOULD_BE_IGNORED){}
            try{ assertEquals(-1.0, f.value(optima[i]), 1.0e-10);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
            try{ assertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);                                }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertTrue(minimizer.getEvaluations() > 150);                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue(minimizer.getEvaluations() < 250);                                                       /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 85 range 31 at src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java
to
    @Test
    public void testQuinticMinStatistics$catena_0() throws MathException {
        // The function has local minima at -0.27195613 and 0.82221643.
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setRelativeAccuracy(1e-10);
        minimizer.setAbsoluteAccuracy(1e-11);

        final DescriptiveStatistics[] stat = new DescriptiveStatistics[3];
        for (int i = 0; i < stat.length; i++) {
            stat[i] = new DescriptiveStatistics();
        }

        final double min = -0.75;
        final double max = 0.25;
        final int nSamples = 200;
        final double delta = (max - min) / nSamples;
        for (int i = 0; i < nSamples; i++) {
            final double start = min + i * delta;
            stat[0].addValue(minimizer.optimize(f, GoalType.MINIMIZE, min, max, start));
            stat[1].addValue(minimizer.getIterationCount());
            stat[2].addValue(minimizer.getEvaluations());
        }

        final double meanOptValue = stat[0].getMean();
        final double medianIter = stat[1].getPercentile(50);
        final double medianEval = stat[2].getPercentile(50);
        assertTrue(meanOptValue > -0.27195612812 && meanOptValue < -0.27195612811);                         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(medianIter, 17, Math.ulp(1d));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(medianEval, 18, Math.ulp(1d));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMinStatistics$catena_1() throws MathException {
        // The function has local minima at -0.27195613 and 0.82221643.
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setRelativeAccuracy(1e-10);
        minimizer.setAbsoluteAccuracy(1e-11);

        final DescriptiveStatistics[] stat = new DescriptiveStatistics[3];
        for (int i = 0; i < stat.length; i++) {
            stat[i] = new DescriptiveStatistics();
        }

        final double min = -0.75;
        final double max = 0.25;
        final int nSamples = 200;
        final double delta = (max - min) / nSamples;
        for (int i = 0; i < nSamples; i++) {
            final double start = min + i * delta;
            stat[0].addValue(minimizer.optimize(f, GoalType.MINIMIZE, min, max, start));
            stat[1].addValue(minimizer.getIterationCount());
            stat[2].addValue(minimizer.getEvaluations());
        }

        final double meanOptValue = stat[0].getMean();
        final double medianIter = stat[1].getPercentile(50);
        final double medianEval = stat[2].getPercentile(50);
        try{ assertTrue(meanOptValue > -0.27195612812 && meanOptValue < -0.27195612811);                    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(medianIter, 17, Math.ulp(1d));                                                         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(medianEval, 18, Math.ulp(1d));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void testQuinticMinStatistics$catena_2() throws MathException {
        // The function has local minima at -0.27195613 and 0.82221643.
        UnivariateRealFunction f = new QuinticFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setRelativeAccuracy(1e-10);
        minimizer.setAbsoluteAccuracy(1e-11);

        final DescriptiveStatistics[] stat = new DescriptiveStatistics[3];
        for (int i = 0; i < stat.length; i++) {
            stat[i] = new DescriptiveStatistics();
        }

        final double min = -0.75;
        final double max = 0.25;
        final int nSamples = 200;
        final double delta = (max - min) / nSamples;
        for (int i = 0; i < nSamples; i++) {
            final double start = min + i * delta;
            stat[0].addValue(minimizer.optimize(f, GoalType.MINIMIZE, min, max, start));
            stat[1].addValue(minimizer.getIterationCount());
            stat[2].addValue(minimizer.getEvaluations());
        }

        final double meanOptValue = stat[0].getMean();
        final double medianIter = stat[1].getPercentile(50);
        final double medianEval = stat[2].getPercentile(50);
        try{ assertTrue(meanOptValue > -0.27195612812 && meanOptValue < -0.27195612811);                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(medianIter, 17, Math.ulp(1d));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(medianEval, 18, Math.ulp(1d));                                                         /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 40 range 30 at src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java
to
    @Test
    public void testSinMin$catena_0() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setMaxEvaluations(200);
        assertEquals(200, minimizer.getMaxEvaluations());                                                                            /***** ORIGINAL ASSERTION IS HERE *****/
        try {
            minimizer.getResult();
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (NoDataException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 100);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    >=  15);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        minimizer.setMaxEvaluations(10);
        try {
            minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (FunctionEvaluationException fee) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
    }     @Test
    public void testSinMin$catena_1() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setMaxEvaluations(200);
        try{ assertEquals(200, minimizer.getMaxEvaluations());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try {
            minimizer.getResult();
            fail("an exception should have been thrown");                                                                            /***** ORIGINAL ASSERTION IS HERE *****/
        } catch (NoDataException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 100);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    >=  15);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        minimizer.setMaxEvaluations(10);
        try {
            minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (FunctionEvaluationException fee) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
    }     @Test
    public void testSinMin$catena_2() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setMaxEvaluations(200);
        try{ assertEquals(200, minimizer.getMaxEvaluations());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try {
            minimizer.getResult();
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (NoDataException ise) {
            // expected
        } catch (Exception e) {
            fail("wrong exception caught");                                                                                          /***** ORIGINAL ASSERTION IS HERE *****/
        }
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 100);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    >=  15);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        minimizer.setMaxEvaluations(10);
        try {
            minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (FunctionEvaluationException fee) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
    }     @Test
    public void testSinMin$catena_3() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setMaxEvaluations(200);
        try{ assertEquals(200, minimizer.getMaxEvaluations());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try {
            minimizer.getResult();
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (NoDataException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 100);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    >=  15);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        minimizer.setMaxEvaluations(10);
        try {
            minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (FunctionEvaluationException fee) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
    }     @Test
    public void testSinMin$catena_4() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setMaxEvaluations(200);
        try{ assertEquals(200, minimizer.getMaxEvaluations());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try {
            minimizer.getResult();
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (NoDataException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue(minimizer.getIterationCount() <= 50);                                                                             /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 100);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    >=  15);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        minimizer.setMaxEvaluations(10);
        try {
            minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (FunctionEvaluationException fee) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
    }     @Test
    public void testSinMin$catena_5() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setMaxEvaluations(200);
        try{ assertEquals(200, minimizer.getMaxEvaluations());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try {
            minimizer.getResult();
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (NoDataException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 10 * minimizer.getRelativeAccuracy());         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 100);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    >=  15);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        minimizer.setMaxEvaluations(10);
        try {
            minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (FunctionEvaluationException fee) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
    }     @Test
    public void testSinMin$catena_6() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setMaxEvaluations(200);
        try{ assertEquals(200, minimizer.getMaxEvaluations());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try {
            minimizer.getResult();
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (NoDataException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue(minimizer.getIterationCount() <= 50);                                                                             /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue(minimizer.getEvaluations()    <= 100);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    >=  15);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        minimizer.setMaxEvaluations(10);
        try {
            minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (FunctionEvaluationException fee) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
    }     @Test
    public void testSinMin$catena_7() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setMaxEvaluations(200);
        try{ assertEquals(200, minimizer.getMaxEvaluations());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try {
            minimizer.getResult();
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (NoDataException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue(minimizer.getEvaluations()    <= 100);                                                                            /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue(minimizer.getEvaluations()    >=  15);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        minimizer.setMaxEvaluations(10);
        try {
            minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (FunctionEvaluationException fee) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
    }     @Test
    public void testSinMin$catena_8() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setMaxEvaluations(200);
        try{ assertEquals(200, minimizer.getMaxEvaluations());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try {
            minimizer.getResult();
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (NoDataException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 100);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue(minimizer.getEvaluations()    >=  15);                                                                            /***** ORIGINAL ASSERTION IS HERE *****/
        minimizer.setMaxEvaluations(10);
        try {
            minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (FunctionEvaluationException fee) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
    }     @Test
    public void testSinMin$catena_9() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setMaxEvaluations(200);
        try{ assertEquals(200, minimizer.getMaxEvaluations());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try {
            minimizer.getResult();
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (NoDataException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 100);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    >=  15);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        minimizer.setMaxEvaluations(10);
        try {
            minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
            fail("an exception should have been thrown");                                                                            /***** ORIGINAL ASSERTION IS HERE *****/
        } catch (FunctionEvaluationException fee) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
    }     @Test
    public void testSinMin$catena_10() throws MathException {
        UnivariateRealFunction f = new SinFunction();
        UnivariateRealOptimizer minimizer = new BrentOptimizer();
        minimizer.setMaxEvaluations(200);
        try{ assertEquals(200, minimizer.getMaxEvaluations());                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try {
            minimizer.getResult();
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (NoDataException ise) {
            // expected
        } catch (Exception e) {
            try{ fail("wrong exception caught");                                                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        }
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 1, 5), 10 * minimizer.getRelativeAccuracy());    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getIterationCount() <= 50);                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    <= 100);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue(minimizer.getEvaluations()    >=  15);                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        minimizer.setMaxEvaluations(10);
        try {
            minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);
            try{ fail("an exception should have been thrown");                                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (FunctionEvaluationException fee) {
            // expected
        } catch (Exception e) {
            fail("wrong exception caught");                                                                                          /***** ORIGINAL ASSERTION IS HERE *****/
        }
    }
trace file: src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java
trace file: src/test/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java
new test num: 31
ori test num: 0
pattern: 000000000000
patches are written to file
running tests...
used time: Finished in 39.32 seconds
Failing tests: 8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
processed: 000000000000
pattern: 100000000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

patches are written to file
running tests...
used time: Finished in 25.98 seconds
Failing tests: 10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100000000000
pattern: 010000000000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

patches are written to file
running tests...
used time: Finished in 26.48 seconds
Failing tests: 5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
select new bug
Pattern: 010000000000
new failing tests:
org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
Save found bug
processed: 010000000000
pattern: 001000000000
try to fix hunk: 2
delete from 57 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000000
pattern: 000100000000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000000
pattern: 000010000000
try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
used time: Finished in 23.83 seconds
Failing tests: 8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
No new failing tests but only 1 hunk
processed: 000010000000
pattern: 000001000000
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000000
pattern: 000000100000
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 23.10 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000100000
pattern: 000000010000
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010000
pattern: 000000001000
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 26.66 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000001000
pattern: 000000000100
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 27.58 seconds
Failing tests: 12
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000000100
pattern: 000000000010
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 25.72 seconds
Failing tests: 9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000000010
pattern: 000000000001
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000001
pattern: 110000000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

patches are written to file
running tests...
used time: Finished in 26.16 seconds
Failing tests: 7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110000000000
pattern: 101000000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000000
pattern: 100100000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000000
pattern: 100010000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
used time: Finished in 28.09 seconds
Failing tests: 10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100010000000
pattern: 100001000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000000
pattern: 100000100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 25.76 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100000100000
pattern: 100000010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010000
pattern: 100000001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 28.33 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100000001000
pattern: 100000000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 25.51 seconds
Failing tests: 13
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100000000100
pattern: 100000000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 26.44 seconds
Failing tests: 10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100000000010
pattern: 100000000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000001
pattern: 011000000000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000000
pattern: 010100000000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000000
pattern: 010010000000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
used time: Finished in 26.48 seconds
Failing tests: 3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Can independently fix ['org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5', 'org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4']
select new bug
Pattern: 010010000000
new failing tests:
org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
Save found bug
processed: 010010000000
pattern: 010001000000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000000
pattern: 010000100000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 27.57 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010000100000
pattern: 010000010000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010000
pattern: 010000001000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 25.23 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010000001000
pattern: 010000000100
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 25.25 seconds
Failing tests: 10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010000000100
pattern: 010000000010
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 27.02 seconds
Failing tests: 7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010000000010
pattern: 010000000001
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000001
pattern: 001100000000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000000
pattern: 001010000000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000000
pattern: 001001000000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000000
pattern: 001000100000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100000
pattern: 001000010000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010000
pattern: 001000001000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001000
pattern: 001000000100
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000100
pattern: 001000000010
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000010
pattern: 001000000001
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000001
pattern: 000110000000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000000
pattern: 000101000000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000000
pattern: 000100100000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100000
pattern: 000100010000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010000
pattern: 000100001000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001000
pattern: 000100000100
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000100
pattern: 000100000010
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000010
pattern: 000100000001
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000001
pattern: 000011000000
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000000
pattern: 000010100000
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 25.52 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000010100000
pattern: 000010010000
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010000
pattern: 000010001000
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 26.28 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000010001000
pattern: 000010000100
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 28.20 seconds
Failing tests: 12
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000010000100
pattern: 000010000010
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 28.87 seconds
Failing tests: 9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000010000010
pattern: 000010000001
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000001
pattern: 000001100000
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100000
pattern: 000001010000
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010000
pattern: 000001001000
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001000
pattern: 000001000100
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000100
pattern: 000001000010
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000010
pattern: 000001000001
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000001
pattern: 000000110000
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110000
pattern: 000000101000
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 28.43 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000101000
pattern: 000000100100
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 28.49 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000100100
pattern: 000000100010
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 28.32 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000100010
pattern: 000000100001
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100001
pattern: 000000011000
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000011000
pattern: 000000010100
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010100
pattern: 000000010010
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010010
pattern: 000000010001
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010001
pattern: 000000001100
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 32.41 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000001100
pattern: 000000001010
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 27.48 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000001010
pattern: 000000001001
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001001
pattern: 000000000110
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 29.24 seconds
Failing tests: 15
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000000110
pattern: 000000000101
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000101
pattern: 000000000011
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000011
pattern: 111000000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000000
pattern: 110100000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000000
pattern: 110010000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
used time: Finished in 28.69 seconds
Failing tests: 5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110010000000
pattern: 110001000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000000
pattern: 110000100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 27.18 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110000100000
pattern: 110000010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010000
pattern: 110000001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 27.70 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110000001000
pattern: 110000000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 33.23 seconds
Failing tests: 11
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110000000100
pattern: 110000000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 25.83 seconds
Failing tests: 8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110000000010
pattern: 110000000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000001
pattern: 101100000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100000000
pattern: 101010000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010000000
pattern: 101001000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001000000
pattern: 101000100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000100000
pattern: 101000010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000010000
pattern: 101000001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000001000
pattern: 101000000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000100
pattern: 101000000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000010
pattern: 101000000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000001
pattern: 100110000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110000000
pattern: 100101000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101000000
pattern: 100100100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100100000
pattern: 100100010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100010000
pattern: 100100001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100001000
pattern: 100100000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000100
pattern: 100100000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000010
pattern: 100100000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000001
pattern: 100011000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011000000
pattern: 100010100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 29.77 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100010100000
pattern: 100010010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010010000
pattern: 100010001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 31.94 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100010001000
pattern: 100010000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 37.53 seconds
Failing tests: 13
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100010000100
pattern: 100010000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 33.50 seconds
Failing tests: 10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100010000010
pattern: 100010000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000001
pattern: 100001100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001100000
pattern: 100001010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001010000
pattern: 100001001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001001000
pattern: 100001000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000100
pattern: 100001000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000010
pattern: 100001000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000001
pattern: 100000110000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000110000
pattern: 100000101000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 28.46 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100000101000
pattern: 100000100100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 31.43 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100000100100
pattern: 100000100010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 36.13 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100000100010
pattern: 100000100001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100001
pattern: 100000011000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000011000
pattern: 100000010100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010100
pattern: 100000010010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010010
pattern: 100000010001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010001
pattern: 100000001100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 31.33 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100000001100
pattern: 100000001010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 31.41 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100000001010
pattern: 100000001001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001001
pattern: 100000000110
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 29.25 seconds
Failing tests: 15
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 100000000110
pattern: 100000000101
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000101
pattern: 100000000011
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000011
pattern: 011100000000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011100000000
pattern: 011010000000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011010000000
pattern: 011001000000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011001000000
pattern: 011000100000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000100000
pattern: 011000010000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000010000
pattern: 011000001000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000001000
pattern: 011000000100
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000100
pattern: 011000000010
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000010
pattern: 011000000001
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000001
pattern: 010110000000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010110000000
pattern: 010101000000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010101000000
pattern: 010100100000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100100000
pattern: 010100010000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100010000
pattern: 010100001000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100001000
pattern: 010100000100
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000100
pattern: 010100000010
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000010
pattern: 010100000001
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000001
pattern: 010011000000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010011000000
pattern: 010010100000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 34.46 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010010100000
pattern: 010010010000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010010000
pattern: 010010001000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 32.23 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010010001000
pattern: 010010000100
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 30.39 seconds
Failing tests: 10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010010000100
pattern: 010010000010
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 27.36 seconds
Failing tests: 5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010010000010
pattern: 010010000001
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000001
pattern: 010001100000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001100000
pattern: 010001010000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001010000
pattern: 010001001000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001001000
pattern: 010001000100
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000100
pattern: 010001000010
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000010
pattern: 010001000001
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000001
pattern: 010000110000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000110000
pattern: 010000101000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 37.82 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010000101000
pattern: 010000100100
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 35.07 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010000100100
pattern: 010000100010
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 34.51 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010000100010
pattern: 010000100001
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100001
pattern: 010000011000
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000011000
pattern: 010000010100
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010100
pattern: 010000010010
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010010
pattern: 010000010001
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010001
pattern: 010000001100
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 29.14 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010000001100
pattern: 010000001010
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 30.08 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010000001010
pattern: 010000001001
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000001001
pattern: 010000000110
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 29.04 seconds
Failing tests: 13
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 010000000110
pattern: 010000000101
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000101
pattern: 010000000011
try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000011
pattern: 001110000000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110000000
pattern: 001101000000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101000000
pattern: 001100100000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100100000
pattern: 001100010000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100010000
pattern: 001100001000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100001000
pattern: 001100000100
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000100
pattern: 001100000010
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000010
pattern: 001100000001
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000001
pattern: 001011000000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001011000000
pattern: 001010100000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010100000
pattern: 001010010000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010010000
pattern: 001010001000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010001000
pattern: 001010000100
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000100
pattern: 001010000010
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000010
pattern: 001010000001
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000001
pattern: 001001100000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001100000
pattern: 001001010000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001010000
pattern: 001001001000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001001000
pattern: 001001000100
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000100
pattern: 001001000010
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000010
pattern: 001001000001
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000001
pattern: 001000110000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000110000
pattern: 001000101000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000101000
pattern: 001000100100
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100100
pattern: 001000100010
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100010
pattern: 001000100001
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100001
pattern: 001000011000
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000011000
pattern: 001000010100
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010100
pattern: 001000010010
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010010
pattern: 001000010001
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010001
pattern: 001000001100
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001100
pattern: 001000001010
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001010
pattern: 001000001001
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001001
pattern: 001000000110
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000110
pattern: 001000000101
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000101
pattern: 001000000011
try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000011
pattern: 000111000000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111000000
pattern: 000110100000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110100000
pattern: 000110010000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110010000
pattern: 000110001000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110001000
pattern: 000110000100
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000100
pattern: 000110000010
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000010
pattern: 000110000001
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000001
pattern: 000101100000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101100000
pattern: 000101010000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101010000
pattern: 000101001000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101001000
pattern: 000101000100
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000100
pattern: 000101000010
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000010
pattern: 000101000001
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000001
pattern: 000100110000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100110000
pattern: 000100101000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100101000
pattern: 000100100100
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100100
pattern: 000100100010
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100010
pattern: 000100100001
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100001
pattern: 000100011000
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100011000
pattern: 000100010100
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010100
pattern: 000100010010
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010010
pattern: 000100010001
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010001
pattern: 000100001100
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001100
pattern: 000100001010
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001010
pattern: 000100001001
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001001
pattern: 000100000110
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000110
pattern: 000100000101
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000101
pattern: 000100000011
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000011
pattern: 000011100000
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011100000
pattern: 000011010000
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011010000
pattern: 000011001000
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011001000
pattern: 000011000100
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000100
pattern: 000011000010
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000010
pattern: 000011000001
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000001
pattern: 000010110000
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010110000
pattern: 000010101000
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 30.67 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000010101000
pattern: 000010100100
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 29.21 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000010100100
pattern: 000010100010
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 28.18 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000010100010
pattern: 000010100001
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100001
pattern: 000010011000
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010011000
pattern: 000010010100
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010100
pattern: 000010010010
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010010
pattern: 000010010001
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010001
pattern: 000010001100
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 27.73 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000010001100
pattern: 000010001010
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 26.90 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000010001010
pattern: 000010001001
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001001
pattern: 000010000110
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 30.03 seconds
Failing tests: 16
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000010000110
pattern: 000010000101
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000101
pattern: 000010000011
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000011
pattern: 000001110000
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001110000
pattern: 000001101000
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001101000
pattern: 000001100100
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100100
pattern: 000001100010
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100010
pattern: 000001100001
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100001
pattern: 000001011000
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001011000
pattern: 000001010100
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010100
pattern: 000001010010
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010010
pattern: 000001010001
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010001
pattern: 000001001100
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001100
pattern: 000001001010
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001010
pattern: 000001001001
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001001
pattern: 000001000110
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000110
pattern: 000001000101
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000101
pattern: 000001000011
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000011
pattern: 000000111000
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000111000
pattern: 000000110100
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110100
pattern: 000000110010
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110010
pattern: 000000110001
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110001
pattern: 000000101100
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 28.97 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000101100
pattern: 000000101010
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 27.46 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000101010
pattern: 000000101001
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101001
pattern: 000000100110
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 32.03 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000100110
pattern: 000000100101
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100101
pattern: 000000100011
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100011
pattern: 000000011100
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000011100
pattern: 000000011010
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000011010
pattern: 000000011001
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000011001
pattern: 000000010110
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010110
pattern: 000000010101
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010101
pattern: 000000010011
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010011
pattern: 000000001110
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 30.17 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 000000001110
pattern: 000000001101
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001101
pattern: 000000001011
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001011
pattern: 000000000111
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000111
pattern: 111100000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111100000000
pattern: 111010000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111010000000
pattern: 111001000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111001000000
pattern: 111000100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000100000
pattern: 111000010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000010000
pattern: 111000001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000001000
pattern: 111000000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000100
pattern: 111000000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000010
pattern: 111000000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000001
pattern: 110110000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110110000000
pattern: 110101000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110101000000
pattern: 110100100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100100000
pattern: 110100010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100010000
pattern: 110100001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100001000
pattern: 110100000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000100
pattern: 110100000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000010
pattern: 110100000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000001
pattern: 110011000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110011000000
pattern: 110010100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 34.00 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110010100000
pattern: 110010010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010010000
pattern: 110010001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 29.22 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110010001000
pattern: 110010000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 30.10 seconds
Failing tests: 11
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110010000100
pattern: 110010000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 27.44 seconds
Failing tests: 6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110010000010
pattern: 110010000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010000001
pattern: 110001100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001100000
pattern: 110001010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001010000
pattern: 110001001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001001000
pattern: 110001000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000100
pattern: 110001000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000010
pattern: 110001000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000001
pattern: 110000110000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000110000
pattern: 110000101000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
used time: Finished in 30.48 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110000101000
pattern: 110000100100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 37.90 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110000100100
pattern: 110000100010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 26.08 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110000100010
pattern: 110000100001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100001
pattern: 110000011000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000011000
pattern: 110000010100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010100
pattern: 110000010010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010010
pattern: 110000010001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010001
pattern: 110000001100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
used time: Finished in 27.84 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110000001100
pattern: 110000001010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 31.71 seconds
Failing tests: 30
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_0
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_1
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_3
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_8
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_10
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testSumSinc
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMax
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMin
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testMinEndpoints
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_10
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_3
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_5
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin$catena_8
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110000001010
pattern: 110000001001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001001
pattern: 110000000110
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
used time: Finished in 28.66 seconds
Failing tests: 13
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_2
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_4
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_5
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_6
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_7
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_9
	org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin$catena_11
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testQuadratic
	org.apache.commons.math.optimization.general.PowellOptimizerTest::testMaximizeQuadratic
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_0
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_1
	org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics$catena_2
Includes new failing tests, set to unusable
processed: 110000000110
pattern: 110000000101
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000101
pattern: 110000000011
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 1
replace from 46 with range 2 to
        setAbsoluteAccuracy(1e-11);
        setRelativeAccuracy(1e-9);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000011
pattern: 101110000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101110000000
pattern: 101101000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101101000000
pattern: 101100100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100100000
pattern: 101100010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100010000
pattern: 101100001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100001000
pattern: 101100000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100000100
pattern: 101100000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100000010
pattern: 101100000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100000001
pattern: 101011000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101011000000
pattern: 101010100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010100000
pattern: 101010010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010010000
pattern: 101010001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010001000
pattern: 101010000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010000100
pattern: 101010000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010000010
pattern: 101010000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010000001
pattern: 101001100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001100000
pattern: 101001010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001010000
pattern: 101001001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001001000
pattern: 101001000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001000100
pattern: 101001000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001000010
pattern: 101001000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001000001
pattern: 101000110000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000110000
pattern: 101000101000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000101000
pattern: 101000100100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000100100
pattern: 101000100010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000100010
pattern: 101000100001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000100001
pattern: 101000011000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000011000
pattern: 101000010100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000010100
pattern: 101000010010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000010010
pattern: 101000010001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000010001
pattern: 101000001100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000001100
pattern: 101000001010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000001010
pattern: 101000001001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000001001
pattern: 101000000110
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000110
pattern: 101000000101
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000101
pattern: 101000000011
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 2
delete from 57 with range 4
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000011
pattern: 100111000000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100111000000
pattern: 100110100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110100000
pattern: 100110010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110010000
pattern: 100110001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110001000
pattern: 100110000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110000100
pattern: 100110000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110000010
pattern: 100110000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110000001
pattern: 100101100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101100000
pattern: 100101010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101010000
pattern: 100101001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101001000
pattern: 100101000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101000100
pattern: 100101000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101000010
pattern: 100101000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101000001
pattern: 100100110000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100110000
pattern: 100100101000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100101000
pattern: 100100100100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100100100
pattern: 100100100010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100100010
pattern: 100100100001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100100001
pattern: 100100011000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100011000
pattern: 100100010100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100010100
pattern: 100100010010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100010010
pattern: 100100010001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100010001
pattern: 100100001100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100001100
pattern: 100100001010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100001010
pattern: 100100001001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100001001
pattern: 100100000110
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000110
pattern: 100100000101
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000101
pattern: 100100000011
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 3
replace from 62 with range 1 to
                        getMin(), getStartValue(), getMax(),

try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000011
pattern: 100011100000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011100000
pattern: 100011010000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011010000
pattern: 100011001000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011001000
pattern: 100011000100
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 9
replace from 238 with range 1 to
                setFunctionValue(isMinim ? fx : -fx);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011000100
pattern: 100011000010
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 10
replace from 241 with range 1 to
            incrementIterationsCounter();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011000010
pattern: 100011000001
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 5
delete from 94 with range 2
try to fix hunk: 11
delete from 243 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011000001
pattern: 100010110000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 7
replace from 126 with range 2 to
        while (true) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010110000
pattern: 100010101000
try to fix hunk: 0
replace from 44 with range 1 to
        setMaxEvaluations(1000);

try to fix hunk: 4
delete from 65 with range 3
try to fix hunk: 6
replace from 119 with range 2 to
        double fx = computeObjectiveValue(x);
        if (!isMinim) {

try to fix hunk: 8
replace from 200 with range 2 to
                double fu = computeObjectiveValue(u);
                if (!isMinim) {

patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

