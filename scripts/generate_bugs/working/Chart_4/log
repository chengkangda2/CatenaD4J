---
Begin generate bug_id: Chart_4
num_of_hunks: 2
timeout for running: 3600
use working dir: ./working/data/Chart_4
Try to checkout Chart_4
build dir: ['./working/data/Chart_4/build', './working/data/Chart_4/build-tests']
init FileManager
trace file: source/org/jfree/chart/plot/XYPlot.java
trying to replace old failing tests
edit: replace from 253 range 23 at tests/org/jfree/chart/axis/junit/LogAxisTests.java
to
    public void testXYAutoRange1$catena_0() {
        XYSeries series = new XYSeries("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot(
            "Test",
            "X",
            "Y",
            dataset,
            PlotOrientation.VERTICAL,
            false,
            false,
            false
        );
        XYPlot plot = (XYPlot) chart.getPlot();
        LogAxis axis = new LogAxis("Log(Y)");
        plot.setRangeAxis(axis);
        assertEquals(0.9465508226401592, axis.getLowerBound(), EPSILON);                                    /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(3.1694019256486126, axis.getUpperBound(), EPSILON);                               }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testXYAutoRange1$catena_1() {
        XYSeries series = new XYSeries("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot(
            "Test",
            "X",
            "Y",
            dataset,
            PlotOrientation.VERTICAL,
            false,
            false,
            false
        );
        XYPlot plot = (XYPlot) chart.getPlot();
        LogAxis axis = new LogAxis("Log(Y)");
        plot.setRangeAxis(axis);
        try{ assertEquals(0.9465508226401592, axis.getLowerBound(), EPSILON);                               }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(3.1694019256486126, axis.getUpperBound(), EPSILON);                                    /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 281 range 23 at tests/org/jfree/chart/axis/junit/LogAxisTests.java
to
    public void testXYAutoRange2$catena_0() {
        XYSeries series = new XYSeries("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot(
            "Test",
            "X",
            "Y",
            dataset,
            PlotOrientation.VERTICAL,
            false,
            false,
            false
        );
        XYPlot plot = (XYPlot) chart.getPlot();
        LogAxis axis = new LogAxis("Log(Y)");
        plot.setRangeAxis(axis);
        assertEquals(0.9465508226401592, axis.getLowerBound(), EPSILON);                                    /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(3.1694019256486126, axis.getUpperBound(), EPSILON);                               }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testXYAutoRange2$catena_1() {
        XYSeries series = new XYSeries("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot(
            "Test",
            "X",
            "Y",
            dataset,
            PlotOrientation.VERTICAL,
            false,
            false,
            false
        );
        XYPlot plot = (XYPlot) chart.getPlot();
        LogAxis axis = new LogAxis("Log(Y)");
        plot.setRangeAxis(axis);
        try{ assertEquals(0.9465508226401592, axis.getLowerBound(), EPSILON);                               }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(3.1694019256486126, axis.getUpperBound(), EPSILON);                                    /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 347 range 23 at tests/org/jfree/chart/axis/junit/NumberAxisTests.java
to
    public void testXYAutoRange1$catena_0() {
        XYSeries series = new XYSeries("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot(
            "Test",
            "X",
            "Y",
            dataset,
            PlotOrientation.VERTICAL,
            false,
            false,
            false
        );
        XYPlot plot = (XYPlot) chart.getPlot();
        NumberAxis axis = (NumberAxis) plot.getDomainAxis();
        axis.setAutoRangeIncludesZero(false);
        assertEquals(0.9, axis.getLowerBound(), EPSILON);                                                   /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(3.1, axis.getUpperBound(), EPSILON);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testXYAutoRange1$catena_1() {
        XYSeries series = new XYSeries("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot(
            "Test",
            "X",
            "Y",
            dataset,
            PlotOrientation.VERTICAL,
            false,
            false,
            false
        );
        XYPlot plot = (XYPlot) chart.getPlot();
        NumberAxis axis = (NumberAxis) plot.getDomainAxis();
        axis.setAutoRangeIncludesZero(false);
        try{ assertEquals(0.9, axis.getLowerBound(), EPSILON);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(3.1, axis.getUpperBound(), EPSILON);                                                   /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 375 range 23 at tests/org/jfree/chart/axis/junit/NumberAxisTests.java
to
    public void testXYAutoRange2$catena_0() {
        XYSeries series = new XYSeries("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot(
            "Test",
            "X",
            "Y",
            dataset,
            PlotOrientation.VERTICAL,
            false,
            false,
            false
        );
        XYPlot plot = (XYPlot) chart.getPlot();
        NumberAxis axis = (NumberAxis) plot.getRangeAxis();
        axis.setAutoRangeIncludesZero(false);
        assertEquals(0.9, axis.getLowerBound(), EPSILON);                                                   /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(3.1, axis.getUpperBound(), EPSILON);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testXYAutoRange2$catena_1() {
        XYSeries series = new XYSeries("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot(
            "Test",
            "X",
            "Y",
            dataset,
            PlotOrientation.VERTICAL,
            false,
            false,
            false
        );
        XYPlot plot = (XYPlot) chart.getPlot();
        NumberAxis axis = (NumberAxis) plot.getRangeAxis();
        axis.setAutoRangeIncludesZero(false);
        try{ assertEquals(0.9, axis.getLowerBound(), EPSILON);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(3.1, axis.getUpperBound(), EPSILON);                                                   /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 228 range 18 at tests/org/jfree/chart/axis/junit/ValueAxisTests.java
to
    public void testAxisMargins$catena_0() {
        XYSeries series = new XYSeries("S1");
        series.add(100.0, 1.1);
        series.add(200.0, 2.2);
        XYSeriesCollection dataset = new XYSeriesCollection(series);
        dataset.setIntervalWidth(0.0);
        JFreeChart chart = ChartFactory.createScatterPlot(
            "Title", "X", "Y", dataset, PlotOrientation.VERTICAL,
            false, false, false
        );
        ValueAxis domainAxis = ((XYPlot) chart.getPlot()).getDomainAxis();
        Range r = domainAxis.getRange();
        assertEquals(110.0, r.getLength(), EPSILON);                                                        /***** ORIGINAL ASSERTION IS HERE *****/
        domainAxis.setLowerMargin(0.10);
        domainAxis.setUpperMargin(0.10);
        r = domainAxis.getRange();
        try{ assertEquals(120.0, r.getLength(), EPSILON);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testAxisMargins$catena_1() {
        XYSeries series = new XYSeries("S1");
        series.add(100.0, 1.1);
        series.add(200.0, 2.2);
        XYSeriesCollection dataset = new XYSeriesCollection(series);
        dataset.setIntervalWidth(0.0);
        JFreeChart chart = ChartFactory.createScatterPlot(
            "Title", "X", "Y", dataset, PlotOrientation.VERTICAL,
            false, false, false
        );
        ValueAxis domainAxis = ((XYPlot) chart.getPlot()).getDomainAxis();
        Range r = domainAxis.getRange();
        try{ assertEquals(110.0, r.getLength(), EPSILON);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        domainAxis.setLowerMargin(0.10);
        domainAxis.setUpperMargin(0.10);
        r = domainAxis.getRange();
        assertEquals(120.0, r.getLength(), EPSILON);                                                        /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 130 range 22 at tests/org/jfree/chart/junit/ScatterPlotTests.java
to
    public void testReplaceDataset$catena_0() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        assertEquals(true, l.flag);                                                                         /***** ORIGINAL ASSERTION IS HERE *****/
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        try{ assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}

    }     public void testReplaceDataset$catena_1() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}

    }     public void testReplaceDataset$catena_2() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        try{ assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   /***** ORIGINAL ASSERTION IS HERE *****/

    }
edit: replace from 125 range 22 at tests/org/jfree/chart/junit/TimeSeriesChartTests.java
to
    public void testReplaceDataset$catena_0() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        assertEquals(true, l.flag);                                                                         /***** ORIGINAL ASSERTION IS HERE *****/
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        try{ assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}

    }     public void testReplaceDataset$catena_1() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}

    }     public void testReplaceDataset$catena_2() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        try{ assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   /***** ORIGINAL ASSERTION IS HERE *****/

    }
edit: replace from 126 range 22 at tests/org/jfree/chart/junit/XYAreaChartTests.java
to
    public void testReplaceDataset$catena_0() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        assertEquals(true, l.flag);                                                                         /***** ORIGINAL ASSERTION IS HERE *****/
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        try{ assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}

    }     public void testReplaceDataset$catena_1() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}

    }     public void testReplaceDataset$catena_2() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        try{ assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   /***** ORIGINAL ASSERTION IS HERE *****/

    }
edit: replace from 126 range 22 at tests/org/jfree/chart/junit/XYStepAreaChartTests.java
to
    public void testReplaceDataset$catena_0() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        assertEquals(true, l.flag);                                                                         /***** ORIGINAL ASSERTION IS HERE *****/
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        try{ assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}

    }     public void testReplaceDataset$catena_1() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}

    }     public void testReplaceDataset$catena_2() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        try{ assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   /***** ORIGINAL ASSERTION IS HERE *****/

    }
edit: replace from 126 range 22 at tests/org/jfree/chart/junit/XYStepChartTests.java
to
    public void testReplaceDataset$catena_0() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        assertEquals(true, l.flag);                                                                         /***** ORIGINAL ASSERTION IS HERE *****/
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        try{ assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}

    }     public void testReplaceDataset$catena_1() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   }catch(Throwable __SHOULD_BE_IGNORED){}

    }     public void testReplaceDataset$catena_2() {

        // create a dataset...
        XYSeries series1 = new XYSeries("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset dataset = new XYSeriesCollection(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        try{ assertEquals(true, l.flag);                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        try{ assertTrue("Expecting the lower bound of the range to be around 10: "
                   + range.getLowerBound(), range.getLowerBound() <= 10);                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertTrue("Expecting the upper bound of the range to be around 30: "
                   + range.getUpperBound(), range.getUpperBound() >= 30);                                   /***** ORIGINAL ASSERTION IS HERE *****/

    }
trace file: tests/org/jfree/chart/axis/junit/LogAxisTests.java
trace file: tests/org/jfree/chart/junit/ScatterPlotTests.java
trace file: tests/org/jfree/chart/junit/XYAreaChartTests.java
trace file: tests/org/jfree/chart/junit/XYStepChartTests.java
trace file: tests/org/jfree/chart/junit/TimeSeriesChartTests.java
trace file: tests/org/jfree/chart/junit/XYStepAreaChartTests.java
trace file: tests/org/jfree/chart/axis/junit/ValueAxisTests.java
trace file: tests/org/jfree/chart/axis/junit/NumberAxisTests.java
new test num: 25
ori test num: 12
pattern: 00
patches are written to file
running tests...
used time: Finished in 52.34 seconds
Failing tests: 37
	org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2$catena_0
	org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2$catena_1
	org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1$catena_0
	org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1$catena_1
	org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2$catena_0
	org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2$catena_1
	org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1$catena_0
	org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1$catena_1
	org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins$catena_0
	org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins$catena_1
	org.jfree.chart.junit.JFreeChartTests::testSerialization4
	org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo
	org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset$catena_0
	org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset$catena_1
	org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset$catena_2
	org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator
	org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo
	org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset$catena_0
	org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset$catena_1
	org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset$catena_2
	org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator
	org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo
	org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset$catena_0
	org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset$catena_1
	org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset$catena_2
	org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator
	org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo
	org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset$catena_0
	org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset$catena_1
	org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset$catena_2
	org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator
	org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo
	org.jfree.chart.junit.XYStepChartTests::testReplaceDataset$catena_0
	org.jfree.chart.junit.XYStepChartTests::testReplaceDataset$catena_1
	org.jfree.chart.junit.XYStepChartTests::testReplaceDataset$catena_2
	org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator
	org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines
processed: 00
pattern: 01
try to fix hunk: 1
insert before 4501 with                 }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01
pattern: 10
try to fix hunk: 0
insert before 4493 with                 if (r != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10
pattern: 11
try to fix hunk: 0
insert before 4493 with                 if (r != null) {

try to fix hunk: 1
insert before 4501 with                 }

patches are written to file
running tests...
used time: Finished in 32.90 seconds
Failing tests: 0
Can independently fix ['org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2$catena_0', 'org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2$catena_1', 'org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo', 'org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset$catena_2', 'org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo', 'org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator', 'org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1$catena_0', 'org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1$catena_1', 'org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1$catena_0', 'org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset$catena_0', 'org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo', 'org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator', 'org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator', 'org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2$catena_0', 'org.jfree.chart.junit.XYStepChartTests::testReplaceDataset$catena_1', 'org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset$catena_1', 'org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset$catena_1', 'org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines', 'org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo', 'org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2$catena_1', 'org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset$catena_2', 'org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset$catena_1', 'org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins$catena_0', 'org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo', 'org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset$catena_0', 'org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset$catena_0', 'org.jfree.chart.junit.XYStepChartTests::testReplaceDataset$catena_0', 'org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1$catena_1', 'org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins$catena_1', 'org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset$catena_2', 'org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset$catena_1', 'org.jfree.chart.junit.XYStepChartTests::testReplaceDataset$catena_2', 'org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator', 'org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset$catena_2', 'org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator', 'org.jfree.chart.junit.JFreeChartTests::testSerialization4', 'org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset$catena_0']
select new bug
Pattern: 11
new failing tests:
org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2$catena_0
org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2$catena_1
org.jfree.chart.junit.XYAreaChartTests::testDrawWithNullInfo
org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset$catena_2
org.jfree.chart.junit.XYStepAreaChartTests::testDrawWithNullInfo
org.jfree.chart.junit.ScatterPlotTests::testSetSeriesToolTipGenerator
org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1$catena_0
org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange1$catena_1
org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1$catena_0
org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset$catena_0
org.jfree.chart.junit.TimeSeriesChartTests::testDrawWithNullInfo
org.jfree.chart.junit.XYAreaChartTests::testSetSeriesToolTipGenerator
org.jfree.chart.junit.XYStepAreaChartTests::testSetSeriesToolTipGenerator
org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange2$catena_0
org.jfree.chart.junit.XYStepChartTests::testReplaceDataset$catena_1
org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset$catena_1
org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset$catena_1
org.jfree.chart.plot.junit.XYPlotTests::testDrawRangeGridlines
org.jfree.chart.junit.XYStepChartTests::testDrawWithNullInfo
org.jfree.chart.axis.junit.NumberAxisTests::testXYAutoRange2$catena_1
org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset$catena_2
org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset$catena_1
org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins$catena_0
org.jfree.chart.junit.ScatterPlotTests::testDrawWithNullInfo
org.jfree.chart.junit.TimeSeriesChartTests::testReplaceDataset$catena_0
org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset$catena_0
org.jfree.chart.junit.XYStepChartTests::testReplaceDataset$catena_0
org.jfree.chart.axis.junit.LogAxisTests::testXYAutoRange1$catena_1
org.jfree.chart.axis.junit.ValueAxisTests::testAxisMargins$catena_1
org.jfree.chart.junit.ScatterPlotTests::testReplaceDataset$catena_2
org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset$catena_1
org.jfree.chart.junit.XYStepChartTests::testReplaceDataset$catena_2
org.jfree.chart.junit.XYStepChartTests::testSetSeriesToolTipGenerator
org.jfree.chart.junit.XYStepAreaChartTests::testReplaceDataset$catena_2
org.jfree.chart.junit.TimeSeriesChartTests::testSetSeriesToolTipGenerator
org.jfree.chart.junit.JFreeChartTests::testSerialization4
org.jfree.chart.junit.XYAreaChartTests::testReplaceDataset$catena_0
Save found bug
processed: 11
Find 1 new bugs
