{
    "original": {
        "num_of_hunks": 6,
        "0": {
            "file_name": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
            "from_line_no": 285,
            "to_line_no": 286,
            "replaced_with": "        if (locale == null) {\n            locale = Locale.getDefault();\n",
            "replaced": "        if (locale != null) {\n            key = new Pair(key, locale);\n",
            "patch_type": "replace",
            "next_line_no": 287
        },
        "1": {
            "file_name": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
            "replaced_with": "        key = new Pair(key, locale);\n",
            "patch_type": "insert",
            "next_line_no": 289
        },
        "2": {
            "file_name": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
            "from_line_no": 292,
            "to_line_no": 294,
            "replaced": "            if (locale == null) {\n                locale = Locale.getDefault();\n            }\n",
            "patch_type": "delete",
            "next_line_no": 295
        },
        "3": {
            "file_name": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
            "from_line_no": 465,
            "to_line_no": 466,
            "replaced_with": "        if (locale == null) {\n            locale = Locale.getDefault();\n",
            "replaced": "        if (locale != null) {\n            key = new Pair(key, locale);\n",
            "patch_type": "replace",
            "next_line_no": 467
        },
        "4": {
            "file_name": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
            "replaced_with": "        key = new Pair(key, locale);\n",
            "patch_type": "insert",
            "next_line_no": 468
        },
        "5": {
            "file_name": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
            "from_line_no": 471,
            "to_line_no": 473,
            "replaced": "            if (locale == null) {\n                locale = Locale.getDefault();\n            }\n",
            "patch_type": "delete",
            "next_line_no": 474
        }
    },
    "method": {
        "failing_tests": [
            "org.apache.commons.lang.time.FastDateFormatTest::test_changeDefault_Locale_DateInstance",
            "org.apache.commons.lang.time.FastDateFormatTest::test_changeDefault_Locale_DateTimeInstance"
        ],
        "org.apache.commons.lang.time.FastDateFormatTest::test_changeDefault_Locale_DateInstance": {
            "file_path": "src/test/org/apache/commons/lang/time/FastDateFormatTest.java",
            "Instance": "Begin: Pos(135, 12)\nEnd: Pos(153, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Lang_50/src/test//org/apache/commons/lang/time/FastDateFormatTest.java\nName: test_changeDefault_Locale_DateInstance\nChilds: [StatementAssertion<Begin: Pos(144, 13), End: Pos(144, 60)>,\nStatementAssertion<Begin: Pos(145, 13), End: Pos(145, 55)>,\nStatementAssertion<Begin: Pos(146, 13), End: Pos(146, 60)>,\nStatementAssertion<Begin: Pos(147, 13), End: Pos(147, 43)>,\nStatementAssertion<Begin: Pos(148, 13), End: Pos(148, 43)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Lang_50/src/test//org/apache/commons/lang/time/FastDateFormatTest.java",
            "name": "test_changeDefault_Locale_DateInstance",
            "begin": "Pos(135, 12)",
            "end": "Pos(153, 5)",
            "begin_line_no": 135,
            "end_line_no": 153,
            "child": [
                "Begin: Pos(144, 13)\nEnd: Pos(144, 60)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(145, 13)\nEnd: Pos(145, 55)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(146, 13)\nEnd: Pos(146, 60)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(147, 13)\nEnd: Pos(147, 43)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(148, 13)\nEnd: Pos(148, 43)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    public void test_changeDefault_Locale_DateInstance$catena_0() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n\n            assertSame(Locale.GERMANY, format1.getLocale());                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "    public void test_changeDefault_Locale_DateInstance$catena_1() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            assertSame(Locale.US, format2.getLocale());                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "    public void test_changeDefault_Locale_DateInstance$catena_2() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            assertSame(Locale.GERMANY, format3.getLocale());                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "    public void test_changeDefault_Locale_DateInstance$catena_3() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            assertTrue(format1 != format2);         /***** ORIGINAL ASSERTION IS HERE *****/ // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "    public void test_changeDefault_Locale_DateInstance$catena_4() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            assertTrue(format2 != format3);                                                                     /***** ORIGINAL ASSERTION IS HERE *****/\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }"
            ],
            "func": {
                "0": "    public void test_changeDefault_Locale_DateInstance$catena_0() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n\n            assertSame(Locale.GERMANY, format1.getLocale());                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "1": "    public void test_changeDefault_Locale_DateInstance$catena_1() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            assertSame(Locale.US, format2.getLocale());                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "2": "    public void test_changeDefault_Locale_DateInstance$catena_2() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            assertSame(Locale.GERMANY, format3.getLocale());                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "3": "    public void test_changeDefault_Locale_DateInstance$catena_3() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            assertTrue(format1 != format2);         /***** ORIGINAL ASSERTION IS HERE *****/ // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "4": "    public void test_changeDefault_Locale_DateInstance$catena_4() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            assertTrue(format2 != format3);                                                                     /***** ORIGINAL ASSERTION IS HERE *****/\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }"
            }
        },
        "org.apache.commons.lang.time.FastDateFormatTest::test_changeDefault_Locale_DateTimeInstance": {
            "file_path": "src/test/org/apache/commons/lang/time/FastDateFormatTest.java",
            "Instance": "Begin: Pos(155, 12)\nEnd: Pos(173, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Lang_50/src/test//org/apache/commons/lang/time/FastDateFormatTest.java\nName: test_changeDefault_Locale_DateTimeInstance\nChilds: [StatementAssertion<Begin: Pos(164, 13), End: Pos(164, 60)>,\nStatementAssertion<Begin: Pos(165, 13), End: Pos(165, 55)>,\nStatementAssertion<Begin: Pos(166, 13), End: Pos(166, 60)>,\nStatementAssertion<Begin: Pos(167, 13), End: Pos(167, 43)>,\nStatementAssertion<Begin: Pos(168, 13), End: Pos(168, 43)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Lang_50/src/test//org/apache/commons/lang/time/FastDateFormatTest.java",
            "name": "test_changeDefault_Locale_DateTimeInstance",
            "begin": "Pos(155, 12)",
            "end": "Pos(173, 5)",
            "begin_line_no": 155,
            "end_line_no": 173,
            "child": [
                "Begin: Pos(164, 13)\nEnd: Pos(164, 60)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(165, 13)\nEnd: Pos(165, 55)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(166, 13)\nEnd: Pos(166, 60)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(167, 13)\nEnd: Pos(167, 43)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(168, 13)\nEnd: Pos(168, 43)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    public void test_changeDefault_Locale_DateTimeInstance$catena_0() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n\n            assertSame(Locale.GERMANY, format1.getLocale());                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "    public void test_changeDefault_Locale_DateTimeInstance$catena_1() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            assertSame(Locale.US, format2.getLocale());                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "    public void test_changeDefault_Locale_DateTimeInstance$catena_2() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            assertSame(Locale.GERMANY, format3.getLocale());                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "    public void test_changeDefault_Locale_DateTimeInstance$catena_3() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            assertTrue(format1 != format2);         /***** ORIGINAL ASSERTION IS HERE *****/ // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "    public void test_changeDefault_Locale_DateTimeInstance$catena_4() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            assertTrue(format2 != format3);                                                                     /***** ORIGINAL ASSERTION IS HERE *****/\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }"
            ],
            "func": {
                "0": "    public void test_changeDefault_Locale_DateTimeInstance$catena_0() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n\n            assertSame(Locale.GERMANY, format1.getLocale());                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "1": "    public void test_changeDefault_Locale_DateTimeInstance$catena_1() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            assertSame(Locale.US, format2.getLocale());                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "2": "    public void test_changeDefault_Locale_DateTimeInstance$catena_2() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            assertSame(Locale.GERMANY, format3.getLocale());                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "3": "    public void test_changeDefault_Locale_DateTimeInstance$catena_3() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            assertTrue(format1 != format2);         /***** ORIGINAL ASSERTION IS HERE *****/ // -- junit 3.8 version -- assertFalse(format1 == format2);\n            try{ assertTrue(format2 != format3);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }",
                "4": "    public void test_changeDefault_Locale_DateTimeInstance$catena_4() {\n        Locale realDefaultLocale = Locale.getDefault();\n        try {\n            Locale.setDefault(Locale.US);\n            FastDateFormat format1 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL, Locale.GERMANY);\n            FastDateFormat format2 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n            Locale.setDefault(Locale.GERMANY);\n            FastDateFormat format3 = FastDateFormat.getDateTimeInstance(FastDateFormat.FULL, FastDateFormat.FULL);\n\n            try{ assertSame(Locale.GERMANY, format1.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.US, format2.getLocale());                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertSame(Locale.GERMANY, format3.getLocale());                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n            try{ assertTrue(format1 != format2);    }catch(Throwable __SHOULD_BE_IGNORED){} // -- junit 3.8 version -- assertFalse(format1 == format2);\n            assertTrue(format2 != format3);                                                                     /***** ORIGINAL ASSERTION IS HERE *****/\n\n        } finally {\n            Locale.setDefault(realDefaultLocale);\n        }\n    }"
            }
        }
    },
    "000110": {
        "failing_tests": [
            "org.apache.commons.lang.time.FastDateFormatTest::test_changeDefault_Locale_DateTimeInstance$catena_2",
            "org.apache.commons.lang.time.FastDateFormatTest::test_changeDefault_Locale_DateTimeInstance$catena_4"
        ]
    },
    "110000": {
        "failing_tests": [
            "org.apache.commons.lang.time.FastDateFormatTest::test_changeDefault_Locale_DateInstance$catena_2",
            "org.apache.commons.lang.time.FastDateFormatTest::test_changeDefault_Locale_DateInstance$catena_4"
        ]
    }
}