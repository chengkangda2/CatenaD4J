---
Begin generate bug_id: Math_92
num_of_hunks: 12
NOTICE: may not contains full fix patterns for hunks are too much (12 hunks)
timeout for running: 3600
use working dir: ./working/data/Math_92
Try to checkout Math_92
build dir: ['./working/data/Math_92/target/classes', './working/data/Math_92/target/test-classes']
init FileManager
trace file: src/java/org/apache/commons/math/util/MathUtils.java
trying to replace old failing tests
edit: replace from 176 range 50 at src/test/org/apache/commons/math/util/MathUtilsTest.java
to
    public void testBinomialCoefficientLarge$catena_0() throws Exception {
        // This tests all legal and illegal values for n <= 200.
        for (int n = 0; n <= 200; n++) {
            for (int k = 0; k <= n; k++) {
                long ourResult = -1;
                long exactResult = -1;
                boolean shouldThrow = false;
                boolean didThrow = false;
                try {
                    ourResult = MathUtils.binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    didThrow = true;
                }
                try {
                    exactResult = binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    shouldThrow = true;
                }
                assertEquals(n+","+k, shouldThrow, didThrow);                                               /***** ORIGINAL ASSERTION IS HERE *****/
                try{ assertEquals(n+","+k, exactResult, ourResult);                                         }catch(Throwable __SHOULD_BE_IGNORED){}
                try{ assertTrue(n+","+k, (n > 66 || !didThrow));                                            }catch(Throwable __SHOULD_BE_IGNORED){}
            }
        }

        long ourResult = MathUtils.binomialCoefficient(300, 3);
        long exactResult = binomialCoefficient(300, 3);
        try{ assertEquals(exactResult, ourResult);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}

        ourResult = MathUtils.binomialCoefficient(700, 697);
        exactResult = binomialCoefficient(700, 697);
        try{ assertEquals(exactResult, ourResult);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}

        // This one should throw
        try {
            MathUtils.binomialCoefficient(700, 300);
            try{ fail("Expecting ArithmeticException");                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (ArithmeticException ex) {
            // Expected
        }

        // Larger values cannot be computed directly by our
        // test implementation because of stack limitations,
        // so we make little jumps to fill the cache.
        for (int i = 2000; i <= 10000; i += 2000) {
            ourResult = MathUtils.binomialCoefficient(i, 3);
            exactResult = binomialCoefficient(i, 3);
            try{ assertEquals(exactResult, ourResult);                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
        }

    }     public void testBinomialCoefficientLarge$catena_1() throws Exception {
        // This tests all legal and illegal values for n <= 200.
        for (int n = 0; n <= 200; n++) {
            for (int k = 0; k <= n; k++) {
                long ourResult = -1;
                long exactResult = -1;
                boolean shouldThrow = false;
                boolean didThrow = false;
                try {
                    ourResult = MathUtils.binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    didThrow = true;
                }
                try {
                    exactResult = binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    shouldThrow = true;
                }
                try{ assertEquals(n+","+k, shouldThrow, didThrow);                                          }catch(Throwable __SHOULD_BE_IGNORED){}
                assertEquals(n+","+k, exactResult, ourResult);                                              /***** ORIGINAL ASSERTION IS HERE *****/
                try{ assertTrue(n+","+k, (n > 66 || !didThrow));                                            }catch(Throwable __SHOULD_BE_IGNORED){}
            }
        }

        long ourResult = MathUtils.binomialCoefficient(300, 3);
        long exactResult = binomialCoefficient(300, 3);
        try{ assertEquals(exactResult, ourResult);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}

        ourResult = MathUtils.binomialCoefficient(700, 697);
        exactResult = binomialCoefficient(700, 697);
        try{ assertEquals(exactResult, ourResult);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}

        // This one should throw
        try {
            MathUtils.binomialCoefficient(700, 300);
            try{ fail("Expecting ArithmeticException");                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (ArithmeticException ex) {
            // Expected
        }

        // Larger values cannot be computed directly by our
        // test implementation because of stack limitations,
        // so we make little jumps to fill the cache.
        for (int i = 2000; i <= 10000; i += 2000) {
            ourResult = MathUtils.binomialCoefficient(i, 3);
            exactResult = binomialCoefficient(i, 3);
            try{ assertEquals(exactResult, ourResult);                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
        }

    }     public void testBinomialCoefficientLarge$catena_2() throws Exception {
        // This tests all legal and illegal values for n <= 200.
        for (int n = 0; n <= 200; n++) {
            for (int k = 0; k <= n; k++) {
                long ourResult = -1;
                long exactResult = -1;
                boolean shouldThrow = false;
                boolean didThrow = false;
                try {
                    ourResult = MathUtils.binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    didThrow = true;
                }
                try {
                    exactResult = binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    shouldThrow = true;
                }
                try{ assertEquals(n+","+k, shouldThrow, didThrow);                                          }catch(Throwable __SHOULD_BE_IGNORED){}
                try{ assertEquals(n+","+k, exactResult, ourResult);                                         }catch(Throwable __SHOULD_BE_IGNORED){}
                assertTrue(n+","+k, (n > 66 || !didThrow));                                                 /***** ORIGINAL ASSERTION IS HERE *****/
            }
        }

        long ourResult = MathUtils.binomialCoefficient(300, 3);
        long exactResult = binomialCoefficient(300, 3);
        try{ assertEquals(exactResult, ourResult);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}

        ourResult = MathUtils.binomialCoefficient(700, 697);
        exactResult = binomialCoefficient(700, 697);
        try{ assertEquals(exactResult, ourResult);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}

        // This one should throw
        try {
            MathUtils.binomialCoefficient(700, 300);
            try{ fail("Expecting ArithmeticException");                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (ArithmeticException ex) {
            // Expected
        }

        // Larger values cannot be computed directly by our
        // test implementation because of stack limitations,
        // so we make little jumps to fill the cache.
        for (int i = 2000; i <= 10000; i += 2000) {
            ourResult = MathUtils.binomialCoefficient(i, 3);
            exactResult = binomialCoefficient(i, 3);
            try{ assertEquals(exactResult, ourResult);                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
        }

    }     public void testBinomialCoefficientLarge$catena_3() throws Exception {
        // This tests all legal and illegal values for n <= 200.
        for (int n = 0; n <= 200; n++) {
            for (int k = 0; k <= n; k++) {
                long ourResult = -1;
                long exactResult = -1;
                boolean shouldThrow = false;
                boolean didThrow = false;
                try {
                    ourResult = MathUtils.binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    didThrow = true;
                }
                try {
                    exactResult = binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    shouldThrow = true;
                }
                try{ assertEquals(n+","+k, shouldThrow, didThrow);                                          }catch(Throwable __SHOULD_BE_IGNORED){}
                try{ assertEquals(n+","+k, exactResult, ourResult);                                         }catch(Throwable __SHOULD_BE_IGNORED){}
                try{ assertTrue(n+","+k, (n > 66 || !didThrow));                                            }catch(Throwable __SHOULD_BE_IGNORED){}
            }
        }

        long ourResult = MathUtils.binomialCoefficient(300, 3);
        long exactResult = binomialCoefficient(300, 3);
        assertEquals(exactResult, ourResult);                                                               /***** ORIGINAL ASSERTION IS HERE *****/

        ourResult = MathUtils.binomialCoefficient(700, 697);
        exactResult = binomialCoefficient(700, 697);
        try{ assertEquals(exactResult, ourResult);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}

        // This one should throw
        try {
            MathUtils.binomialCoefficient(700, 300);
            try{ fail("Expecting ArithmeticException");                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (ArithmeticException ex) {
            // Expected
        }

        // Larger values cannot be computed directly by our
        // test implementation because of stack limitations,
        // so we make little jumps to fill the cache.
        for (int i = 2000; i <= 10000; i += 2000) {
            ourResult = MathUtils.binomialCoefficient(i, 3);
            exactResult = binomialCoefficient(i, 3);
            try{ assertEquals(exactResult, ourResult);                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
        }

    }     public void testBinomialCoefficientLarge$catena_4() throws Exception {
        // This tests all legal and illegal values for n <= 200.
        for (int n = 0; n <= 200; n++) {
            for (int k = 0; k <= n; k++) {
                long ourResult = -1;
                long exactResult = -1;
                boolean shouldThrow = false;
                boolean didThrow = false;
                try {
                    ourResult = MathUtils.binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    didThrow = true;
                }
                try {
                    exactResult = binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    shouldThrow = true;
                }
                try{ assertEquals(n+","+k, shouldThrow, didThrow);                                          }catch(Throwable __SHOULD_BE_IGNORED){}
                try{ assertEquals(n+","+k, exactResult, ourResult);                                         }catch(Throwable __SHOULD_BE_IGNORED){}
                try{ assertTrue(n+","+k, (n > 66 || !didThrow));                                            }catch(Throwable __SHOULD_BE_IGNORED){}
            }
        }

        long ourResult = MathUtils.binomialCoefficient(300, 3);
        long exactResult = binomialCoefficient(300, 3);
        try{ assertEquals(exactResult, ourResult);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}

        ourResult = MathUtils.binomialCoefficient(700, 697);
        exactResult = binomialCoefficient(700, 697);
        assertEquals(exactResult, ourResult);                                                               /***** ORIGINAL ASSERTION IS HERE *****/

        // This one should throw
        try {
            MathUtils.binomialCoefficient(700, 300);
            try{ fail("Expecting ArithmeticException");                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (ArithmeticException ex) {
            // Expected
        }

        // Larger values cannot be computed directly by our
        // test implementation because of stack limitations,
        // so we make little jumps to fill the cache.
        for (int i = 2000; i <= 10000; i += 2000) {
            ourResult = MathUtils.binomialCoefficient(i, 3);
            exactResult = binomialCoefficient(i, 3);
            try{ assertEquals(exactResult, ourResult);                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
        }

    }     public void testBinomialCoefficientLarge$catena_5() throws Exception {
        // This tests all legal and illegal values for n <= 200.
        for (int n = 0; n <= 200; n++) {
            for (int k = 0; k <= n; k++) {
                long ourResult = -1;
                long exactResult = -1;
                boolean shouldThrow = false;
                boolean didThrow = false;
                try {
                    ourResult = MathUtils.binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    didThrow = true;
                }
                try {
                    exactResult = binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    shouldThrow = true;
                }
                try{ assertEquals(n+","+k, shouldThrow, didThrow);                                          }catch(Throwable __SHOULD_BE_IGNORED){}
                try{ assertEquals(n+","+k, exactResult, ourResult);                                         }catch(Throwable __SHOULD_BE_IGNORED){}
                try{ assertTrue(n+","+k, (n > 66 || !didThrow));                                            }catch(Throwable __SHOULD_BE_IGNORED){}
            }
        }

        long ourResult = MathUtils.binomialCoefficient(300, 3);
        long exactResult = binomialCoefficient(300, 3);
        try{ assertEquals(exactResult, ourResult);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}

        ourResult = MathUtils.binomialCoefficient(700, 697);
        exactResult = binomialCoefficient(700, 697);
        try{ assertEquals(exactResult, ourResult);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}

        // This one should throw
        try {
            MathUtils.binomialCoefficient(700, 300);
            fail("Expecting ArithmeticException");                                                          /***** ORIGINAL ASSERTION IS HERE *****/
        } catch (ArithmeticException ex) {
            // Expected
        }

        // Larger values cannot be computed directly by our
        // test implementation because of stack limitations,
        // so we make little jumps to fill the cache.
        for (int i = 2000; i <= 10000; i += 2000) {
            ourResult = MathUtils.binomialCoefficient(i, 3);
            exactResult = binomialCoefficient(i, 3);
            try{ assertEquals(exactResult, ourResult);                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
        }

    }     public void testBinomialCoefficientLarge$catena_6() throws Exception {
        // This tests all legal and illegal values for n <= 200.
        for (int n = 0; n <= 200; n++) {
            for (int k = 0; k <= n; k++) {
                long ourResult = -1;
                long exactResult = -1;
                boolean shouldThrow = false;
                boolean didThrow = false;
                try {
                    ourResult = MathUtils.binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    didThrow = true;
                }
                try {
                    exactResult = binomialCoefficient(n, k);
                } catch (ArithmeticException ex) {
                    shouldThrow = true;
                }
                try{ assertEquals(n+","+k, shouldThrow, didThrow);                                          }catch(Throwable __SHOULD_BE_IGNORED){}
                try{ assertEquals(n+","+k, exactResult, ourResult);                                         }catch(Throwable __SHOULD_BE_IGNORED){}
                try{ assertTrue(n+","+k, (n > 66 || !didThrow));                                            }catch(Throwable __SHOULD_BE_IGNORED){}
            }
        }

        long ourResult = MathUtils.binomialCoefficient(300, 3);
        long exactResult = binomialCoefficient(300, 3);
        try{ assertEquals(exactResult, ourResult);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}

        ourResult = MathUtils.binomialCoefficient(700, 697);
        exactResult = binomialCoefficient(700, 697);
        try{ assertEquals(exactResult, ourResult);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}

        // This one should throw
        try {
            MathUtils.binomialCoefficient(700, 300);
            try{ fail("Expecting ArithmeticException");                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (ArithmeticException ex) {
            // Expected
        }

        // Larger values cannot be computed directly by our
        // test implementation because of stack limitations,
        // so we make little jumps to fill the cache.
        for (int i = 2000; i <= 10000; i += 2000) {
            ourResult = MathUtils.binomialCoefficient(i, 3);
            exactResult = binomialCoefficient(i, 3);
            assertEquals(exactResult, ourResult);                                                           /***** ORIGINAL ASSERTION IS HERE *****/
        }

    }
trace file: src/test/org/apache/commons/math/util/MathUtilsTest.java
new test num: 7
ori test num: 0
pattern: 000000000000
patches are written to file
running tests...
used time: Finished in 29.60 seconds
Failing tests: 2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
processed: 000000000000
pattern: 100000000000
try to fix hunk: 0
delete from 184 with range 5
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000000
pattern: 010000000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

patches are written to file
running tests...
used time: Finished in 33.70 seconds
Failing tests: 2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
No new failing tests but only 1 hunk
processed: 010000000000
pattern: 001000000000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000000
pattern: 000100000000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000000
pattern: 000010000000
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000000
pattern: 000001000000
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000000
pattern: 000000100000
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100000
pattern: 000000010000
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
used time: Finished in 28.35 seconds
Failing tests: 13
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000010000
pattern: 000000001000
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
used time: Finished in 22.09 seconds
Failing tests: 2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
No new failing tests but only 1 hunk
processed: 000000001000
pattern: 000000000100
try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000100
pattern: 000000000010
try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
used time: Finished in 24.56 seconds
Failing tests: 20
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000000010
pattern: 000000000001
try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 20.18 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000000001
pattern: 110000000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000000
pattern: 101000000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000000
pattern: 100100000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000000
pattern: 100010000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000000
pattern: 100001000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000000
pattern: 100000100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100000
pattern: 100000010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010000
pattern: 100000001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001000
pattern: 100000000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000100
pattern: 100000000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000010
pattern: 100000000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000001
pattern: 011000000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000000
pattern: 010100000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000000
pattern: 010010000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000000
pattern: 010001000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000000
pattern: 010000100000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100000
pattern: 010000010000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
used time: Finished in 24.34 seconds
Failing tests: 13
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000010000
pattern: 010000001000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
used time: Finished in 29.08 seconds
Failing tests: 2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Can independently fix []
Could not fix independently
processed: 010000001000
pattern: 010000000100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000100
pattern: 010000000010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
used time: Finished in 26.02 seconds
Failing tests: 20
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000000010
pattern: 010000000001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 23.18 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000000001
pattern: 001100000000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000000
pattern: 001010000000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000000
pattern: 001001000000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000000
pattern: 001000100000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100000
pattern: 001000010000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010000
pattern: 001000001000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001000
pattern: 001000000100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000100
pattern: 001000000010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000010
pattern: 001000000001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000001
pattern: 000110000000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000000
pattern: 000101000000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000000
pattern: 000100100000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100000
pattern: 000100010000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010000
pattern: 000100001000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001000
pattern: 000100000100
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000100
pattern: 000100000010
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000010
pattern: 000100000001
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000001
pattern: 000011000000
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000000
pattern: 000010100000
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100000
pattern: 000010010000
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010000
pattern: 000010001000
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001000
pattern: 000010000100
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000100
pattern: 000010000010
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000010
pattern: 000010000001
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000001
pattern: 000001100000
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100000
pattern: 000001010000
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010000
pattern: 000001001000
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001000
pattern: 000001000100
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000100
pattern: 000001000010
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000010
pattern: 000001000001
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000001
pattern: 000000110000
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110000
pattern: 000000101000
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101000
pattern: 000000100100
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100100
pattern: 000000100010
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100010
pattern: 000000100001
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100001
pattern: 000000011000
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
used time: Finished in 22.25 seconds
Failing tests: 13
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000011000
pattern: 000000010100
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010100
pattern: 000000010010
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
used time: Finished in 22.54 seconds
Failing tests: 20
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000010010
pattern: 000000010001
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 19.98 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000010001
pattern: 000000001100
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
used time: Finished in 27.16 seconds
Failing tests: 2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
Includes new failing tests, set to unusable
processed: 000000001100
pattern: 000000001010
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
used time: Finished in 22.49 seconds
Failing tests: 20
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000001010
pattern: 000000001001
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 23.14 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000001001
pattern: 000000000110
try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000110
pattern: 000000000101
try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000101
pattern: 000000000011
try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 18.48 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000000011
pattern: 111000000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000000
pattern: 110100000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000000
pattern: 110010000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010000000
pattern: 110001000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000000
pattern: 110000100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100000
pattern: 110000010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010000
pattern: 110000001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001000
pattern: 110000000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000100
pattern: 110000000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000010
pattern: 110000000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000001
pattern: 101100000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100000000
pattern: 101010000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010000000
pattern: 101001000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001000000
pattern: 101000100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
used time: Finished in 24.86 seconds
Failing tests: 7
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 101000100000
pattern: 101000010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000010000
pattern: 101000001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000001000
pattern: 101000000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000100
pattern: 101000000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000010
pattern: 101000000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000001
pattern: 100110000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110000000
pattern: 100101000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101000000
pattern: 100100100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100100000
pattern: 100100010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100010000
pattern: 100100001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100001000
pattern: 100100000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000100
pattern: 100100000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000010
pattern: 100100000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000001
pattern: 100011000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011000000
pattern: 100010100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010100000
pattern: 100010010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010010000
pattern: 100010001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010001000
pattern: 100010000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000100
pattern: 100010000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000010
pattern: 100010000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000001
pattern: 100001100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001100000
pattern: 100001010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001010000
pattern: 100001001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001001000
pattern: 100001000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000100
pattern: 100001000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000010
pattern: 100001000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000001
pattern: 100000110000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000110000
pattern: 100000101000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000101000
pattern: 100000100100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100100
pattern: 100000100010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100010
pattern: 100000100001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100001
pattern: 100000011000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000011000
pattern: 100000010100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010100
pattern: 100000010010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010010
pattern: 100000010001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010001
pattern: 100000001100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001100
pattern: 100000001010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001010
pattern: 100000001001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001001
pattern: 100000000110
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000110
pattern: 100000000101
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000101
pattern: 100000000011
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000011
pattern: 011100000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011100000000
pattern: 011010000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011010000000
pattern: 011001000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011001000000
pattern: 011000100000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000100000
pattern: 011000010000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000010000
pattern: 011000001000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000001000
pattern: 011000000100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000100
pattern: 011000000010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000010
pattern: 011000000001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000001
pattern: 010110000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010110000000
pattern: 010101000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010101000000
pattern: 010100100000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100100000
pattern: 010100010000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100010000
pattern: 010100001000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100001000
pattern: 010100000100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000100
pattern: 010100000010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000010
pattern: 010100000001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000001
pattern: 010011000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010011000000
pattern: 010010100000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010100000
pattern: 010010010000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010010000
pattern: 010010001000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010001000
pattern: 010010000100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000100
pattern: 010010000010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000010
pattern: 010010000001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000001
pattern: 010001100000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001100000
pattern: 010001010000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001010000
pattern: 010001001000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001001000
pattern: 010001000100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000100
pattern: 010001000010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000010
pattern: 010001000001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000001
pattern: 010000110000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000110000
pattern: 010000101000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000101000
pattern: 010000100100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100100
pattern: 010000100010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100010
pattern: 010000100001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100001
pattern: 010000011000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
used time: Finished in 20.42 seconds
Failing tests: 13
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000011000
pattern: 010000010100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010100
pattern: 010000010010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
used time: Finished in 19.57 seconds
Failing tests: 20
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000010010
pattern: 010000010001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 17.02 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000010001
pattern: 010000001100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
used time: Finished in 21.18 seconds
Failing tests: 2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
Includes new failing tests, set to unusable
processed: 010000001100
pattern: 010000001010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
used time: Finished in 19.98 seconds
Failing tests: 20
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000001010
pattern: 010000001001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 18.10 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000001001
pattern: 010000000110
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000110
pattern: 010000000101
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000101
pattern: 010000000011
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 18.90 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000000011
pattern: 001110000000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110000000
pattern: 001101000000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101000000
pattern: 001100100000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100100000
pattern: 001100010000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100010000
pattern: 001100001000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100001000
pattern: 001100000100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000100
pattern: 001100000010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000010
pattern: 001100000001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000001
pattern: 001011000000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001011000000
pattern: 001010100000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010100000
pattern: 001010010000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010010000
pattern: 001010001000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010001000
pattern: 001010000100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000100
pattern: 001010000010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000010
pattern: 001010000001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000001
pattern: 001001100000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001100000
pattern: 001001010000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001010000
pattern: 001001001000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001001000
pattern: 001001000100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000100
pattern: 001001000010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000010
pattern: 001001000001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000001
pattern: 001000110000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000110000
pattern: 001000101000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000101000
pattern: 001000100100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100100
pattern: 001000100010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100010
pattern: 001000100001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100001
pattern: 001000011000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000011000
pattern: 001000010100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010100
pattern: 001000010010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010010
pattern: 001000010001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010001
pattern: 001000001100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001100
pattern: 001000001010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001010
pattern: 001000001001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001001
pattern: 001000000110
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000110
pattern: 001000000101
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000101
pattern: 001000000011
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000011
pattern: 000111000000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111000000
pattern: 000110100000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110100000
pattern: 000110010000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110010000
pattern: 000110001000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110001000
pattern: 000110000100
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000100
pattern: 000110000010
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000010
pattern: 000110000001
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000001
pattern: 000101100000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101100000
pattern: 000101010000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101010000
pattern: 000101001000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101001000
pattern: 000101000100
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000100
pattern: 000101000010
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000010
pattern: 000101000001
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000001
pattern: 000100110000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100110000
pattern: 000100101000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100101000
pattern: 000100100100
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100100
pattern: 000100100010
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100010
pattern: 000100100001
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100001
pattern: 000100011000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100011000
pattern: 000100010100
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010100
pattern: 000100010010
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010010
pattern: 000100010001
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010001
pattern: 000100001100
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001100
pattern: 000100001010
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001010
pattern: 000100001001
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001001
pattern: 000100000110
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000110
pattern: 000100000101
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000101
pattern: 000100000011
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000011
pattern: 000011100000
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011100000
pattern: 000011010000
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011010000
pattern: 000011001000
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011001000
pattern: 000011000100
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000100
pattern: 000011000010
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000010
pattern: 000011000001
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000001
pattern: 000010110000
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010110000
pattern: 000010101000
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010101000
pattern: 000010100100
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100100
pattern: 000010100010
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100010
pattern: 000010100001
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100001
pattern: 000010011000
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010011000
pattern: 000010010100
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010100
pattern: 000010010010
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010010
pattern: 000010010001
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010001
pattern: 000010001100
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001100
pattern: 000010001010
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001010
pattern: 000010001001
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001001
pattern: 000010000110
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000110
pattern: 000010000101
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000101
pattern: 000010000011
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000011
pattern: 000001110000
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001110000
pattern: 000001101000
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001101000
pattern: 000001100100
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100100
pattern: 000001100010
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100010
pattern: 000001100001
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100001
pattern: 000001011000
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001011000
pattern: 000001010100
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010100
pattern: 000001010010
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010010
pattern: 000001010001
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010001
pattern: 000001001100
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001100
pattern: 000001001010
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001010
pattern: 000001001001
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001001
pattern: 000001000110
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000110
pattern: 000001000101
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000101
pattern: 000001000011
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000011
pattern: 000000111000
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000111000
pattern: 000000110100
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110100
pattern: 000000110010
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110010
pattern: 000000110001
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110001
pattern: 000000101100
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101100
pattern: 000000101010
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101010
pattern: 000000101001
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101001
pattern: 000000100110
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100110
pattern: 000000100101
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100101
pattern: 000000100011
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100011
pattern: 000000011100
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
used time: Finished in 20.69 seconds
Failing tests: 13
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000011100
pattern: 000000011010
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
used time: Finished in 18.02 seconds
Failing tests: 20
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000011010
pattern: 000000011001
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 19.87 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000011001
pattern: 000000010110
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010110
pattern: 000000010101
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010101
pattern: 000000010011
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 19.85 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000010011
pattern: 000000001110
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
used time: Finished in 25.03 seconds
Failing tests: 2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
Includes new failing tests, set to unusable
processed: 000000001110
pattern: 000000001101
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 30.22 seconds
Failing tests: 2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
Includes new failing tests, set to unusable
processed: 000000001101
pattern: 000000001011
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 21.20 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 000000001011
pattern: 000000000111
try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000111
pattern: 111100000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111100000000
pattern: 111010000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111010000000
pattern: 111001000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111001000000
pattern: 111000100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
used time: Finished in 25.60 seconds
Failing tests: 7
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 111000100000
pattern: 111000010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000010000
pattern: 111000001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000001000
pattern: 111000000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000100
pattern: 111000000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000010
pattern: 111000000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000001
pattern: 110110000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110110000000
pattern: 110101000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110101000000
pattern: 110100100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100100000
pattern: 110100010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100010000
pattern: 110100001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100001000
pattern: 110100000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000100
pattern: 110100000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000010
pattern: 110100000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000001
pattern: 110011000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110011000000
pattern: 110010100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010100000
pattern: 110010010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010010000
pattern: 110010001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010001000
pattern: 110010000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010000100
pattern: 110010000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010000010
pattern: 110010000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010000001
pattern: 110001100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001100000
pattern: 110001010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001010000
pattern: 110001001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001001000
pattern: 110001000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000100
pattern: 110001000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000010
pattern: 110001000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000001
pattern: 110000110000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000110000
pattern: 110000101000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000101000
pattern: 110000100100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100100
pattern: 110000100010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100010
pattern: 110000100001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100001
pattern: 110000011000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000011000
pattern: 110000010100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010100
pattern: 110000010010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010010
pattern: 110000010001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010001
pattern: 110000001100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001100
pattern: 110000001010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001010
pattern: 110000001001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001001
pattern: 110000000110
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000110
pattern: 110000000101
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000101
pattern: 110000000011
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000011
pattern: 101110000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101110000000
pattern: 101101000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101101000000
pattern: 101100100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
used time: Finished in 25.78 seconds
Failing tests: 7
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 101100100000
pattern: 101100010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100010000
pattern: 101100001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100001000
pattern: 101100000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100000100
pattern: 101100000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100000010
pattern: 101100000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100000001
pattern: 101011000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101011000000
pattern: 101010100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010100000
pattern: 101010010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010010000
pattern: 101010001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010001000
pattern: 101010000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010000100
pattern: 101010000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010000010
pattern: 101010000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010000001
pattern: 101001100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001100000
pattern: 101001010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001010000
pattern: 101001001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001001000
pattern: 101001000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001000100
pattern: 101001000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001000010
pattern: 101001000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001000001
pattern: 101000110000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
used time: Finished in 25.07 seconds
Failing tests: 7
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 101000110000
pattern: 101000101000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
used time: Finished in 29.05 seconds
Failing tests: 7
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 101000101000
pattern: 101000100100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000100100
pattern: 101000100010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
used time: Finished in 26.35 seconds
Failing tests: 7
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 101000100010
pattern: 101000100001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 24.68 seconds
Failing tests: 21
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 101000100001
pattern: 101000011000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000011000
pattern: 101000010100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000010100
pattern: 101000010010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000010010
pattern: 101000010001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000010001
pattern: 101000001100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000001100
pattern: 101000001010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000001010
pattern: 101000001001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000001001
pattern: 101000000110
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000110
pattern: 101000000101
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000101
pattern: 101000000011
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000011
pattern: 100111000000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100111000000
pattern: 100110100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110100000
pattern: 100110010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110010000
pattern: 100110001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110001000
pattern: 100110000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110000100
pattern: 100110000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110000010
pattern: 100110000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110000001
pattern: 100101100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101100000
pattern: 100101010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101010000
pattern: 100101001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101001000
pattern: 100101000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101000100
pattern: 100101000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101000010
pattern: 100101000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101000001
pattern: 100100110000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100110000
pattern: 100100101000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100101000
pattern: 100100100100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100100100
pattern: 100100100010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100100010
pattern: 100100100001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100100001
pattern: 100100011000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100011000
pattern: 100100010100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100010100
pattern: 100100010010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100010010
pattern: 100100010001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100010001
pattern: 100100001100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100001100
pattern: 100100001010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100001010
pattern: 100100001001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100001001
pattern: 100100000110
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000110
pattern: 100100000101
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000101
pattern: 100100000011
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000011
pattern: 100011100000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011100000
pattern: 100011010000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011010000
pattern: 100011001000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011001000
pattern: 100011000100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011000100
pattern: 100011000010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011000010
pattern: 100011000001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011000001
pattern: 100010110000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010110000
pattern: 100010101000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010101000
pattern: 100010100100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010100100
pattern: 100010100010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010100010
pattern: 100010100001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010100001
pattern: 100010011000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010011000
pattern: 100010010100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010010100
pattern: 100010010010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010010010
pattern: 100010010001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010010001
pattern: 100010001100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010001100
pattern: 100010001010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010001010
pattern: 100010001001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010001001
pattern: 100010000110
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000110
pattern: 100010000101
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000101
pattern: 100010000011
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000011
pattern: 100001110000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001110000
pattern: 100001101000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001101000
pattern: 100001100100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001100100
pattern: 100001100010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001100010
pattern: 100001100001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001100001
pattern: 100001011000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001011000
pattern: 100001010100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001010100
pattern: 100001010010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001010010
pattern: 100001010001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001010001
pattern: 100001001100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001001100
pattern: 100001001010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001001010
pattern: 100001001001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001001001
pattern: 100001000110
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000110
pattern: 100001000101
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000101
pattern: 100001000011
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000011
pattern: 100000111000
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000111000
pattern: 100000110100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000110100
pattern: 100000110010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000110010
pattern: 100000110001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000110001
pattern: 100000101100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000101100
pattern: 100000101010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000101010
pattern: 100000101001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000101001
pattern: 100000100110
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100110
pattern: 100000100101
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100101
pattern: 100000100011
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100011
pattern: 100000011100
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000011100
pattern: 100000011010
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000011010
pattern: 100000011001
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000011001
pattern: 100000010110
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010110
pattern: 100000010101
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010101
pattern: 100000010011
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010011
pattern: 100000001110
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001110
pattern: 100000001101
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001101
pattern: 100000001011
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001011
pattern: 100000000111
try to fix hunk: 0
delete from 184 with range 5
try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000111
pattern: 011110000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011110000000
pattern: 011101000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011101000000
pattern: 011100100000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011100100000
pattern: 011100010000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011100010000
pattern: 011100001000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011100001000
pattern: 011100000100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011100000100
pattern: 011100000010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011100000010
pattern: 011100000001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011100000001
pattern: 011011000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011011000000
pattern: 011010100000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011010100000
pattern: 011010010000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011010010000
pattern: 011010001000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011010001000
pattern: 011010000100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011010000100
pattern: 011010000010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011010000010
pattern: 011010000001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011010000001
pattern: 011001100000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011001100000
pattern: 011001010000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011001010000
pattern: 011001001000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011001001000
pattern: 011001000100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011001000100
pattern: 011001000010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011001000010
pattern: 011001000001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011001000001
pattern: 011000110000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000110000
pattern: 011000101000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000101000
pattern: 011000100100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000100100
pattern: 011000100010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000100010
pattern: 011000100001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000100001
pattern: 011000011000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000011000
pattern: 011000010100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000010100
pattern: 011000010010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000010010
pattern: 011000010001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000010001
pattern: 011000001100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000001100
pattern: 011000001010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000001010
pattern: 011000001001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000001001
pattern: 011000000110
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000110
pattern: 011000000101
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000101
pattern: 011000000011
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000011
pattern: 010111000000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010111000000
pattern: 010110100000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010110100000
pattern: 010110010000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010110010000
pattern: 010110001000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010110001000
pattern: 010110000100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010110000100
pattern: 010110000010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010110000010
pattern: 010110000001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010110000001
pattern: 010101100000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010101100000
pattern: 010101010000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010101010000
pattern: 010101001000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010101001000
pattern: 010101000100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010101000100
pattern: 010101000010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010101000010
pattern: 010101000001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010101000001
pattern: 010100110000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100110000
pattern: 010100101000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100101000
pattern: 010100100100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100100100
pattern: 010100100010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100100010
pattern: 010100100001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100100001
pattern: 010100011000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100011000
pattern: 010100010100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100010100
pattern: 010100010010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100010010
pattern: 010100010001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100010001
pattern: 010100001100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100001100
pattern: 010100001010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100001010
pattern: 010100001001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100001001
pattern: 010100000110
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000110
pattern: 010100000101
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000101
pattern: 010100000011
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000011
pattern: 010011100000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010011100000
pattern: 010011010000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010011010000
pattern: 010011001000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010011001000
pattern: 010011000100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010011000100
pattern: 010011000010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010011000010
pattern: 010011000001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010011000001
pattern: 010010110000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010110000
pattern: 010010101000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010101000
pattern: 010010100100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010100100
pattern: 010010100010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010100010
pattern: 010010100001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010100001
pattern: 010010011000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010011000
pattern: 010010010100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010010100
pattern: 010010010010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010010010
pattern: 010010010001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010010001
pattern: 010010001100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010001100
pattern: 010010001010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010001010
pattern: 010010001001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010001001
pattern: 010010000110
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000110
pattern: 010010000101
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000101
pattern: 010010000011
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000011
pattern: 010001110000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001110000
pattern: 010001101000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001101000
pattern: 010001100100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001100100
pattern: 010001100010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001100010
pattern: 010001100001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001100001
pattern: 010001011000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001011000
pattern: 010001010100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001010100
pattern: 010001010010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001010010
pattern: 010001010001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001010001
pattern: 010001001100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001001100
pattern: 010001001010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001001010
pattern: 010001001001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001001001
pattern: 010001000110
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000110
pattern: 010001000101
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000101
pattern: 010001000011
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000011
pattern: 010000111000
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000111000
pattern: 010000110100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000110100
pattern: 010000110010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000110010
pattern: 010000110001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000110001
pattern: 010000101100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000101100
pattern: 010000101010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000101010
pattern: 010000101001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000101001
pattern: 010000100110
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100110
pattern: 010000100101
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100101
pattern: 010000100011
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100011
pattern: 010000011100
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
used time: Finished in 24.70 seconds
Failing tests: 13
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000011100
pattern: 010000011010
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
used time: Finished in 21.05 seconds
Failing tests: 20
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000011010
pattern: 010000011001
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 22.20 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000011001
pattern: 010000010110
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010110
pattern: 010000010101
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010101
pattern: 010000010011
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 22.49 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000010011
pattern: 010000001110
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
used time: Finished in 28.80 seconds
Failing tests: 2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
Includes new failing tests, set to unusable
processed: 010000001110
pattern: 010000001101
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 30.59 seconds
Failing tests: 2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
Includes new failing tests, set to unusable
processed: 010000001101
pattern: 010000001011
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
used time: Finished in 20.72 seconds
Failing tests: 22
	org.apache.commons.math.distribution.BinomialDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.BinomialDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoFailures
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDegenerateNoSuccesses
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testMoreLargeValues
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testDensities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testInverseCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testCumulativeProbabilities
	org.apache.commons.math.distribution.HypergeometricDistributionTest::testFloatingPointArguments
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate0
	org.apache.commons.math.distribution.PascalDistributionTest::testDegenerate1
	org.apache.commons.math.distribution.PascalDistributionTest::testDensities
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficient
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientFail
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_0
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_1
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_2
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_3
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_4
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_5
	org.apache.commons.math.util.MathUtilsTest::testBinomialCoefficientLarge$catena_6
Includes new failing tests, set to unusable
processed: 010000001011
pattern: 010000000111
try to fix hunk: 1
insert before 190 with         if (k > n / 2)
            return binomialCoefficient(n, n - k);

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000111
pattern: 001111000000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001111000000
pattern: 001110100000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110100000
pattern: 001110010000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110010000
pattern: 001110001000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110001000
pattern: 001110000100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110000100
pattern: 001110000010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110000010
pattern: 001110000001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110000001
pattern: 001101100000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101100000
pattern: 001101010000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101010000
pattern: 001101001000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101001000
pattern: 001101000100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101000100
pattern: 001101000010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101000010
pattern: 001101000001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101000001
pattern: 001100110000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100110000
pattern: 001100101000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100101000
pattern: 001100100100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100100100
pattern: 001100100010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100100010
pattern: 001100100001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100100001
pattern: 001100011000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100011000
pattern: 001100010100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100010100
pattern: 001100010010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100010010
pattern: 001100010001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100010001
pattern: 001100001100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100001100
pattern: 001100001010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100001010
pattern: 001100001001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100001001
pattern: 001100000110
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000110
pattern: 001100000101
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000101
pattern: 001100000011
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000011
pattern: 001011100000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001011100000
pattern: 001011010000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001011010000
pattern: 001011001000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001011001000
pattern: 001011000100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001011000100
pattern: 001011000010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001011000010
pattern: 001011000001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001011000001
pattern: 001010110000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010110000
pattern: 001010101000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010101000
pattern: 001010100100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010100100
pattern: 001010100010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010100010
pattern: 001010100001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010100001
pattern: 001010011000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010011000
pattern: 001010010100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010010100
pattern: 001010010010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010010010
pattern: 001010010001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010010001
pattern: 001010001100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010001100
pattern: 001010001010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010001010
pattern: 001010001001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010001001
pattern: 001010000110
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000110
pattern: 001010000101
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000101
pattern: 001010000011
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000011
pattern: 001001110000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001110000
pattern: 001001101000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001101000
pattern: 001001100100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001100100
pattern: 001001100010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001100010
pattern: 001001100001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001100001
pattern: 001001011000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001011000
pattern: 001001010100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001010100
pattern: 001001010010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001010010
pattern: 001001010001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001010001
pattern: 001001001100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001001100
pattern: 001001001010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001001010
pattern: 001001001001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001001001
pattern: 001001000110
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000110
pattern: 001001000101
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000101
pattern: 001001000011
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000011
pattern: 001000111000
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000111000
pattern: 001000110100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000110100
pattern: 001000110010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000110010
pattern: 001000110001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000110001
pattern: 001000101100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000101100
pattern: 001000101010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000101010
pattern: 001000101001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000101001
pattern: 001000100110
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100110
pattern: 001000100101
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100101
pattern: 001000100011
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100011
pattern: 001000011100
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000011100
pattern: 001000011010
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000011010
pattern: 001000011001
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000011001
pattern: 001000010110
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010110
pattern: 001000010101
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010101
pattern: 001000010011
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010011
pattern: 001000001110
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001110
pattern: 001000001101
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001101
pattern: 001000001011
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001011
pattern: 001000000111
try to fix hunk: 2
insert before 196 with         long result = 1;
        if (n <= 61) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000111
pattern: 000111100000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111100000
pattern: 000111010000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111010000
pattern: 000111001000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111001000
pattern: 000111000100
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111000100
pattern: 000111000010
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111000010
pattern: 000111000001
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111000001
pattern: 000110110000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110110000
pattern: 000110101000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110101000
pattern: 000110100100
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110100100
pattern: 000110100010
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110100010
pattern: 000110100001
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110100001
pattern: 000110011000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110011000
pattern: 000110010100
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110010100
pattern: 000110010010
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110010010
pattern: 000110010001
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110010001
pattern: 000110001100
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110001100
pattern: 000110001010
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110001010
pattern: 000110001001
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110001001
pattern: 000110000110
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000110
pattern: 000110000101
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000101
pattern: 000110000011
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 4
insert before 199 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

try to fix hunk: 11
insert before 282 with         if (n < 1030) { 
            return Math.log(binomialCoefficientDouble(n, k));
        } 

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000011
pattern: 000101110000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 7
insert before 234 with         if (n < k) {
            throw new IllegalArgumentException(
                "must have n >= k for binomial coefficient (n,k)");
        }
        if (n < 0) {
            throw new IllegalArgumentException(
                "must have n >= 0 for binomial coefficient (n,k)");
        }
        if ((n == k) || (k == 0)) {
            return 1d;
        }
        if ((k == 1) || (k == n - 1)) {
            return n;
        }
        if (k > n/2) {
            return binomialCoefficientDouble(n, n - k);
        }
        if (n < 67) {
            return binomialCoefficient(n,k);
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101110000
pattern: 000101101000
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 8
insert before 235 with         double result = 1d;
        for (int i = 1; i <= k; i++) {
             result *= (double)(n - k + i) / (double)i;
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101101000
pattern: 000101100100
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 9
replace from 236 with range 1 to
        return Math.floor(result + 0.5);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101100100
pattern: 000101100010
try to fix hunk: 3
insert before 197 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                result = result * i / j;
            }
        } else if (n <= 66) {

try to fix hunk: 5
insert before 205 with                 long d = gcd(i, j);
                result = (result / (j / d)) * (i / d);
            }
        } else {

try to fix hunk: 6
insert before 208 with             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
                long d = gcd(i, j);
                result = mulAndCheck((result / (j / d)), (i / d));
            }
        }

try to fix hunk: 10
insert before 277 with         if (n < 67) {  
            return Math.log(binomialCoefficient(n,k));
        }

patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

