{
    "original": {
        "num_of_hunks": 2,
        "0": {
            "file_name": "src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
            "replaced_with": "      case Token.THIS:\n",
            "patch_type": "insert",
            "next_line_no": 172
        },
        "1": {
            "file_name": "src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
            "replaced_with": "        break;\n",
            "patch_type": "insert",
            "next_line_no": 173
        }
    },
    "method": {
        "failing_tests": [
            "com.google.javascript.jscomp.TypeInferenceTest::testNoThisInference"
        ],
        "com.google.javascript.jscomp.TypeInferenceTest::testNoThisInference": {
            "file_path": "test/com/google/javascript/jscomp/TypeInferenceTest.java",
            "Instance": "Begin: Pos(1000, 10)\nEnd: Pos(1005, 3)\nSource: /root/workbench/exportInfo/d4j_buggy/Closure_19/test//com/google/javascript/jscomp/TypeInferenceTest.java\nName: testNoThisInference\nChilds: [StatementAssertion<Begin: Pos(1003, 5), End: Pos(1003, 66)>,\nStatementAssertion<Begin: Pos(1004, 5), End: Pos(1004, 61)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Closure_19/test//com/google/javascript/jscomp/TypeInferenceTest.java",
            "name": "testNoThisInference",
            "begin": "Pos(1000, 10)",
            "end": "Pos(1005, 3)",
            "begin_line_no": 1000,
            "end_line_no": 1005,
            "child": [
                "Begin: Pos(1003, 5)\nEnd: Pos(1003, 66)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(1004, 5)\nEnd: Pos(1004, 61)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "  public void testNoThisInference$catena_0() {\n    JSType thisType = createNullableType(OBJECT_TYPE);\n    assumingThisType(thisType);\n    inFunction(\"var out = 3; if (goog.isNull(this)) out = this;\");                                          /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ verify(\"out\", createUnionType(OBJECT_TYPE, NUMBER_TYPE));                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testNoThisInference$catena_1() {\n    JSType thisType = createNullableType(OBJECT_TYPE);\n    assumingThisType(thisType);\n    try{ inFunction(\"var out = 3; if (goog.isNull(this)) out = this;\");                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    verify(\"out\", createUnionType(OBJECT_TYPE, NUMBER_TYPE));                                               /***** ORIGINAL ASSERTION IS HERE *****/\n  }"
            ],
            "func": {
                "0": "  public void testNoThisInference$catena_0() {\n    JSType thisType = createNullableType(OBJECT_TYPE);\n    assumingThisType(thisType);\n    inFunction(\"var out = 3; if (goog.isNull(this)) out = this;\");                                          /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ verify(\"out\", createUnionType(OBJECT_TYPE, NUMBER_TYPE));                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "1": "  public void testNoThisInference$catena_1() {\n    JSType thisType = createNullableType(OBJECT_TYPE);\n    assumingThisType(thisType);\n    try{ inFunction(\"var out = 3; if (goog.isNull(this)) out = this;\");                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    verify(\"out\", createUnionType(OBJECT_TYPE, NUMBER_TYPE));                                               /***** ORIGINAL ASSERTION IS HERE *****/\n  }"
            }
        }
    },
    "11": {
        "failing_tests": [
            "com.google.javascript.jscomp.TypeInferenceTest::testNoThisInference$catena_0",
            "com.google.javascript.jscomp.TypeInferenceTest::testNoThisInference$catena_1"
        ]
    }
}