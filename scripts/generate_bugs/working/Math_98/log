---
Begin generate bug_id: Math_98
num_of_hunks: 2
timeout for running: 3600
use working dir: ./working/data/Math_98
Try to checkout Math_98
build dir: ['./working/data/Math_98/target/classes', './working/data/Math_98/target/test-classes']
init FileManager
trace file: src/java/org/apache/commons/math/linear/BigMatrixImpl.java
trace file: src/java/org/apache/commons/math/linear/RealMatrixImpl.java
trying to replace old failing tests
edit: replace from 440 range 12 at src/test/org/apache/commons/math/linear/BigMatrixImplTest.java
to
    public void testMath209$catena_0() {
        BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {
                { new BigDecimal(1), new BigDecimal(2) },
                { new BigDecimal(3), new BigDecimal(4) },
                { new BigDecimal(5), new BigDecimal(6) }
        }, false);
        BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });
        assertEquals(a.getRowDimension(), b.length);                                                        /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(11.0, b[2].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testMath209$catena_1() {
        BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {
                { new BigDecimal(1), new BigDecimal(2) },
                { new BigDecimal(3), new BigDecimal(4) },
                { new BigDecimal(5), new BigDecimal(6) }
        }, false);
        BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });
        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);                                                    /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(11.0, b[2].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testMath209$catena_2() {
        BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {
                { new BigDecimal(1), new BigDecimal(2) },
                { new BigDecimal(3), new BigDecimal(4) },
                { new BigDecimal(5), new BigDecimal(6) }
        }, false);
        BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });
        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);                                                    /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(11.0, b[2].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testMath209$catena_3() {
        BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {
                { new BigDecimal(1), new BigDecimal(2) },
                { new BigDecimal(3), new BigDecimal(4) },
                { new BigDecimal(5), new BigDecimal(6) }
        }, false);
        BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });
        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(11.0, b[2].doubleValue(), 1.0e-12);                                                    /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 347 range 10 at src/test/org/apache/commons/math/linear/RealMatrixImplTest.java
to
    public void testMath209$catena_0() {
        RealMatrix a = new RealMatrixImpl(new double[][] {
                { 1, 2 }, { 3, 4 }, { 5, 6 }
        }, false);
        double[] b = a.operate(new double[] { 1, 1 });
        assertEquals(a.getRowDimension(), b.length);                                                        /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals( 3.0, b[0], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals( 7.0, b[1], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(11.0, b[2], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testMath209$catena_1() {
        RealMatrix a = new RealMatrixImpl(new double[][] {
                { 1, 2 }, { 3, 4 }, { 5, 6 }
        }, false);
        double[] b = a.operate(new double[] { 1, 1 });
        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals( 3.0, b[0], 1.0e-12);                                                                  /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals( 7.0, b[1], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(11.0, b[2], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testMath209$catena_2() {
        RealMatrix a = new RealMatrixImpl(new double[][] {
                { 1, 2 }, { 3, 4 }, { 5, 6 }
        }, false);
        double[] b = a.operate(new double[] { 1, 1 });
        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals( 3.0, b[0], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals( 7.0, b[1], 1.0e-12);                                                                  /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(11.0, b[2], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testMath209$catena_3() {
        RealMatrix a = new RealMatrixImpl(new double[][] {
                { 1, 2 }, { 3, 4 }, { 5, 6 }
        }, false);
        double[] b = a.operate(new double[] { 1, 1 });
        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals( 3.0, b[0], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals( 7.0, b[1], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(11.0, b[2], 1.0e-12);                                                                  /***** ORIGINAL ASSERTION IS HERE *****/
    }
trace file: src/test/org/apache/commons/math/linear/BigMatrixImplTest.java
trace file: src/test/org/apache/commons/math/linear/RealMatrixImplTest.java
new test num: 8
ori test num: 0
pattern: 00
patches are written to file
running tests...
used time: Finished in 25.89 seconds
Failing tests: 8
	org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_0
	org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_1
	org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_2
	org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_3
	org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_0
	org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_1
	org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_2
	org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_3
processed: 00
pattern: 01
try to fix hunk: 1
replace from 779 with range 1 to
        final double[] out = new double[nRows];

patches are written to file
running tests...
used time: Finished in 26.42 seconds
Failing tests: 4
	org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_0
	org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_1
	org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_2
	org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_3
select new bug
Pattern: 01
new failing tests:
org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_3
org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_1
org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_2
org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_0
Save found bug
processed: 01
pattern: 10
try to fix hunk: 0
replace from 991 with range 1 to
        final BigDecimal[] out = new BigDecimal[nRows];

patches are written to file
running tests...
used time: Finished in 23.63 seconds
Failing tests: 4
	org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_0
	org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_1
	org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_2
	org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_3
select new bug
Pattern: 10
new failing tests:
org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_2
org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_3
org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_1
org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_0
Save found bug
processed: 10
pattern: 11
try to fix hunk: 0
replace from 991 with range 1 to
        final BigDecimal[] out = new BigDecimal[nRows];

try to fix hunk: 1
replace from 779 with range 1 to
        final double[] out = new double[nRows];

patches are written to file
running tests...
used time: Finished in 19.79 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
processed: 11
Find 2 new bugs
