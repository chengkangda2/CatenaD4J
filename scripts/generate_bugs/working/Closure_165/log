---
Begin generate bug_id: Closure_165
num_of_hunks: 13
NOTICE: may not contains full fix patterns for hunks are too much (13 hunks)
timeout for running: 3600
use working dir: ./working/data/Closure_165
Try to checkout Closure_165
build dir: ['./working/data/Closure_165/build/classes', './working/data/Closure_165/build/test']
init FileManager
trace file: src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
trace file: src/com/google/javascript/rhino/jstype/ObjectType.java
trace file: src/com/google/javascript/rhino/jstype/RecordType.java
trace file: src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java
trying to replace old failing tests
new test num: 0
ori test num: 1
pattern: 0000000000000
patches are written to file
running tests...
used time: Finished in 246.26 seconds
Failing tests: 1
	com.google.javascript.jscomp.TypeCheckTest::testIssue725
processed: 0000000000000
pattern: 1000000000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000000000
pattern: 0100000000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

patches are written to file
running tests...
used time: Finished in 223.06 seconds
Failing tests: 1
	com.google.javascript.jscomp.TypeCheckTest::testIssue725
No new failing tests but only 1 hunk
processed: 0100000000000
pattern: 0010000000000
try to fix hunk: 2
insert before 68 with   private final boolean declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000000000
pattern: 0001000000000
try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000000000
pattern: 0000100000000
try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100000000
pattern: 0000010000000
try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010000000
pattern: 0000001000000
try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001000000
pattern: 0000000100000
try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000100000
pattern: 0000000010000
try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000010000
pattern: 0000000001000
try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000001000
pattern: 0000000000100
try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
used time: Finished in 251.69 seconds
Failing tests: 1
	com.google.javascript.jscomp.TypeCheckTest::testIssue725
No new failing tests but only 1 hunk
processed: 0000000000100
pattern: 0000000000010
try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000000010
pattern: 0000000000001
try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000000001
pattern: 1100000000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100000000000
pattern: 1010000000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010000000000
pattern: 1001000000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001000000000
pattern: 1000100000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000100000000
pattern: 1000010000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000010000000
pattern: 1000001000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000001000000
pattern: 1000000100000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000100000
pattern: 1000000010000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000010000
pattern: 1000000001000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000001000
pattern: 1000000000100
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000000100
pattern: 1000000000010
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000000010
pattern: 1000000000001
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000000001
pattern: 0110000000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000000000
pattern: 0101000000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000000000
pattern: 0100100000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100000000
pattern: 0100010000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010000000
pattern: 0100001000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001000000
pattern: 0100000100000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000100000
pattern: 0100000010000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000010000
pattern: 0100000001000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000001000
pattern: 0100000000100
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
used time: Finished in 234.36 seconds
Failing tests: 1
	com.google.javascript.jscomp.TypeCheckTest::testIssue725
Can independently fix []
Could not fix independently
processed: 0100000000100
pattern: 0100000000010
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000000010
pattern: 0100000000001
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000000001
pattern: 0011000000000
try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011000000000
pattern: 0010100000000
try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010100000000
pattern: 0010010000000
try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010010000000
pattern: 0010001000000
try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010001000000
pattern: 0010000100000
try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000100000
pattern: 0010000010000
try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000010000
pattern: 0010000001000
try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000001000
pattern: 0010000000100
try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000000100
pattern: 0010000000010
try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000000010
pattern: 0010000000001
try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000000001
pattern: 0001100000000
try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

patches are written to file
running tests...
used time: Finished in 237.80 seconds
Failing tests: 1
	com.google.javascript.jscomp.TypeCheckTest::testIssue725
Can independently fix []
Could not fix independently
processed: 0001100000000
pattern: 0001010000000
try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001010000000
pattern: 0001001000000
try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001001000000
pattern: 0001000100000
try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000100000
pattern: 0001000010000
try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000010000
pattern: 0001000001000
try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000001000
pattern: 0001000000100
try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000000100
pattern: 0001000000010
try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000000010
pattern: 0001000000001
try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000000001
pattern: 0000110000000
try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000110000000
pattern: 0000101000000
try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000101000000
pattern: 0000100100000
try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100100000
pattern: 0000100010000
try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100010000
pattern: 0000100001000
try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100001000
pattern: 0000100000100
try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100000100
pattern: 0000100000010
try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100000010
pattern: 0000100000001
try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100000001
pattern: 0000011000000
try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000011000000
pattern: 0000010100000
try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010100000
pattern: 0000010010000
try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010010000
pattern: 0000010001000
try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010001000
pattern: 0000010000100
try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010000100
pattern: 0000010000010
try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010000010
pattern: 0000010000001
try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010000001
pattern: 0000001100000
try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001100000
pattern: 0000001010000
try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001010000
pattern: 0000001001000
try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001001000
pattern: 0000001000100
try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001000100
pattern: 0000001000010
try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001000010
pattern: 0000001000001
try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001000001
pattern: 0000000110000
try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000110000
pattern: 0000000101000
try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000101000
pattern: 0000000100100
try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000100100
pattern: 0000000100010
try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000100010
pattern: 0000000100001
try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000100001
pattern: 0000000011000
try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000011000
pattern: 0000000010100
try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000010100
pattern: 0000000010010
try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000010010
pattern: 0000000010001
try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000010001
pattern: 0000000001100
try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000001100
pattern: 0000000001010
try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000001010
pattern: 0000000001001
try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000001001
pattern: 0000000000110
try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
used time: Finished in 233.25 seconds
Failing tests: 1
	com.google.javascript.jscomp.TypeCheckTest::testIssue725
Can independently fix []
Could not fix independently
processed: 0000000000110
pattern: 0000000000101
try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000000101
pattern: 0000000000011
try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000000011
pattern: 1110000000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1110000000000
pattern: 1101000000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1101000000000
pattern: 1100100000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100100000000
pattern: 1100010000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100010000000
pattern: 1100001000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100001000000
pattern: 1100000100000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100000100000
pattern: 1100000010000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100000010000
pattern: 1100000001000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100000001000
pattern: 1100000000100
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100000000100
pattern: 1100000000010
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100000000010
pattern: 1100000000001
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100000000001
pattern: 1011000000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1011000000000
pattern: 1010100000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010100000000
pattern: 1010010000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010010000000
pattern: 1010001000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010001000000
pattern: 1010000100000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010000100000
pattern: 1010000010000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010000010000
pattern: 1010000001000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010000001000
pattern: 1010000000100
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010000000100
pattern: 1010000000010
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010000000010
pattern: 1010000000001
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010000000001
pattern: 1001100000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001100000000
pattern: 1001010000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001010000000
pattern: 1001001000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001001000000
pattern: 1001000100000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001000100000
pattern: 1001000010000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001000010000
pattern: 1001000001000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001000001000
pattern: 1001000000100
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001000000100
pattern: 1001000000010
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001000000010
pattern: 1001000000001
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001000000001
pattern: 1000110000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000110000000
pattern: 1000101000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000101000000
pattern: 1000100100000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000100100000
pattern: 1000100010000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000100010000
pattern: 1000100001000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000100001000
pattern: 1000100000100
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000100000100
pattern: 1000100000010
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000100000010
pattern: 1000100000001
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000100000001
pattern: 1000011000000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000011000000
pattern: 1000010100000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000010100000
pattern: 1000010010000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000010010000
pattern: 1000010001000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000010001000
pattern: 1000010000100
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000010000100
pattern: 1000010000010
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000010000010
pattern: 1000010000001
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000010000001
pattern: 1000001100000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000001100000
pattern: 1000001010000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000001010000
pattern: 1000001001000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000001001000
pattern: 1000001000100
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000001000100
pattern: 1000001000010
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000001000010
pattern: 1000001000001
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000001000001
pattern: 1000000110000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000110000
pattern: 1000000101000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000101000
pattern: 1000000100100
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000100100
pattern: 1000000100010
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000100010
pattern: 1000000100001
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000100001
pattern: 1000000011000
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000011000
pattern: 1000000010100
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000010100
pattern: 1000000010010
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000010010
pattern: 1000000010001
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000010001
pattern: 1000000001100
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000001100
pattern: 1000000001010
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000001010
pattern: 1000000001001
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000001001
pattern: 1000000000110
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000000110
pattern: 1000000000101
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000000101
pattern: 1000000000011
try to fix hunk: 0
insert before 698 with           RecordType maybeRecordType = greatestSubtype.toMaybeRecordType();
          if (maybeRecordType != null && maybeRecordType.isSynthetic()) {
            continue;
          }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000000011
pattern: 0111000000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0111000000000
pattern: 0110100000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110100000000
pattern: 0110010000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110010000000
pattern: 0110001000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110001000000
pattern: 0110000100000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000100000
pattern: 0110000010000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000010000
pattern: 0110000001000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000001000
pattern: 0110000000100
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000000100
pattern: 0110000000010
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000000010
pattern: 0110000000001
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 2
insert before 68 with   private final boolean declared;

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000000001
pattern: 0101100000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

patches are written to file
running tests...
used time: Finished in 233.04 seconds
Failing tests: 1
	com.google.javascript.jscomp.TypeCheckTest::testIssue725
Can independently fix []
Could not fix independently
processed: 0101100000000
pattern: 0101010000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101010000000
pattern: 0101001000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101001000000
pattern: 0101000100000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000100000
pattern: 0101000010000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000010000
pattern: 0101000001000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000001000
pattern: 0101000000100
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000000100
pattern: 0101000000010
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000000010
pattern: 0101000000001
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 3
insert before 70 with   RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties) {
    this(registry, properties, true);
  }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000000001
pattern: 0100110000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 5
insert before 86 with     this.declared = declared;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100110000000
pattern: 0100101000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100101000000
pattern: 0100100100000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100100000
pattern: 0100100010000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100010000
pattern: 0100100001000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100001000
pattern: 0100100000100
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100000100
pattern: 0100100000010
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100000010
pattern: 0100100000001
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 4
replace from 83 with range 1 to
  RecordType(JSTypeRegistry registry, Map<String, RecordProperty> properties,
      boolean declared) {

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100000001
pattern: 0100011000000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 6
insert before 93 with       if (declared) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100011000000
pattern: 0100010100000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010100000
pattern: 0100010010000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010010000
pattern: 0100010001000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010001000
pattern: 0100010000100
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010000100
pattern: 0100010000010
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010000010
pattern: 0100010000001
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 5
insert before 86 with     this.declared = declared;

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010000001
pattern: 0100001100000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001100000
pattern: 0100001010000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001010000
pattern: 0100001001000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001001000
pattern: 0100001000100
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001000100
pattern: 0100001000010
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001000010
pattern: 0100001000001
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 6
insert before 93 with       if (declared) {

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001000001
pattern: 0100000110000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000110000
pattern: 0100000101000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000101000
pattern: 0100000100100
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000100100
pattern: 0100000100010
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000100010
pattern: 0100000100001
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 7
insert before 95 with       } else {
        defineSynthesizedProperty(
            property, prop.getType(), prop.getPropertyNode());
      }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000100001
pattern: 0100000011000
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000011000
pattern: 0100000010100
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000010100
pattern: 0100000010010
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000010010
pattern: 0100000010001
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 8
insert before 102 with   boolean isSynthetic() {
    return !declared;
  }

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000010001
pattern: 0100000001100
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000001100
pattern: 0100000001010
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000001010
pattern: 0100000001001
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 9
insert before 152 with       builder.setSynthesized(true);

try to fix hunk: 12
replace from 92 with range 1 to
        registry, Collections.unmodifiableMap(properties), isDeclared);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000001001
pattern: 0100000000110
try to fix hunk: 1
insert before 290 with   public final boolean defineSynthesizedProperty(String propertyName,
      JSType type, Node propertyNode) {
    return defineProperty(propertyName, type, false, propertyNode);
  }

try to fix hunk: 10
insert before 54 with   private boolean isDeclared = true;

try to fix hunk: 11
insert before 62 with   void setSynthesized(boolean synthesized) {
    isDeclared = !synthesized;
  }

patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

