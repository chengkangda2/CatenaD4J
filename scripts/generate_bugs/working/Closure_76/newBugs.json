{
    "original": {
        "num_of_hunks": 11,
        "0": {
            "file_name": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
            "replaced_with": "          if (n.getNext() != null) {\n            state = isVariableReadBeforeKill(\n                n.getNext(), variable);\n            if (state == VariableLiveness.KILL) {\n              state = VariableLiveness.MAYBE_LIVE;\n            }\n          }\n          break;\n",
            "patch_type": "insert",
            "next_line_no": 300
        },
        "1": {
            "file_name": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
            "replaced_with": "          if (n.getNext() != null && n.getNext().getNext() != null) {\n            state = checkHookBranchReadBeforeKill(\n                n.getNext(), n.getNext().getNext(), variable);\n          }\n          break;\n",
            "patch_type": "insert",
            "next_line_no": 305
        },
        "2": {
            "file_name": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
            "from_line_no": 309,
            "to_line_no": 309,
            "replaced": "            if (!ControlFlowGraph.isEnteringNewCfgNode(sibling)) {\n",
            "patch_type": "delete",
            "next_line_no": 310
        },
        "3": {
            "file_name": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
            "replaced_with": "            if (state != VariableLiveness.MAYBE_LIVE) {\n              break;\n            }\n          }\n      }\n",
            "patch_type": "insert",
            "next_line_no": 311
        },
        "4": {
            "file_name": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
            "from_line_no": 317,
            "to_line_no": 319,
            "replaced": "            }\n          }\n      }\n",
            "patch_type": "delete",
            "next_line_no": 320
        },
        "5": {
            "file_name": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
            "replaced_with": "    if (ControlFlowGraph.isEnteringNewCfgNode(n)) { // Not a FUNCTION\n      return VariableLiveness.MAYBE_LIVE;\n    }\n",
            "patch_type": "insert",
            "next_line_no": 340
        },
        "6": {
            "file_name": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
            "replaced_with": "        VariableLiveness v1 = isVariableReadBeforeKill(\n          n.getFirstChild(), variable);\n        VariableLiveness v2 = isVariableReadBeforeKill(\n          n.getLastChild(), variable);\n",
            "patch_type": "insert",
            "next_line_no": 362
        },
        "7": {
            "file_name": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
            "replaced_with": "        if (v1 != VariableLiveness.MAYBE_LIVE) {\n          return v1;\n        } else if (v2 == VariableLiveness.READ) {\n          return VariableLiveness.READ;\n        } else {\n          return VariableLiveness.MAYBE_LIVE;\n        }\n",
            "patch_type": "insert",
            "next_line_no": 364
        },
        "8": {
            "file_name": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
            "replaced_with": "        VariableLiveness first = isVariableReadBeforeKill(\n            n.getFirstChild(), variable);\n        if (first != VariableLiveness.MAYBE_LIVE) {\n          return first;\n        }\n",
            "patch_type": "insert",
            "next_line_no": 365
        },
        "9": {
            "file_name": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
            "from_line_no": 372,
            "to_line_no": 372,
            "replaced": "          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION\n",
            "patch_type": "delete",
            "next_line_no": 373
        },
        "10": {
            "file_name": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
            "from_line_no": 378,
            "to_line_no": 378,
            "replaced": "      }\n",
            "patch_type": "delete",
            "next_line_no": 379
        }
    },
    "method": {
        "failing_tests": [
            "com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testInExpression2",
            "com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue384b",
            "com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue384c",
            "com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue384d"
        ],
        "com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testInExpression2": {
            "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
            "Instance": "Begin: Pos(456, 10)\nEnd: Pos(488, 3)\nSource: /root/workbench/exportInfo/d4j_buggy/Closure_76/test//com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java\nName: testInExpression2\nChilds: [StatementAssertion<Begin: Pos(459, 5), End: Pos(461, 59)>,\nStatementAssertion<Begin: Pos(463, 5), End: Pos(465, 25)>,\nStatementAssertion<Begin: Pos(467, 5), End: Pos(467, 54)>,\nStatementAssertion<Begin: Pos(469, 5), End: Pos(471, 40)>,\nStatementAssertion<Begin: Pos(473, 5), End: Pos(473, 56)>,\nStatementAssertion<Begin: Pos(475, 5), End: Pos(477, 36)>,\nStatementAssertion<Begin: Pos(479, 5), End: Pos(479, 55)>,\nStatementAssertion<Begin: Pos(481, 5), End: Pos(483, 43)>,\nStatementAssertion<Begin: Pos(487, 5), End: Pos(487, 59)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Closure_76/test//com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
            "name": "testInExpression2",
            "begin": "Pos(456, 10)",
            "end": "Pos(488, 3)",
            "begin_line_no": 456,
            "end_line_no": 488,
            "child": [
                "Begin: Pos(459, 5)\nEnd: Pos(461, 59)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(463, 5)\nEnd: Pos(465, 25)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(467, 5)\nEnd: Pos(467, 54)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(469, 5)\nEnd: Pos(471, 40)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(473, 5)\nEnd: Pos(473, 56)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(475, 5)\nEnd: Pos(477, 36)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(479, 5)\nEnd: Pos(479, 55)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(481, 5)\nEnd: Pos(483, 43)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(487, 5)\nEnd: Pos(487, 59)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "  public void testInExpression2$catena_0() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testInExpression2$catena_1() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testInExpression2$catena_2() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                      /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testInExpression2$catena_3() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testInExpression2$catena_4() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testInExpression2$catena_5() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testInExpression2$catena_6() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                     /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testInExpression2$catena_7() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testInExpression2$catena_8() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n  }"
            ],
            "func": {
                "0": "  public void testInExpression2$catena_0() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "1": "  public void testInExpression2$catena_1() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "2": "  public void testInExpression2$catena_2() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                      /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "3": "  public void testInExpression2$catena_3() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "4": "  public void testInExpression2$catena_4() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "5": "  public void testInExpression2$catena_5() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "6": "  public void testInExpression2$catena_6() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                     /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "7": "  public void testInExpression2$catena_7() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "8": "  public void testInExpression2$catena_8() {\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    try{ inFunction(\n        \"var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}\",\n        \"var a; a = 1; if ((    2) || (a = 3) || (a)) {}\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) || (a = 2)\",\n        \"var a; 1 || 2\");                                                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; (a = 1) || (a = 2); return a\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a = 2 : a;\",\n        \"var a; a = 1; a ?     2 : a;\");                                                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a = 2 : a; return a\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; a = 1; a ? a : a = 2;\",\n        \"var a; a = 1; a ? a : 2;\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\"var a; a = 1; a ? a : a =2; return a\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ inFunction(\n        \"var a; (a = 1) ? a = 2 : a = 3;\",\n        \"var a;      1  ?     2 :     3;\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    // This can be improved.  \"a = 1\" is dead but \"a\" is read in the following\n    // expression.\n    inFunction(\"var a; (a = 1) ? a = 2 : a = 3; return a\");                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n  }"
            }
        },
        "com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue384b": {
            "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
            "Instance": "Begin: Pos(500, 10)\nEnd: Pos(505, 3)\nSource: /root/workbench/exportInfo/d4j_buggy/Closure_76/test//com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java\nName: testIssue384b\nChilds: [StatementAssertion<Begin: Pos(501, 5), End: Pos(504, 26)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Closure_76/test//com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
            "name": "testIssue384b",
            "begin": "Pos(500, 10)",
            "end": "Pos(505, 3)",
            "begin_line_no": 500,
            "end_line_no": 505,
            "child": [
                "Begin: Pos(501, 5)\nEnd: Pos(504, 26)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [],
            "func": {}
        },
        "com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue384c": {
            "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
            "Instance": "Begin: Pos(507, 10)\nEnd: Pos(512, 3)\nSource: /root/workbench/exportInfo/d4j_buggy/Closure_76/test//com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java\nName: testIssue384c\nChilds: [StatementAssertion<Begin: Pos(508, 5), End: Pos(511, 26)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Closure_76/test//com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
            "name": "testIssue384c",
            "begin": "Pos(507, 10)",
            "end": "Pos(512, 3)",
            "begin_line_no": 507,
            "end_line_no": 512,
            "child": [
                "Begin: Pos(508, 5)\nEnd: Pos(511, 26)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [],
            "func": {}
        },
        "com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue384d": {
            "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
            "Instance": "Begin: Pos(514, 10)\nEnd: Pos(519, 3)\nSource: /root/workbench/exportInfo/d4j_buggy/Closure_76/test//com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java\nName: testIssue384d\nChilds: [StatementAssertion<Begin: Pos(515, 5), End: Pos(518, 26)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Closure_76/test//com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
            "name": "testIssue384d",
            "begin": "Pos(514, 10)",
            "end": "Pos(519, 3)",
            "begin_line_no": 514,
            "end_line_no": 519,
            "child": [
                "Begin: Pos(515, 5)\nEnd: Pos(518, 26)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [],
            "func": {}
        }
    },
    "00000000100": {
        "failing_tests": [
            "com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testInExpression2$catena_0"
        ]
    },
    "00000011000": {
        "failing_tests": [
            "com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testInExpression2$catena_0"
        ]
    }
}