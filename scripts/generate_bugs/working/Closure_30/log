---
Begin generate bug_id: Closure_30
num_of_hunks: 6
timeout for running: 3600
use working dir: ./working/data/Closure_30
clean up: ./working/data/Closure_30
Try to checkout Closure_30
build dir: ['build/classes', 'build/test']
init FileManager
trace file: src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
trace file: src/com/google/javascript/jscomp/MustBeReachingVariableDef.java
trying to replace old failing tests
new test num: 0
ori test num: 3
pattern: 000000
patches are written to file
running tests...
used time: Finished in 150.87 seconds
Failing tests: 3
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
processed: 000000
pattern: 000001
try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001
pattern: 000010
try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010
pattern: 000100
try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100
pattern: 001000
try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

patches are written to file
running tests...
used time: Finished in 151.00 seconds
Failing tests: 15
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInvalidInlineArguments1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp2
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineConstructors
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineConstructorCallsIntoLoop
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpression7
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testDoNotInlineWithinLoop
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect2
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect3
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect4
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpressions12
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetEle
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Includes new failing tests, set to unusable
processed: 001000
pattern: 010000
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

patches are written to file
running tests...
used time: Finished in 153.56 seconds
Failing tests: 3
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
No new failing tests but only 1 hunk
processed: 010000
pattern: 100000
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

patches are written to file
running tests...
used time: Finished in 156.60 seconds
Failing tests: 1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
select new bug
Pattern: 100000
new failing tests:
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
Save found bug
processed: 100000
pattern: 000011
try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011
pattern: 000101
try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101
pattern: 000110
try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110
pattern: 001001
try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001
pattern: 001010
try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010
pattern: 001100
try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100
pattern: 010001
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
used time: Finished in 140.06 seconds
Failing tests: 3
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Can independently fix []
Could not fix independently
processed: 010001
pattern: 010010
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010
pattern: 010100
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100
pattern: 011000
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

patches are written to file
running tests...
used time: Finished in 160.03 seconds
Failing tests: 15
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInvalidInlineArguments1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp2
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineConstructors
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineConstructorCallsIntoLoop
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpression7
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testDoNotInlineWithinLoop
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect2
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect3
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect4
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpressions12
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetEle
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Includes new failing tests, set to unusable
processed: 011000
pattern: 100001
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001
pattern: 100010
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010
pattern: 100100
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100
pattern: 101000
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

patches are written to file
running tests...
used time: Finished in 167.68 seconds
Failing tests: 9
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInvalidInlineArguments1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp2
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineConstructors
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineConstructorCallsIntoLoop
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpression7
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpressions12
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetEle
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Includes new failing tests, set to unusable
processed: 101000
pattern: 110000
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

patches are written to file
running tests...
used time: Finished in 149.48 seconds
Failing tests: 1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Can independently fix []
Could not fix independently
processed: 110000
pattern: 000111
try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111
pattern: 001011
try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001011
pattern: 001101
try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101
pattern: 001110
try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110
pattern: 010011
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010011
pattern: 010101
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010101
pattern: 010110
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
used time: Finished in 151.96 seconds
Failing tests: 3
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Can independently fix []
Could not fix independently
processed: 010110
pattern: 011001
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
used time: Finished in 142.31 seconds
Failing tests: 15
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInvalidInlineArguments1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp2
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineConstructors
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineConstructorCallsIntoLoop
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpression7
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testDoNotInlineWithinLoop
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect2
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect3
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect4
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpressions12
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetEle
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Includes new failing tests, set to unusable
processed: 011001
pattern: 011010
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011010
pattern: 011100
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011100
pattern: 100011
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011
pattern: 100101
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101
pattern: 100110
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110
pattern: 101001
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001
pattern: 101010
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010
pattern: 101100
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100
pattern: 110001
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
used time: Finished in 164.15 seconds
Failing tests: 1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Can independently fix []
Could not fix independently
processed: 110001
pattern: 110010
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010
pattern: 110100
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100
pattern: 111000
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

patches are written to file
running tests...
used time: Finished in 145.66 seconds
Failing tests: 9
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInvalidInlineArguments1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp2
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineConstructors
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineConstructorCallsIntoLoop
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpression7
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpressions12
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetEle
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Includes new failing tests, set to unusable
processed: 111000
pattern: 001111
try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001111
pattern: 010111
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
used time: Finished in 164.36 seconds
Failing tests: 3
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Can independently fix []
Could not fix independently
processed: 010111
pattern: 011011
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011011
pattern: 011101
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011101
pattern: 011110
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
used time: Finished in 158.08 seconds
Failing tests: 3
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Can independently fix []
Could not fix independently
processed: 011110
pattern: 100111
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100111
pattern: 101011
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101011
pattern: 101101
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101101
pattern: 101110
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101110
pattern: 110011
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110011
pattern: 110101
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110101
pattern: 110110
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
used time: Finished in 151.77 seconds
Failing tests: 1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Can independently fix []
Could not fix independently
processed: 110110
pattern: 111001
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
used time: Finished in 148.43 seconds
Failing tests: 9
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInvalidInlineArguments1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp2
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineConstructors
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineConstructorCallsIntoLoop
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetProp
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpression7
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineExpressions12
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testNoInlineGetEle
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Includes new failing tests, set to unusable
processed: 111001
pattern: 111010
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111010
pattern: 111100
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111100
pattern: 011111
try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
used time: Finished in 142.27 seconds
Failing tests: 0
Can independently fix ['com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1', 'com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698', 'com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect']
select new bug
Pattern: 011111
new failing tests:
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
Save found bug
processed: 011111
pattern: 101111
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101111
pattern: 110111
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
used time: Finished in 149.57 seconds
Failing tests: 1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Can independently fix []
Could not fix independently
processed: 110111
pattern: 111011
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111011
pattern: 111101
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111101
pattern: 111110
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

patches are written to file
running tests...
used time: Finished in 154.42 seconds
Failing tests: 1
	com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
Can independently fix []
Could not fix independently
processed: 111110
pattern: 111111
try to fix hunk: 0
replace from 157 with range 1 to
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);

try to fix hunk: 1
insert before 71 with     private boolean unknownDependencies = false;

try to fix hunk: 2
replace from 396 with range 1 to
        if (n.isName()) {

try to fix hunk: 3
insert before 398 with           if (dep == null) {
            def.unknownDependencies = true;
          } else {

try to fix hunk: 4
insert before 399 with           }

try to fix hunk: 5
insert before 430 with     if (def.unknownDependencies) {
      return true;
    }

patches are written to file
running tests...
used time: Finished in 144.33 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
processed: 111111
Find 2 new bugs
