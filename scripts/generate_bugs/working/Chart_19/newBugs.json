{
    "original": {
        "num_of_hunks": 2,
        "0": {
            "file_name": "source/org/jfree/chart/plot/CategoryPlot.java",
            "replaced_with": "        if (axis == null) {\n            throw new IllegalArgumentException(\"Null 'axis' argument.\");\n        }\n",
            "patch_type": "insert",
            "next_line_no": 698
        },
        "1": {
            "file_name": "source/org/jfree/chart/plot/CategoryPlot.java",
            "replaced_with": "        if (axis == null) {\n            throw new IllegalArgumentException(\"Null 'axis' argument.\");\n        }\n",
            "patch_type": "insert",
            "next_line_no": 973
        }
    },
    "method": {
        "failing_tests": [
            "org.jfree.chart.plot.junit.CategoryPlotTests::testGetRangeAxisIndex",
            "org.jfree.chart.plot.junit.CategoryPlotTests::testGetDomainAxisIndex"
        ],
        "org.jfree.chart.plot.junit.CategoryPlotTests::testGetRangeAxisIndex": {
            "file_path": "tests/org/jfree/chart/plot/junit/CategoryPlotTests.java",
            "Instance": "Begin: Pos(743, 12)\nEnd: Pos(762, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Chart_19/tests//org/jfree/chart/plot/junit/CategoryPlotTests.java\nName: testGetRangeAxisIndex\nChilds: [StatementAssertion<Begin: Pos(749, 9), End: Pos(749, 60)>,\nStatementAssertion<Begin: Pos(750, 9), End: Pos(750, 61)>,\nStatementAssertion<Begin: Pos(752, 9), End: Pos(752, 60)>,\nStatementAssertion<Begin: Pos(753, 9), End: Pos(753, 71)>,\nStatementAssertion<Begin: Pos(761, 9), End: Pos(761, 25)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Chart_19/tests//org/jfree/chart/plot/junit/CategoryPlotTests.java",
            "name": "testGetRangeAxisIndex",
            "begin": "Pos(743, 12)",
            "end": "Pos(762, 5)",
            "begin_line_no": 743,
            "end_line_no": 762,
            "child": [
                "Begin: Pos(749, 9)\nEnd: Pos(749, 60)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(750, 9)\nEnd: Pos(750, 61)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(752, 9)\nEnd: Pos(752, 60)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(753, 9)\nEnd: Pos(753, 71)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(761, 9)\nEnd: Pos(761, 25)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    public void testGetRangeAxisIndex$catena_0() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        NumberAxis rangeAxis2 = new NumberAxis(\"Y2\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                                /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setRangeAxis(1, rangeAxis2);\n        try{ assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis(\"Y2\")));                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getRangeAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetRangeAxisIndex$catena_1() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        NumberAxis rangeAxis2 = new NumberAxis(\"Y2\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                               /***** ORIGINAL ASSERTION IS HERE *****/\n        plot.setRangeAxis(1, rangeAxis2);\n        try{ assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis(\"Y2\")));                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getRangeAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetRangeAxisIndex$catena_2() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        NumberAxis rangeAxis2 = new NumberAxis(\"Y2\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setRangeAxis(1, rangeAxis2);\n        assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                                /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis(\"Y2\")));                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getRangeAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetRangeAxisIndex$catena_3() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        NumberAxis rangeAxis2 = new NumberAxis(\"Y2\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setRangeAxis(1, rangeAxis2);\n        try{ assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis(\"Y2\")));                                     /***** ORIGINAL ASSERTION IS HERE *****/\n        boolean pass = false;\n        try {\n            plot.getRangeAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetRangeAxisIndex$catena_4() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        NumberAxis rangeAxis2 = new NumberAxis(\"Y2\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setRangeAxis(1, rangeAxis2);\n        try{ assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis(\"Y2\")));                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getRangeAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);                                                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            ],
            "func": {
                "0": "    public void testGetRangeAxisIndex$catena_0() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        NumberAxis rangeAxis2 = new NumberAxis(\"Y2\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                                /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setRangeAxis(1, rangeAxis2);\n        try{ assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis(\"Y2\")));                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getRangeAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "1": "    public void testGetRangeAxisIndex$catena_1() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        NumberAxis rangeAxis2 = new NumberAxis(\"Y2\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                               /***** ORIGINAL ASSERTION IS HERE *****/\n        plot.setRangeAxis(1, rangeAxis2);\n        try{ assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis(\"Y2\")));                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getRangeAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "2": "    public void testGetRangeAxisIndex$catena_2() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        NumberAxis rangeAxis2 = new NumberAxis(\"Y2\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setRangeAxis(1, rangeAxis2);\n        assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                                /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis(\"Y2\")));                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getRangeAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "3": "    public void testGetRangeAxisIndex$catena_3() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        NumberAxis rangeAxis2 = new NumberAxis(\"Y2\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setRangeAxis(1, rangeAxis2);\n        try{ assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis(\"Y2\")));                                     /***** ORIGINAL ASSERTION IS HERE *****/\n        boolean pass = false;\n        try {\n            plot.getRangeAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "4": "    public void testGetRangeAxisIndex$catena_4() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        NumberAxis rangeAxis2 = new NumberAxis(\"Y2\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setRangeAxis(1, rangeAxis2);\n        try{ assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis(\"Y2\")));                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getRangeAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);                                                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            }
        },
        "org.jfree.chart.plot.junit.CategoryPlotTests::testGetDomainAxisIndex": {
            "file_path": "tests/org/jfree/chart/plot/junit/CategoryPlotTests.java",
            "Instance": "Begin: Pos(719, 12)\nEnd: Pos(738, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Chart_19/tests//org/jfree/chart/plot/junit/CategoryPlotTests.java\nName: testGetDomainAxisIndex\nChilds: [StatementAssertion<Begin: Pos(725, 9), End: Pos(725, 62)>,\nStatementAssertion<Begin: Pos(726, 9), End: Pos(726, 63)>,\nStatementAssertion<Begin: Pos(728, 9), End: Pos(728, 62)>,\nStatementAssertion<Begin: Pos(729, 9), End: Pos(729, 74)>,\nStatementAssertion<Begin: Pos(737, 9), End: Pos(737, 25)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Chart_19/tests//org/jfree/chart/plot/junit/CategoryPlotTests.java",
            "name": "testGetDomainAxisIndex",
            "begin": "Pos(719, 12)",
            "end": "Pos(738, 5)",
            "begin_line_no": 719,
            "end_line_no": 738,
            "child": [
                "Begin: Pos(725, 9)\nEnd: Pos(725, 62)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(726, 9)\nEnd: Pos(726, 63)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(728, 9)\nEnd: Pos(728, 62)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(729, 9)\nEnd: Pos(729, 74)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(737, 9)\nEnd: Pos(737, 25)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    public void testGetDomainAxisIndex$catena_0() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        CategoryAxis domainAxis2 = new CategoryAxis(\"X2\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                              /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setDomainAxis(1, domainAxis2);\n        try{ assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis(\"X2\")));                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getDomainAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetDomainAxisIndex$catena_1() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        CategoryAxis domainAxis2 = new CategoryAxis(\"X2\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        plot.setDomainAxis(1, domainAxis2);\n        try{ assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis(\"X2\")));                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getDomainAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetDomainAxisIndex$catena_2() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        CategoryAxis domainAxis2 = new CategoryAxis(\"X2\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setDomainAxis(1, domainAxis2);\n        assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                              /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis(\"X2\")));                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getDomainAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetDomainAxisIndex$catena_3() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        CategoryAxis domainAxis2 = new CategoryAxis(\"X2\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setDomainAxis(1, domainAxis2);\n        try{ assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis(\"X2\")));                                  /***** ORIGINAL ASSERTION IS HERE *****/\n        boolean pass = false;\n        try {\n            plot.getDomainAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetDomainAxisIndex$catena_4() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        CategoryAxis domainAxis2 = new CategoryAxis(\"X2\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setDomainAxis(1, domainAxis2);\n        try{ assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis(\"X2\")));                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getDomainAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);                                                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            ],
            "func": {
                "0": "    public void testGetDomainAxisIndex$catena_0() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        CategoryAxis domainAxis2 = new CategoryAxis(\"X2\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                              /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setDomainAxis(1, domainAxis2);\n        try{ assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis(\"X2\")));                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getDomainAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "1": "    public void testGetDomainAxisIndex$catena_1() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        CategoryAxis domainAxis2 = new CategoryAxis(\"X2\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        plot.setDomainAxis(1, domainAxis2);\n        try{ assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis(\"X2\")));                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getDomainAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "2": "    public void testGetDomainAxisIndex$catena_2() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        CategoryAxis domainAxis2 = new CategoryAxis(\"X2\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setDomainAxis(1, domainAxis2);\n        assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                              /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis(\"X2\")));                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getDomainAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "3": "    public void testGetDomainAxisIndex$catena_3() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        CategoryAxis domainAxis2 = new CategoryAxis(\"X2\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setDomainAxis(1, domainAxis2);\n        try{ assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis(\"X2\")));                                  /***** ORIGINAL ASSERTION IS HERE *****/\n        boolean pass = false;\n        try {\n            plot.getDomainAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "4": "    public void testGetDomainAxisIndex$catena_4() {\n        CategoryAxis domainAxis1 = new CategoryAxis(\"X1\");\n        CategoryAxis domainAxis2 = new CategoryAxis(\"X2\");\n        NumberAxis rangeAxis1 = new NumberAxis(\"Y1\");\n        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, \n                null);\n        try{ assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        plot.setDomainAxis(1, domainAxis2);\n        try{ assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis(\"X2\")));                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        boolean pass = false;\n        try {\n            plot.getDomainAxisIndex(null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);                                                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            }
        }
    },
    "01": {
        "failing_tests": [
            "org.jfree.chart.plot.junit.CategoryPlotTests::testGetRangeAxisIndex$catena_4"
        ]
    },
    "10": {
        "failing_tests": [
            "org.jfree.chart.plot.junit.CategoryPlotTests::testGetDomainAxisIndex$catena_4"
        ]
    }
}