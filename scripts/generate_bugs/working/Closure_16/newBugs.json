{
    "original": {
        "num_of_hunks": 5,
        "0": {
            "file_name": "src/com/google/javascript/jscomp/ScopedAliases.java",
            "replaced_with": "    private final Node aliasDefinition;\n",
            "patch_type": "insert",
            "next_line_no": 170
        },
        "1": {
            "file_name": "src/com/google/javascript/jscomp/ScopedAliases.java",
            "from_line_no": 172,
            "to_line_no": 172,
            "replaced_with": "    AliasedTypeNode(Node typeReference, Node aliasDefinition,\n",
            "replaced": "    AliasedTypeNode(Node typeReference,\n",
            "patch_type": "replace",
            "next_line_no": 173
        },
        "2": {
            "file_name": "src/com/google/javascript/jscomp/ScopedAliases.java",
            "replaced_with": "      this.aliasDefinition = aliasDefinition;\n",
            "patch_type": "insert",
            "next_line_no": 175
        },
        "3": {
            "file_name": "src/com/google/javascript/jscomp/ScopedAliases.java",
            "from_line_no": 180,
            "to_line_no": 180,
            "replaced_with": "      String typeName = typeReference.getString();\n      String aliasExpanded =\n          Preconditions.checkNotNull(aliasDefinition.getQualifiedName());\n      Preconditions.checkState(typeName.startsWith(aliasName));\n      typeReference.setString(typeName.replaceFirst(aliasName, aliasExpanded));\n",
            "replaced": "      typeReference.setString(aliasName);\n",
            "patch_type": "replace",
            "next_line_no": 181
        },
        "4": {
            "file_name": "src/com/google/javascript/jscomp/ScopedAliases.java",
            "from_line_no": 468,
            "to_line_no": 468,
            "replaced_with": "          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode, baseName));\n",
            "replaced": "          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex)));\n",
            "patch_type": "replace",
            "next_line_no": 469
        }
    },
    "method": {
        "failing_tests": [
            "com.google.javascript.jscomp.IntegrationTest::testIssue772",
            "com.google.javascript.jscomp.ScopedAliasesTest::testIssue772"
        ],
        "com.google.javascript.jscomp.IntegrationTest::testIssue772": {
            "file_path": "test/com/google/javascript/jscomp/IntegrationTest.java",
            "Instance": "Begin: Pos(1864, 10)\nEnd: Pos(1886, 3)\nSource: /root/workbench/exportInfo/d4j_buggy/Closure_16/test//com/google/javascript/jscomp/IntegrationTest.java\nName: testIssue772\nChilds: [StatementAssertion<Begin: Pos(1868, 5), End: Pos(1885, 42)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Closure_16/test//com/google/javascript/jscomp/IntegrationTest.java",
            "name": "testIssue772",
            "begin": "Pos(1864, 10)",
            "end": "Pos(1886, 3)",
            "begin_line_no": 1864,
            "end_line_no": 1886,
            "child": [
                "Begin: Pos(1868, 5)\nEnd: Pos(1885, 42)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [],
            "func": {}
        },
        "com.google.javascript.jscomp.ScopedAliasesTest::testIssue772": {
            "file_path": "test/com/google/javascript/jscomp/ScopedAliasesTest.java",
            "Instance": "Begin: Pos(406, 10)\nEnd: Pos(412, 3)\nSource: /root/workbench/exportInfo/d4j_buggy/Closure_16/test//com/google/javascript/jscomp/ScopedAliasesTest.java\nName: testIssue772\nChilds: [StatementAssertion<Begin: Pos(407, 5), End: Pos(411, 58)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Closure_16/test//com/google/javascript/jscomp/ScopedAliasesTest.java",
            "name": "testIssue772",
            "begin": "Pos(406, 10)",
            "end": "Pos(412, 3)",
            "begin_line_no": 406,
            "end_line_no": 412,
            "child": [
                "Begin: Pos(407, 5)\nEnd: Pos(411, 58)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [],
            "func": {}
        }
    },
    "11111": {
        "failing_tests": [
            "com.google.javascript.jscomp.IntegrationTest::testIssue772",
            "com.google.javascript.jscomp.ScopedAliasesTest::testIssue772"
        ]
    }
}