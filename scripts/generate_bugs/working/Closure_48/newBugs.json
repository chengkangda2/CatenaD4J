{
    "original": {
        "num_of_hunks": 2,
        "0": {
            "file_name": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
            "from_line_no": 1521,
            "to_line_no": 1521,
            "replaced_with": "      if (inferred && rhsValue != null && rhsValue.isFunction()) {\n",
            "replaced": "      if (inferred) {\n",
            "patch_type": "replace",
            "next_line_no": 1522
        },
        "1": {
            "file_name": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
            "from_line_no": 1523,
            "to_line_no": 1525,
            "replaced_with": "        if (info != null) {\n          inferred = false;\n        } else if (!scope.isDeclared(qName, false) &&\n                   n.isUnscopedQualifiedName()) {\n          inferred = false;\n        }\n",
            "replaced": "        inferred = !(rhsValue != null &&\n            rhsValue.isFunction() &&\n            (info != null || !scope.isDeclared(qName, false)));\n",
            "patch_type": "replace",
            "next_line_no": 1526
        }
    },
    "method": {
        "failing_tests": [
            "com.google.javascript.jscomp.TypeCheckTest::testIssue586"
        ],
        "com.google.javascript.jscomp.TypeCheckTest::testIssue586": {
            "file_path": "test/com/google/javascript/jscomp/TypeCheckTest.java",
            "Instance": "Begin: Pos(5442, 10)\nEnd: Pos(5455, 3)\nSource: /root/workbench/exportInfo/d4j_buggy/Closure_48/test//com/google/javascript/jscomp/TypeCheckTest.java\nName: testIssue586\nChilds: [StatementAssertion<Begin: Pos(5443, 5), End: Pos(5454, 43)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Closure_48/test//com/google/javascript/jscomp/TypeCheckTest.java",
            "name": "testIssue586",
            "begin": "Pos(5442, 10)",
            "end": "Pos(5455, 3)",
            "begin_line_no": 5442,
            "end_line_no": 5455,
            "child": [
                "Begin: Pos(5443, 5)\nEnd: Pos(5454, 43)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [],
            "func": {}
        }
    },
    "11": {
        "failing_tests": [
            "com.google.javascript.jscomp.TypeCheckTest::testIssue586"
        ]
    }
}