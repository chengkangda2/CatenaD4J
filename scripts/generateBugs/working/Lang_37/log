---
Begin generate bug_id: Lang_37
num_of_hunks: 3
use working dir: ./working/data/Lang_37
Try to checkout Lang_37
build dir: ['./working/data/Lang_37/target/classes', './working/data/Lang_37/target/test-classes']
init FileManager
trace file: src/java/org/apache/commons/lang3/ArrayUtils.java
trace file: src/java/org/apache/commons/lang3/ArrayUtils.java
trace file: src/java/org/apache/commons/lang3/ArrayUtils.java
trying to replace old failing tests
edit: replace from 32 range 13 at src/test/org/apache/commons/lang3/ArrayUtilsAddTest.java
to
    public void testJira567$catena_0(){
        Number[] n;
        // Valid array construction
        n = ArrayUtils.addAll(new Number[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});
        assertEquals(2,n.length);                                                                           /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(Number.class,n.getClass().getComponentType());                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try {
            // Invalid - can't store Long in Integer array
               n = ArrayUtils.addAll(new Integer[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});
               try{ fail("Should have generated IllegalArgumentException");                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalArgumentException expected) {
        }
    }     public void testJira567$catena_1(){
        Number[] n;
        // Valid array construction
        n = ArrayUtils.addAll(new Number[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});
        try{ assertEquals(2,n.length);                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(Number.class,n.getClass().getComponentType());                                         /***** ORIGINAL ASSERTION IS HERE *****/
        try {
            // Invalid - can't store Long in Integer array
               n = ArrayUtils.addAll(new Integer[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});
               try{ fail("Should have generated IllegalArgumentException");                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        } catch (IllegalArgumentException expected) {
        }
    }     public void testJira567$catena_2(){
        Number[] n;
        // Valid array construction
        n = ArrayUtils.addAll(new Number[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});
        try{ assertEquals(2,n.length);                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(Number.class,n.getClass().getComponentType());                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try {
            // Invalid - can't store Long in Integer array
               n = ArrayUtils.addAll(new Integer[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});
               fail("Should have generated IllegalArgumentException");                                      /***** ORIGINAL ASSERTION IS HERE *****/
        } catch (IllegalArgumentException expected) {
        }
    }
trace file: src/test/org/apache/commons/lang3/ArrayUtilsAddTest.java
new test num: 3
ori test num: 0
pattern: 000
patches are written to file
running tests...
used time: Finished in 34.39 seconds
Failing tests: 3
	org.apache.commons.lang3.ArrayUtilsAddTest::testJira567$catena_0
	org.apache.commons.lang3.ArrayUtilsAddTest::testJira567$catena_1
	org.apache.commons.lang3.ArrayUtilsAddTest::testJira567$catena_2
pattern: 001
try to fix hunk: 2
insert before 2964 with             final Class<?> type2 = array2.getClass().getComponentType();
            if (!type1.isAssignableFrom(type2)){
                throw new IllegalArgumentException("Cannot store "+type2.getName()+" in an array of "+type1.getName());
            }
            throw ase; // No, so rethrow original
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 010
try to fix hunk: 1
insert before 2963 with         } catch (ArrayStoreException ase) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 100
try to fix hunk: 0
insert before 2962 with         try {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 011
try to fix hunk: 1
insert before 2963 with         } catch (ArrayStoreException ase) {

try to fix hunk: 2
insert before 2964 with             final Class<?> type2 = array2.getClass().getComponentType();
            if (!type1.isAssignableFrom(type2)){
                throw new IllegalArgumentException("Cannot store "+type2.getName()+" in an array of "+type1.getName());
            }
            throw ase; // No, so rethrow original
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 101
try to fix hunk: 0
insert before 2962 with         try {

try to fix hunk: 2
insert before 2964 with             final Class<?> type2 = array2.getClass().getComponentType();
            if (!type1.isAssignableFrom(type2)){
                throw new IllegalArgumentException("Cannot store "+type2.getName()+" in an array of "+type1.getName());
            }
            throw ase; // No, so rethrow original
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 110
try to fix hunk: 0
insert before 2962 with         try {

try to fix hunk: 1
insert before 2963 with         } catch (ArrayStoreException ase) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 111
try to fix hunk: 0
insert before 2962 with         try {

try to fix hunk: 1
insert before 2963 with         } catch (ArrayStoreException ase) {

try to fix hunk: 2
insert before 2964 with             final Class<?> type2 = array2.getClass().getComponentType();
            if (!type1.isAssignableFrom(type2)){
                throw new IllegalArgumentException("Cannot store "+type2.getName()+" in an array of "+type1.getName());
            }
            throw ase; // No, so rethrow original
        }

patches are written to file
running tests...
used time: Finished in 18.71 seconds
Failing tests: 0
Can independently fix ['org.apache.commons.lang3.ArrayUtilsAddTest::testJira567$catena_1', 'org.apache.commons.lang3.ArrayUtilsAddTest::testJira567$catena_0', 'org.apache.commons.lang3.ArrayUtilsAddTest::testJira567$catena_2']
select new bug
Pattern: 111
failing tests: org.apache.commons.lang3.ArrayUtilsAddTest::testJira567$catena_1@org.apache.commons.lang3.ArrayUtilsAddTest::testJira567$catena_0@org.apache.commons.lang3.ArrayUtilsAddTest::testJira567$catena_2
Find 1 new bugs
