---
Begin generate bug_id: Math_88
num_of_hunks: 4
use working dir: ./working/data/Math_88
Try to checkout Math_88
build dir: ['./working/data/Math_88/target/classes', './working/data/Math_88/target/test-classes']
init FileManager
trace file: src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
trace file: src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
trace file: src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
trace file: src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
trying to replace old failing tests
edit: replace from 34 range 16 at src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
to
    @Test
    public void testMath272$catena_0() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
        
        assertEquals(0.0, solution.getPoint()[0], .0000001);                                                /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(1.0, solution.getPoint()[1], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.0, solution.getPoint()[2], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3.0, solution.getValue(), .0000001);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
      }     @Test
    public void testMath272$catena_1() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
        
        try{ assertEquals(0.0, solution.getPoint()[0], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(1.0, solution.getPoint()[1], .0000001);                                                /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(1.0, solution.getPoint()[2], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3.0, solution.getValue(), .0000001);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
      }     @Test
    public void testMath272$catena_2() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
        
        try{ assertEquals(0.0, solution.getPoint()[0], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.0, solution.getPoint()[1], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(1.0, solution.getPoint()[2], .0000001);                                                /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(3.0, solution.getValue(), .0000001);                                              }catch(Throwable __SHOULD_BE_IGNORED){}
      }     @Test
    public void testMath272$catena_3() throws OptimizationException {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
        
        try{ assertEquals(0.0, solution.getPoint()[0], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.0, solution.getPoint()[1], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.0, solution.getPoint()[2], .0000001);                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(3.0, solution.getValue(), .0000001);                                                   /***** ORIGINAL ASSERTION IS HERE *****/
      }
trace file: src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
new test num: 4
ori test num: 0
pattern: 0000
patches are written to file
running tests...
used time: Finished in 34.95 seconds
Failing tests: 2
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath272$catena_2
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath272$catena_3
pattern: 0001
try to fix hunk: 3
delete from 336 with range 6
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 0010
try to fix hunk: 2
insert before 333 with                 coefficients[i] = 0;
            } else {
                basicRows.add(basicRow);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 0100
try to fix hunk: 1
insert before 331 with             if (basicRows.contains(basicRow)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 1000
try to fix hunk: 0
insert before 329 with         Set<Integer> basicRows = new HashSet<Integer>();

patches are written to file
running tests...
used time: Finished in 23.10 seconds
Failing tests: 2
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath272$catena_2
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath272$catena_3
No new failing tests but only 1 hunk
pattern: 0011
try to fix hunk: 2
insert before 333 with                 coefficients[i] = 0;
            } else {
                basicRows.add(basicRow);

try to fix hunk: 3
delete from 336 with range 6
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 0101
try to fix hunk: 1
insert before 331 with             if (basicRows.contains(basicRow)) {

try to fix hunk: 3
delete from 336 with range 6
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 0110
try to fix hunk: 1
insert before 331 with             if (basicRows.contains(basicRow)) {

try to fix hunk: 2
insert before 333 with                 coefficients[i] = 0;
            } else {
                basicRows.add(basicRow);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 1001
try to fix hunk: 0
insert before 329 with         Set<Integer> basicRows = new HashSet<Integer>();

try to fix hunk: 3
delete from 336 with range 6
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 1010
try to fix hunk: 0
insert before 329 with         Set<Integer> basicRows = new HashSet<Integer>();

try to fix hunk: 2
insert before 333 with                 coefficients[i] = 0;
            } else {
                basicRows.add(basicRow);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 1100
try to fix hunk: 0
insert before 329 with         Set<Integer> basicRows = new HashSet<Integer>();

try to fix hunk: 1
insert before 331 with             if (basicRows.contains(basicRow)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 0111
try to fix hunk: 1
insert before 331 with             if (basicRows.contains(basicRow)) {

try to fix hunk: 2
insert before 333 with                 coefficients[i] = 0;
            } else {
                basicRows.add(basicRow);

try to fix hunk: 3
delete from 336 with range 6
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 1011
try to fix hunk: 0
insert before 329 with         Set<Integer> basicRows = new HashSet<Integer>();

try to fix hunk: 2
insert before 333 with                 coefficients[i] = 0;
            } else {
                basicRows.add(basicRow);

try to fix hunk: 3
delete from 336 with range 6
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 1101
try to fix hunk: 0
insert before 329 with         Set<Integer> basicRows = new HashSet<Integer>();

try to fix hunk: 1
insert before 331 with             if (basicRows.contains(basicRow)) {

try to fix hunk: 3
delete from 336 with range 6
patches are written to file
running tests...
used time: Finished in 23.07 seconds
Failing tests: 10
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testRestrictVariablesToNonNegative
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testEpsilon
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testSimplexSolver
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testModelWithNoArtificialVars
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testMinimization
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath272$catena_1
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath272$catena_2
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath272$catena_3
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testLargeModel
	org.apache.commons.math.optimization.linear.SimplexSolverTest::testSolutionWithNegativeDecisionVariable
Includes new failing tests, set to unusable
pattern: 1110
try to fix hunk: 0
insert before 329 with         Set<Integer> basicRows = new HashSet<Integer>();

try to fix hunk: 1
insert before 331 with             if (basicRows.contains(basicRow)) {

try to fix hunk: 2
insert before 333 with                 coefficients[i] = 0;
            } else {
                basicRows.add(basicRow);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 1111
try to fix hunk: 0
insert before 329 with         Set<Integer> basicRows = new HashSet<Integer>();

try to fix hunk: 1
insert before 331 with             if (basicRows.contains(basicRow)) {

try to fix hunk: 2
insert before 333 with                 coefficients[i] = 0;
            } else {
                basicRows.add(basicRow);

try to fix hunk: 3
delete from 336 with range 6
patches are written to file
running tests...
used time: Finished in 21.38 seconds
Failing tests: 0
Can independently fix ['org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath272$catena_2', 'org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath272$catena_3']
select new bug
Pattern: 1111
failing tests: org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath272$catena_2@org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath272$catena_3
Find 1 new bugs
