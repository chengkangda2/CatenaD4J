{
    "original": {
        "num_of_hunks": 6,
        "0": {
            "file_name": "source/org/jfree/data/DefaultKeyedValues.java",
            "from_line_no": 318,
            "to_line_no": 318,
            "replaced": "        if (index < this.keys.size()) {\n",
            "patch_type": "delete",
            "next_line_no": 319
        },
        "1": {
            "file_name": "source/org/jfree/data/DefaultKeyedValues.java",
            "from_line_no": 320,
            "to_line_no": 320,
            "replaced": "        }\n",
            "patch_type": "delete",
            "next_line_no": 321
        },
        "2": {
            "file_name": "source/org/jfree/data/DefaultKeyedValues.java",
            "from_line_no": 335,
            "to_line_no": 335,
            "replaced_with": "            throw new UnknownKeyException(\"The key (\" + key \n                    + \") is not recognised.\");\n",
            "replaced": "\t\t\treturn;\n",
            "patch_type": "replace",
            "next_line_no": 336
        },
        "3": {
            "file_name": "source/org/jfree/data/DefaultKeyedValues2D.java",
            "replaced_with": "    \tif (columnKey == null) {\n    \t\tthrow new IllegalArgumentException(\"Null 'columnKey' argument.\");\n    \t}\n    \tif (!this.columnKeys.contains(columnKey)) {\n    \t\tthrow new UnknownKeyException(\"Unknown key: \" + columnKey);\n    \t}\n",
            "patch_type": "insert",
            "next_line_no": 455
        },
        "4": {
            "file_name": "source/org/jfree/data/DefaultKeyedValues2D.java",
            "replaced_with": "            int index = rowData.getIndex(columnKey);\n            if (index >= 0) {\n",
            "patch_type": "insert",
            "next_line_no": 458
        },
        "5": {
            "file_name": "source/org/jfree/data/DefaultKeyedValues2D.java",
            "replaced_with": "            }\n",
            "patch_type": "insert",
            "next_line_no": 459
        }
    },
    "method": {
        "failing_tests": [
            "org.jfree.data.category.junit.DefaultCategoryDatasetTests::testBug1835955",
            "org.jfree.data.junit.DefaultKeyedValues2DTests::testRemoveColumnByKey",
            "org.jfree.data.junit.DefaultKeyedValuesTests::testRemoveValue",
            "org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2"
        ],
        "org.jfree.data.category.junit.DefaultCategoryDatasetTests::testBug1835955": {
            "file_path": "tests/org/jfree/data/category/junit/DefaultCategoryDatasetTests.java",
            "Instance": "Begin: Pos(345, 12)\nEnd: Pos(352, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Chart_18/tests//org/jfree/data/category/junit/DefaultCategoryDatasetTests.java\nName: testBug1835955\nChilds: [StatementAssertion<Begin: Pos(351, 6), End: Pos(351, 70)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Chart_18/tests//org/jfree/data/category/junit/DefaultCategoryDatasetTests.java",
            "name": "testBug1835955",
            "begin": "Pos(345, 12)",
            "end": "Pos(352, 5)",
            "begin_line_no": 345,
            "end_line_no": 352,
            "child": [
                "Begin: Pos(351, 6)\nEnd: Pos(351, 70)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [],
            "func": {}
        },
        "org.jfree.data.junit.DefaultKeyedValues2DTests::testRemoveColumnByKey": {
            "file_path": "tests/org/jfree/data/junit/DefaultKeyedValues2DTests.java",
            "Instance": "Begin: Pos(349, 12)\nEnd: Pos(366, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Chart_18/tests//org/jfree/data/junit/DefaultKeyedValues2DTests.java\nName: testRemoveColumnByKey\nChilds: [StatementAssertion<Begin: Pos(355, 6), End: Pos(355, 70)>,\nStatementAssertion<Begin: Pos(365, 6), End: Pos(365, 22)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Chart_18/tests//org/jfree/data/junit/DefaultKeyedValues2DTests.java",
            "name": "testRemoveColumnByKey",
            "begin": "Pos(349, 12)",
            "end": "Pos(366, 5)",
            "begin_line_no": 349,
            "end_line_no": 366,
            "child": [
                "Begin: Pos(355, 6)\nEnd: Pos(355, 70)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(365, 6)\nEnd: Pos(365, 22)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    public void testRemoveColumnByKey$catena_0() {\n    \tDefaultKeyedValues2D d = new DefaultKeyedValues2D();\n    \td.addValue(new Double(1.0), \"R1\", \"C1\");\n    \td.addValue(new Double(2.0), \"R2\", \"C2\");\n    \td.removeColumn(\"C2\");\n    \td.addValue(new Double(3.0), \"R2\", \"C2\");\n    \tassertEquals(3.0, d.getValue(\"R2\", \"C2\").doubleValue(), EPSILON);                                      /***** ORIGINAL ASSERTION IS HERE *****/\n    \t\n    \t// check for unknown column\n    \tboolean pass = false;\n    \ttry {\n    \t\td.removeColumn(\"XXX\");\n    \t}\n    \tcatch (UnknownKeyException e) {\n    \t\tpass = true;\n    \t}\n    \ttry{ assertTrue(pass);                                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testRemoveColumnByKey$catena_1() {\n    \tDefaultKeyedValues2D d = new DefaultKeyedValues2D();\n    \td.addValue(new Double(1.0), \"R1\", \"C1\");\n    \td.addValue(new Double(2.0), \"R2\", \"C2\");\n    \td.removeColumn(\"C2\");\n    \td.addValue(new Double(3.0), \"R2\", \"C2\");\n    \ttry{ assertEquals(3.0, d.getValue(\"R2\", \"C2\").doubleValue(), EPSILON);                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n    \t\n    \t// check for unknown column\n    \tboolean pass = false;\n    \ttry {\n    \t\td.removeColumn(\"XXX\");\n    \t}\n    \tcatch (UnknownKeyException e) {\n    \t\tpass = true;\n    \t}\n    \tassertTrue(pass);                                                                                      /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            ],
            "func": {
                "0": "    public void testRemoveColumnByKey$catena_0() {\n    \tDefaultKeyedValues2D d = new DefaultKeyedValues2D();\n    \td.addValue(new Double(1.0), \"R1\", \"C1\");\n    \td.addValue(new Double(2.0), \"R2\", \"C2\");\n    \td.removeColumn(\"C2\");\n    \td.addValue(new Double(3.0), \"R2\", \"C2\");\n    \tassertEquals(3.0, d.getValue(\"R2\", \"C2\").doubleValue(), EPSILON);                                      /***** ORIGINAL ASSERTION IS HERE *****/\n    \t\n    \t// check for unknown column\n    \tboolean pass = false;\n    \ttry {\n    \t\td.removeColumn(\"XXX\");\n    \t}\n    \tcatch (UnknownKeyException e) {\n    \t\tpass = true;\n    \t}\n    \ttry{ assertTrue(pass);                                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "1": "    public void testRemoveColumnByKey$catena_1() {\n    \tDefaultKeyedValues2D d = new DefaultKeyedValues2D();\n    \td.addValue(new Double(1.0), \"R1\", \"C1\");\n    \td.addValue(new Double(2.0), \"R2\", \"C2\");\n    \td.removeColumn(\"C2\");\n    \td.addValue(new Double(3.0), \"R2\", \"C2\");\n    \ttry{ assertEquals(3.0, d.getValue(\"R2\", \"C2\").doubleValue(), EPSILON);                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n    \t\n    \t// check for unknown column\n    \tboolean pass = false;\n    \ttry {\n    \t\td.removeColumn(\"XXX\");\n    \t}\n    \tcatch (UnknownKeyException e) {\n    \t\tpass = true;\n    \t}\n    \tassertTrue(pass);                                                                                      /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            }
        },
        "org.jfree.data.junit.DefaultKeyedValuesTests::testRemoveValue": {
            "file_path": "tests/org/jfree/data/junit/DefaultKeyedValuesTests.java",
            "Instance": "Begin: Pos(355, 12)\nEnd: Pos(373, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Chart_18/tests//org/jfree/data/junit/DefaultKeyedValuesTests.java\nName: testRemoveValue\nChilds: [StatementAssertion<Begin: Pos(361, 9), End: Pos(361, 44)>,\nStatementAssertion<Begin: Pos(363, 9), End: Pos(363, 45)>,\nStatementAssertion<Begin: Pos(372, 9), End: Pos(372, 25)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Chart_18/tests//org/jfree/data/junit/DefaultKeyedValuesTests.java",
            "name": "testRemoveValue",
            "begin": "Pos(355, 12)",
            "end": "Pos(373, 5)",
            "begin_line_no": 355,
            "end_line_no": 373,
            "child": [
                "Begin: Pos(361, 9)\nEnd: Pos(361, 44)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(363, 9)\nEnd: Pos(363, 45)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(372, 9)\nEnd: Pos(372, 25)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    public void testRemoveValue$catena_0() {\n        DefaultKeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"A\", new Double(1.0));\n        data.addValue(\"B\", null);\n        data.addValue(\"C\", new Double(3.0));\n        data.addValue(\"D\", new Double(2.0));\n        assertEquals(1, data.getIndex(\"B\"));                                                                /***** ORIGINAL ASSERTION IS HERE *****/\n        data.removeValue(\"B\");\n        try{ assertEquals(-1, data.getIndex(\"B\"));                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        boolean pass = false;\n        try {\n            data.removeValue(\"XXX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;   \n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testRemoveValue$catena_1() {\n        DefaultKeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"A\", new Double(1.0));\n        data.addValue(\"B\", null);\n        data.addValue(\"C\", new Double(3.0));\n        data.addValue(\"D\", new Double(2.0));\n        try{ assertEquals(1, data.getIndex(\"B\"));                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        data.removeValue(\"B\");\n        assertEquals(-1, data.getIndex(\"B\"));                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n        \n        boolean pass = false;\n        try {\n            data.removeValue(\"XXX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;   \n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testRemoveValue$catena_2() {\n        DefaultKeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"A\", new Double(1.0));\n        data.addValue(\"B\", null);\n        data.addValue(\"C\", new Double(3.0));\n        data.addValue(\"D\", new Double(2.0));\n        try{ assertEquals(1, data.getIndex(\"B\"));                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        data.removeValue(\"B\");\n        try{ assertEquals(-1, data.getIndex(\"B\"));                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        boolean pass = false;\n        try {\n            data.removeValue(\"XXX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;   \n        }\n        assertTrue(pass);                                                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            ],
            "func": {
                "0": "    public void testRemoveValue$catena_0() {\n        DefaultKeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"A\", new Double(1.0));\n        data.addValue(\"B\", null);\n        data.addValue(\"C\", new Double(3.0));\n        data.addValue(\"D\", new Double(2.0));\n        assertEquals(1, data.getIndex(\"B\"));                                                                /***** ORIGINAL ASSERTION IS HERE *****/\n        data.removeValue(\"B\");\n        try{ assertEquals(-1, data.getIndex(\"B\"));                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        boolean pass = false;\n        try {\n            data.removeValue(\"XXX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;   \n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "1": "    public void testRemoveValue$catena_1() {\n        DefaultKeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"A\", new Double(1.0));\n        data.addValue(\"B\", null);\n        data.addValue(\"C\", new Double(3.0));\n        data.addValue(\"D\", new Double(2.0));\n        try{ assertEquals(1, data.getIndex(\"B\"));                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        data.removeValue(\"B\");\n        assertEquals(-1, data.getIndex(\"B\"));                                                               /***** ORIGINAL ASSERTION IS HERE *****/\n        \n        boolean pass = false;\n        try {\n            data.removeValue(\"XXX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;   \n        }\n        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "2": "    public void testRemoveValue$catena_2() {\n        DefaultKeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"A\", new Double(1.0));\n        data.addValue(\"B\", null);\n        data.addValue(\"C\", new Double(3.0));\n        data.addValue(\"D\", new Double(2.0));\n        try{ assertEquals(1, data.getIndex(\"B\"));                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        data.removeValue(\"B\");\n        try{ assertEquals(-1, data.getIndex(\"B\"));                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        boolean pass = false;\n        try {\n            data.removeValue(\"XXX\");\n        }\n        catch (UnknownKeyException e) {\n            pass = true;   \n        }\n        assertTrue(pass);                                                                                   /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            }
        },
        "org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2": {
            "file_path": "tests/org/jfree/data/junit/DefaultKeyedValuesTests.java",
            "Instance": "Begin: Pos(238, 12)\nEnd: Pos(245, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Chart_18/tests//org/jfree/data/junit/DefaultKeyedValuesTests.java\nName: testGetIndex2\nChilds: [StatementAssertion<Begin: Pos(240, 6), End: Pos(240, 40)>,\nStatementAssertion<Begin: Pos(242, 6), End: Pos(242, 39)>,\nStatementAssertion<Begin: Pos(244, 6), End: Pos(244, 40)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Chart_18/tests//org/jfree/data/junit/DefaultKeyedValuesTests.java",
            "name": "testGetIndex2",
            "begin": "Pos(238, 12)",
            "end": "Pos(245, 5)",
            "begin_line_no": 238,
            "end_line_no": 245,
            "child": [
                "Begin: Pos(240, 6)\nEnd: Pos(240, 40)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(242, 6)\nEnd: Pos(242, 39)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(244, 6)\nEnd: Pos(244, 40)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    public void testGetIndex2$catena_0() {\n    \tDefaultKeyedValues v = new DefaultKeyedValues();\n    \tassertEquals(-1, v.getIndex(\"K1\"));                                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n    \tv.addValue(\"K1\", 1.0);\n    \ttry{ assertEquals(0, v.getIndex(\"K1\"));                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    \tv.removeValue(\"K1\");\n    \ttry{ assertEquals(-1, v.getIndex(\"K1\"));                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetIndex2$catena_1() {\n    \tDefaultKeyedValues v = new DefaultKeyedValues();\n    \ttry{ assertEquals(-1, v.getIndex(\"K1\"));                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    \tv.addValue(\"K1\", 1.0);\n    \tassertEquals(0, v.getIndex(\"K1\"));                                                                     /***** ORIGINAL ASSERTION IS HERE *****/\n    \tv.removeValue(\"K1\");\n    \ttry{ assertEquals(-1, v.getIndex(\"K1\"));                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetIndex2$catena_2() {\n    \tDefaultKeyedValues v = new DefaultKeyedValues();\n    \ttry{ assertEquals(-1, v.getIndex(\"K1\"));                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    \tv.addValue(\"K1\", 1.0);\n    \ttry{ assertEquals(0, v.getIndex(\"K1\"));                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    \tv.removeValue(\"K1\");\n    \tassertEquals(-1, v.getIndex(\"K1\"));                                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            ],
            "func": {
                "0": "    public void testGetIndex2$catena_0() {\n    \tDefaultKeyedValues v = new DefaultKeyedValues();\n    \tassertEquals(-1, v.getIndex(\"K1\"));                                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n    \tv.addValue(\"K1\", 1.0);\n    \ttry{ assertEquals(0, v.getIndex(\"K1\"));                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    \tv.removeValue(\"K1\");\n    \ttry{ assertEquals(-1, v.getIndex(\"K1\"));                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "1": "    public void testGetIndex2$catena_1() {\n    \tDefaultKeyedValues v = new DefaultKeyedValues();\n    \ttry{ assertEquals(-1, v.getIndex(\"K1\"));                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    \tv.addValue(\"K1\", 1.0);\n    \tassertEquals(0, v.getIndex(\"K1\"));                                                                     /***** ORIGINAL ASSERTION IS HERE *****/\n    \tv.removeValue(\"K1\");\n    \ttry{ assertEquals(-1, v.getIndex(\"K1\"));                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "2": "    public void testGetIndex2$catena_2() {\n    \tDefaultKeyedValues v = new DefaultKeyedValues();\n    \ttry{ assertEquals(-1, v.getIndex(\"K1\"));                                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    \tv.addValue(\"K1\", 1.0);\n    \ttry{ assertEquals(0, v.getIndex(\"K1\"));                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    \tv.removeValue(\"K1\");\n    \tassertEquals(-1, v.getIndex(\"K1\"));                                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            }
        }
    },
    "001000": {
        "failing_tests": [
            "org.jfree.data.junit.DefaultKeyedValuesTests::testRemoveValue$catena_2"
        ]
    },
    "110000": {
        "failing_tests": [
            "org.jfree.data.junit.DefaultKeyedValues2DTests::testRemoveColumnByKey$catena_0",
            "org.jfree.data.category.junit.DefaultCategoryDatasetTests::testBug1835955",
            "org.jfree.data.junit.DefaultKeyedValuesTests::testGetIndex2$catena_2"
        ]
    },
    "110100": {
        "failing_tests": [
            "org.jfree.data.junit.DefaultKeyedValues2DTests::testRemoveColumnByKey$catena_1"
        ]
    }
}