{
    "original": {
        "num_of_hunks": 2,
        "0": {
            "file_name": "source/org/jfree/data/time/TimePeriodValues.java",
            "from_line_no": 300,
            "to_line_no": 300,
            "replaced_with": "            long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart()\n",
            "replaced": "            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()\n",
            "patch_type": "replace",
            "next_line_no": 301
        },
        "1": {
            "file_name": "source/org/jfree/data/time/TimePeriodValues.java",
            "from_line_no": 302,
            "to_line_no": 302,
            "replaced_with": "            long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd()\n",
            "replaced": "            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()\n",
            "patch_type": "replace",
            "next_line_no": 303
        }
    },
    "method": {
        "failing_tests": [
            "org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex"
        ],
        "org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex": {
            "file_path": "tests/org/jfree/data/time/junit/TimePeriodValuesTests.java",
            "Instance": "Begin: Pos(367, 12)\nEnd: Pos(378, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Chart_7/tests//org/jfree/data/time/junit/TimePeriodValuesTests.java\nName: testGetMaxMiddleIndex\nChilds: [StatementAssertion<Begin: Pos(369, 9), End: Pos(369, 48)>,\nStatementAssertion<Begin: Pos(371, 9), End: Pos(371, 47)>,\nStatementAssertion<Begin: Pos(373, 9), End: Pos(373, 47)>,\nStatementAssertion<Begin: Pos(375, 9), End: Pos(375, 47)>,\nStatementAssertion<Begin: Pos(377, 9), End: Pos(377, 47)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Chart_7/tests//org/jfree/data/time/junit/TimePeriodValuesTests.java",
            "name": "testGetMaxMiddleIndex",
            "begin": "Pos(367, 12)",
            "end": "Pos(378, 5)",
            "begin_line_no": 367,
            "end_line_no": 378,
            "child": [
                "Begin: Pos(369, 9)\nEnd: Pos(369, 48)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(371, 9)\nEnd: Pos(371, 47)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(373, 9)\nEnd: Pos(373, 47)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(375, 9)\nEnd: Pos(375, 47)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(377, 9)\nEnd: Pos(377, 47)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    public void testGetMaxMiddleIndex$catena_0() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        assertEquals(-1, s.getMaxMiddleIndex());                                                            /***** ORIGINAL ASSERTION IS HERE *****/\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        try{ assertEquals(0, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(150L, 200L), 4.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetMaxMiddleIndex$catena_1() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        try{ assertEquals(-1, s.getMaxMiddleIndex());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        assertEquals(0, s.getMaxMiddleIndex());                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(150L, 200L), 4.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetMaxMiddleIndex$catena_2() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        try{ assertEquals(-1, s.getMaxMiddleIndex());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        try{ assertEquals(0, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        assertEquals(1, s.getMaxMiddleIndex());                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(150L, 200L), 4.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetMaxMiddleIndex$catena_3() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        try{ assertEquals(-1, s.getMaxMiddleIndex());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        try{ assertEquals(0, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        assertEquals(1, s.getMaxMiddleIndex());                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        s.add(new SimpleTimePeriod(150L, 200L), 4.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testGetMaxMiddleIndex$catena_4() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        try{ assertEquals(-1, s.getMaxMiddleIndex());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        try{ assertEquals(0, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(150L, 200L), 4.0);\n        assertEquals(1, s.getMaxMiddleIndex());                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            ],
            "func": {
                "0": "    public void testGetMaxMiddleIndex$catena_0() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        assertEquals(-1, s.getMaxMiddleIndex());                                                            /***** ORIGINAL ASSERTION IS HERE *****/\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        try{ assertEquals(0, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(150L, 200L), 4.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "1": "    public void testGetMaxMiddleIndex$catena_1() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        try{ assertEquals(-1, s.getMaxMiddleIndex());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        assertEquals(0, s.getMaxMiddleIndex());                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(150L, 200L), 4.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "2": "    public void testGetMaxMiddleIndex$catena_2() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        try{ assertEquals(-1, s.getMaxMiddleIndex());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        try{ assertEquals(0, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        assertEquals(1, s.getMaxMiddleIndex());                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(150L, 200L), 4.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "3": "    public void testGetMaxMiddleIndex$catena_3() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        try{ assertEquals(-1, s.getMaxMiddleIndex());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        try{ assertEquals(0, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        assertEquals(1, s.getMaxMiddleIndex());                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        s.add(new SimpleTimePeriod(150L, 200L), 4.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "4": "    public void testGetMaxMiddleIndex$catena_4() {\n        TimePeriodValues s = new TimePeriodValues(\"Test\");\n        try{ assertEquals(-1, s.getMaxMiddleIndex());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(100L, 200L), 1.0);\n        try{ assertEquals(0, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(300L, 400L), 2.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(0L, 50L), 3.0);\n        try{ assertEquals(1, s.getMaxMiddleIndex());                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        s.add(new SimpleTimePeriod(150L, 200L), 4.0);\n        assertEquals(1, s.getMaxMiddleIndex());                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            }
        }
    }
}