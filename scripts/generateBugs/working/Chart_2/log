---
Begin generate bug_id: Chart_2
num_of_hunks: 8
timeout for running: 3600
use working dir: ./working/data/Chart_2
Try to checkout Chart_2
build dir: ['./working/data/Chart_2/build', './working/data/Chart_2/build-tests']
init FileManager
trace file: source/org/jfree/data/general/DatasetUtilities.java
trying to replace old failing tests
edit: replace from 1270 range 19 at tests/org/jfree/data/general/junit/DatasetUtilitiesTests.java
to
    public void testBug2849731_2$catena_0() {
        XYIntervalSeriesCollection d = new XYIntervalSeriesCollection();
        XYIntervalSeries s = new XYIntervalSeries("S1");
        s.add(1.0, Double.NaN, Double.NaN, Double.NaN, 1.5, Double.NaN);
        d.addSeries(s);
        Range r = DatasetUtilities.iterateDomainBounds(d);
        assertEquals(1.0, r.getLowerBound(), EPSILON);                                                      /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(1.0, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, 1.5, Double.NaN, Double.NaN, 1.5, Double.NaN);
        r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(1.0, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, Double.NaN, 0.5, Double.NaN, 1.5, Double.NaN);
        r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(0.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testBug2849731_2$catena_1() {
        XYIntervalSeriesCollection d = new XYIntervalSeriesCollection();
        XYIntervalSeries s = new XYIntervalSeries("S1");
        s.add(1.0, Double.NaN, Double.NaN, Double.NaN, 1.5, Double.NaN);
        d.addSeries(s);
        Range r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(1.0, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(1.0, r.getUpperBound(), EPSILON);                                                      /***** ORIGINAL ASSERTION IS HERE *****/

        s.add(1.0, 1.5, Double.NaN, Double.NaN, 1.5, Double.NaN);
        r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(1.0, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, Double.NaN, 0.5, Double.NaN, 1.5, Double.NaN);
        r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(0.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testBug2849731_2$catena_2() {
        XYIntervalSeriesCollection d = new XYIntervalSeriesCollection();
        XYIntervalSeries s = new XYIntervalSeries("S1");
        s.add(1.0, Double.NaN, Double.NaN, Double.NaN, 1.5, Double.NaN);
        d.addSeries(s);
        Range r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(1.0, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.0, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, 1.5, Double.NaN, Double.NaN, 1.5, Double.NaN);
        r = DatasetUtilities.iterateDomainBounds(d);
        assertEquals(1.0, r.getLowerBound(), EPSILON);                                                      /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, Double.NaN, 0.5, Double.NaN, 1.5, Double.NaN);
        r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(0.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testBug2849731_2$catena_3() {
        XYIntervalSeriesCollection d = new XYIntervalSeriesCollection();
        XYIntervalSeries s = new XYIntervalSeries("S1");
        s.add(1.0, Double.NaN, Double.NaN, Double.NaN, 1.5, Double.NaN);
        d.addSeries(s);
        Range r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(1.0, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.0, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, 1.5, Double.NaN, Double.NaN, 1.5, Double.NaN);
        r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(1.0, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(1.5, r.getUpperBound(), EPSILON);                                                      /***** ORIGINAL ASSERTION IS HERE *****/

        s.add(1.0, Double.NaN, 0.5, Double.NaN, 1.5, Double.NaN);
        r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(0.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testBug2849731_2$catena_4() {
        XYIntervalSeriesCollection d = new XYIntervalSeriesCollection();
        XYIntervalSeries s = new XYIntervalSeries("S1");
        s.add(1.0, Double.NaN, Double.NaN, Double.NaN, 1.5, Double.NaN);
        d.addSeries(s);
        Range r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(1.0, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.0, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, 1.5, Double.NaN, Double.NaN, 1.5, Double.NaN);
        r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(1.0, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, Double.NaN, 0.5, Double.NaN, 1.5, Double.NaN);
        r = DatasetUtilities.iterateDomainBounds(d);
        assertEquals(0.5, r.getLowerBound(), EPSILON);                                                      /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testBug2849731_2$catena_5() {
        XYIntervalSeriesCollection d = new XYIntervalSeriesCollection();
        XYIntervalSeries s = new XYIntervalSeries("S1");
        s.add(1.0, Double.NaN, Double.NaN, Double.NaN, 1.5, Double.NaN);
        d.addSeries(s);
        Range r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(1.0, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.0, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, 1.5, Double.NaN, Double.NaN, 1.5, Double.NaN);
        r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(1.0, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, Double.NaN, 0.5, Double.NaN, 1.5, Double.NaN);
        r = DatasetUtilities.iterateDomainBounds(d);
        try{ assertEquals(0.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(1.5, r.getUpperBound(), EPSILON);                                                      /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 1293 range 19 at tests/org/jfree/data/general/junit/DatasetUtilitiesTests.java
to
    public void testBug2849731_3$catena_0() {
        XYIntervalSeriesCollection d = new XYIntervalSeriesCollection();
        XYIntervalSeries s = new XYIntervalSeries("S1");
        s.add(1.0, Double.NaN, Double.NaN, 1.5, Double.NaN, Double.NaN);
        d.addSeries(s);
        Range r = DatasetUtilities.iterateRangeBounds(d);
        assertEquals(1.5, r.getLowerBound(), EPSILON);                                                      /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, 1.5, Double.NaN, Double.NaN, Double.NaN, 2.5);
        r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(2.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, Double.NaN, 0.5, Double.NaN, 3.5, Double.NaN);
        r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testBug2849731_3$catena_1() {
        XYIntervalSeriesCollection d = new XYIntervalSeriesCollection();
        XYIntervalSeries s = new XYIntervalSeries("S1");
        s.add(1.0, Double.NaN, Double.NaN, 1.5, Double.NaN, Double.NaN);
        d.addSeries(s);
        Range r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(1.5, r.getUpperBound(), EPSILON);                                                      /***** ORIGINAL ASSERTION IS HERE *****/

        s.add(1.0, 1.5, Double.NaN, Double.NaN, Double.NaN, 2.5);
        r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(2.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, Double.NaN, 0.5, Double.NaN, 3.5, Double.NaN);
        r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testBug2849731_3$catena_2() {
        XYIntervalSeriesCollection d = new XYIntervalSeriesCollection();
        XYIntervalSeries s = new XYIntervalSeries("S1");
        s.add(1.0, Double.NaN, Double.NaN, 1.5, Double.NaN, Double.NaN);
        d.addSeries(s);
        Range r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, 1.5, Double.NaN, Double.NaN, Double.NaN, 2.5);
        r = DatasetUtilities.iterateRangeBounds(d);
        assertEquals(1.5, r.getLowerBound(), EPSILON);                                                      /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(2.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, Double.NaN, 0.5, Double.NaN, 3.5, Double.NaN);
        r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testBug2849731_3$catena_3() {
        XYIntervalSeriesCollection d = new XYIntervalSeriesCollection();
        XYIntervalSeries s = new XYIntervalSeries("S1");
        s.add(1.0, Double.NaN, Double.NaN, 1.5, Double.NaN, Double.NaN);
        d.addSeries(s);
        Range r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, 1.5, Double.NaN, Double.NaN, Double.NaN, 2.5);
        r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(2.5, r.getUpperBound(), EPSILON);                                                      /***** ORIGINAL ASSERTION IS HERE *****/

        s.add(1.0, Double.NaN, 0.5, Double.NaN, 3.5, Double.NaN);
        r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(3.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testBug2849731_3$catena_4() {
        XYIntervalSeriesCollection d = new XYIntervalSeriesCollection();
        XYIntervalSeries s = new XYIntervalSeries("S1");
        s.add(1.0, Double.NaN, Double.NaN, 1.5, Double.NaN, Double.NaN);
        d.addSeries(s);
        Range r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, 1.5, Double.NaN, Double.NaN, Double.NaN, 2.5);
        r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(2.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, Double.NaN, 0.5, Double.NaN, 3.5, Double.NaN);
        r = DatasetUtilities.iterateRangeBounds(d);
        assertEquals(1.5, r.getLowerBound(), EPSILON);                                                      /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(3.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testBug2849731_3$catena_5() {
        XYIntervalSeriesCollection d = new XYIntervalSeriesCollection();
        XYIntervalSeries s = new XYIntervalSeries("S1");
        s.add(1.0, Double.NaN, Double.NaN, 1.5, Double.NaN, Double.NaN);
        d.addSeries(s);
        Range r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(1.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, 1.5, Double.NaN, Double.NaN, Double.NaN, 2.5);
        r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(2.5, r.getUpperBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}

        s.add(1.0, Double.NaN, 0.5, Double.NaN, 3.5, Double.NaN);
        r = DatasetUtilities.iterateRangeBounds(d);
        try{ assertEquals(1.5, r.getLowerBound(), EPSILON);                                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(3.5, r.getUpperBound(), EPSILON);                                                      /***** ORIGINAL ASSERTION IS HERE *****/
    }
trace file: tests/org/jfree/data/general/junit/DatasetUtilitiesTests.java
new test num: 12
ori test num: 0
pattern: 00000000
patches are written to file
running tests...
used time: Finished in 52.51 seconds
Failing tests: 12
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
processed: 00000000
pattern: 00000001
try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 30.83 seconds
Failing tests: 11
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
select new bug
Pattern: 00000001
new failing tests:
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
Save found bug
processed: 00000001
pattern: 00000010
try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 31.86 seconds
Failing tests: 11
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
select new bug
Pattern: 00000010
new failing tests:
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
Save found bug
processed: 00000010
pattern: 00000100
try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100
pattern: 00001000
try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
used time: Finished in 32.96 seconds
Failing tests: 12
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
No new failing tests but only 1 hunk
processed: 00001000
pattern: 00010000
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 30.69 seconds
Failing tests: 11
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
select new bug
Pattern: 00010000
new failing tests:
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Save found bug
processed: 00010000
pattern: 00100000
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 30.27 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
select new bug
Pattern: 00100000
new failing tests:
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
Save found bug
processed: 00100000
pattern: 01000000
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000
pattern: 10000000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

patches are written to file
running tests...
used time: Finished in 30.36 seconds
Failing tests: 12
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
No new failing tests but only 1 hunk
processed: 10000000
pattern: 00000011
try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 33.36 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00000011
pattern: 00000101
try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000101
pattern: 00000110
try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000110
pattern: 00001001
try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 30.79 seconds
Failing tests: 11
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00001001
pattern: 00001010
try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 32.20 seconds
Failing tests: 11
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00001010
pattern: 00001100
try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
used time: Finished in 32.57 seconds
Failing tests: 7
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix ['org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1', 'org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4', 'org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2', 'org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0', 'org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3']
select new bug
Pattern: 00001100
new failing tests:
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
Save found bug
processed: 00001100
pattern: 00010001
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 32.94 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00010001
pattern: 00010010
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 31.36 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00010010
pattern: 00010100
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100
pattern: 00011000
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
used time: Finished in 32.60 seconds
Failing tests: 11
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00011000
pattern: 00100001
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 33.44 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 00100001
pattern: 00100010
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 30.19 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 00100010
pattern: 00100100
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100
pattern: 00101000
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
used time: Finished in 32.96 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 00101000
pattern: 00110000
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 30.85 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 00110000
pattern: 01000001
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001
pattern: 01000010
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010
pattern: 01000100
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100
pattern: 01001000
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000
pattern: 01010000
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000
pattern: 01100000
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000
pattern: 10000001
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 28.28 seconds
Failing tests: 11
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10000001
pattern: 10000010
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 31.64 seconds
Failing tests: 11
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10000010
pattern: 10000100
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100
pattern: 10001000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
used time: Finished in 38.16 seconds
Failing tests: 12
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10001000
pattern: 10010000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 34.18 seconds
Failing tests: 11
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10010000
pattern: 10100000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 31.99 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 10100000
pattern: 11000000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
used time: Finished in 30.20 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix ['org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0', 'org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1', 'org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2']
select new bug
Pattern: 11000000
new failing tests:
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Save found bug
processed: 11000000
pattern: 00000111
try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000111
pattern: 00001011
try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 32.81 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00001011
pattern: 00001101
try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 35.20 seconds
Failing tests: 7
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00001101
pattern: 00001110
try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 33.04 seconds
Failing tests: 6
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00001110
pattern: 00010011
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 30.42 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00010011
pattern: 00010101
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010101
pattern: 00010110
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010110
pattern: 00011001
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 32.47 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00011001
pattern: 00011010
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 32.08 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00011010
pattern: 00011100
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
used time: Finished in 33.93 seconds
Failing tests: 6
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00011100
pattern: 00100011
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 35.57 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 00100011
pattern: 00100101
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100101
pattern: 00100110
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100110
pattern: 00101001
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 32.81 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 00101001
pattern: 00101010
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 35.53 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 00101010
pattern: 00101100
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
used time: Finished in 30.64 seconds
Failing tests: 5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 00101100
pattern: 00110001
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 33.23 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 00110001
pattern: 00110010
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 32.54 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 00110010
pattern: 00110100
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110100
pattern: 00111000
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
used time: Finished in 32.71 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 00111000
pattern: 01000011
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000011
pattern: 01000101
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000101
pattern: 01000110
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000110
pattern: 01001001
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001001
pattern: 01001010
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001010
pattern: 01001100
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001100
pattern: 01010001
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010001
pattern: 01010010
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010010
pattern: 01010100
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010100
pattern: 01011000
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01011000
pattern: 01100001
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100001
pattern: 01100010
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100010
pattern: 01100100
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100100
pattern: 01101000
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01101000
pattern: 01110000
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01110000
pattern: 10000011
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 31.93 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10000011
pattern: 10000101
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000101
pattern: 10000110
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000110
pattern: 10001001
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 36.90 seconds
Failing tests: 11
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10001001
pattern: 10001010
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 29.90 seconds
Failing tests: 11
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10001010
pattern: 10001100
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
used time: Finished in 33.58 seconds
Failing tests: 7
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10001100
pattern: 10010001
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 34.86 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10010001
pattern: 10010010
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 35.25 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10010010
pattern: 10010100
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010100
pattern: 10011000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
used time: Finished in 35.26 seconds
Failing tests: 11
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10011000
pattern: 10100001
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 33.44 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 10100001
pattern: 10100010
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 35.64 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 10100010
pattern: 10100100
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100100
pattern: 10101000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
used time: Finished in 35.64 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 10101000
pattern: 10110000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 34.24 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 10110000
pattern: 11000001
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 32.74 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 11000001
pattern: 11000010
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 38.91 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 11000010
pattern: 11000100
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000100
pattern: 11001000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
used time: Finished in 37.37 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 11001000
pattern: 11010000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 35.48 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 11010000
pattern: 11100000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 39.42 seconds
Failing tests: 7
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 11100000
pattern: 00001111
try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 40.84 seconds
Failing tests: 6
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00001111
pattern: 00010111
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010111
pattern: 00011011
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 44.01 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00011011
pattern: 00011101
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 38.72 seconds
Failing tests: 6
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00011101
pattern: 00011110
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 38.06 seconds
Failing tests: 5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00011110
pattern: 00100111
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100111
pattern: 00101011
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 36.38 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 00101011
pattern: 00101101
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 45.22 seconds
Failing tests: 5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 00101101
pattern: 00101110
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 37.60 seconds
Failing tests: 4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 00101110
pattern: 00110011
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 41.01 seconds
Failing tests: 7
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 00110011
pattern: 00110101
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110101
pattern: 00110110
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110110
pattern: 00111001
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 40.43 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 00111001
pattern: 00111010
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 38.70 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 00111010
pattern: 00111100
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
used time: Finished in 40.98 seconds
Failing tests: 4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 00111100
pattern: 01000111
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000111
pattern: 01001011
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001011
pattern: 01001101
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001101
pattern: 01001110
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001110
pattern: 01010011
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010011
pattern: 01010101
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010101
pattern: 01010110
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010110
pattern: 01011001
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01011001
pattern: 01011010
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01011010
pattern: 01011100
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01011100
pattern: 01100011
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100011
pattern: 01100101
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100101
pattern: 01100110
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100110
pattern: 01101001
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01101001
pattern: 01101010
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01101010
pattern: 01101100
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01101100
pattern: 01110001
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01110001
pattern: 01110010
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01110010
pattern: 01110100
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01110100
pattern: 01111000
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01111000
pattern: 10000111
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000111
pattern: 10001011
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 37.69 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10001011
pattern: 10001101
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 38.15 seconds
Failing tests: 7
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10001101
pattern: 10001110
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 46.05 seconds
Failing tests: 6
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10001110
pattern: 10010011
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 42.36 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10010011
pattern: 10010101
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010101
pattern: 10010110
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010110
pattern: 10011001
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 37.34 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10011001
pattern: 10011010
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 35.87 seconds
Failing tests: 10
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10011010
pattern: 10011100
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
used time: Finished in 38.76 seconds
Failing tests: 6
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 10011100
pattern: 10100011
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 37.43 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 10100011
pattern: 10100101
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100101
pattern: 10100110
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100110
pattern: 10101001
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 40.48 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 10101001
pattern: 10101010
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 41.87 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 10101010
pattern: 10101100
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
used time: Finished in 38.32 seconds
Failing tests: 5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 10101100
pattern: 10110001
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 35.04 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 10110001
pattern: 10110010
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 32.28 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 10110010
pattern: 10110100
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10110100
pattern: 10111000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
used time: Finished in 32.03 seconds
Failing tests: 9
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 10111000
pattern: 11000011
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 33.42 seconds
Failing tests: 7
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 11000011
pattern: 11000101
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000101
pattern: 11000110
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000110
pattern: 11001001
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 37.93 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 11001001
pattern: 11001010
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 38.72 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 11001010
pattern: 11001100
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
used time: Finished in 32.61 seconds
Failing tests: 4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 11001100
pattern: 11010001
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 32.66 seconds
Failing tests: 7
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 11010001
pattern: 11010010
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 36.45 seconds
Failing tests: 7
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 11010010
pattern: 11010100
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11010100
pattern: 11011000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
used time: Finished in 35.47 seconds
Failing tests: 8
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 11011000
pattern: 11100001
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 32.12 seconds
Failing tests: 6
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 11100001
pattern: 11100010
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 33.77 seconds
Failing tests: 6
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 11100010
pattern: 11100100
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11100100
pattern: 11101000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

patches are written to file
running tests...
used time: Finished in 33.68 seconds
Failing tests: 7
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 11101000
pattern: 11110000
try to fix hunk: 0
insert before 755 with                     double value = intervalXYData.getXValue(series, item);

try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 32.65 seconds
Failing tests: 6
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
Can independently fix []
Could not fix independently
processed: 11110000
pattern: 00011111
try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 38.06 seconds
Failing tests: 5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_5
Can independently fix []
Could not fix independently
processed: 00011111
pattern: 00101111
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 31.55 seconds
Failing tests: 4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_4
Can independently fix []
Could not fix independently
processed: 00101111
pattern: 00110111
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110111
pattern: 00111011
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 36.03 seconds
Failing tests: 7
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_2
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 00111011
pattern: 00111101
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
used time: Finished in 33.79 seconds
Failing tests: 4
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_3$catena_5
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 00111101
pattern: 00111110
try to fix hunk: 2
insert before 759 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 3
insert before 761 with                         minimum = Math.min(minimum, uvalue);

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

patches are written to file
running tests...
used time: Finished in 31.97 seconds
Failing tests: 3
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_0
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_1
	org.jfree.data.general.junit.DatasetUtilitiesTests::testBug2849731_2$catena_2
Can independently fix []
Could not fix independently
processed: 00111110
pattern: 01001111
try to fix hunk: 1
insert before 757 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 4
insert before 1242 with                     double value = ixyd.getYValue(series, item);

try to fix hunk: 5
insert before 1244 with                     if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }

try to fix hunk: 6
insert before 1246 with                         maximum = Math.max(maximum, lvalue);

try to fix hunk: 7
insert before 1248 with                         minimum = Math.min(minimum, uvalue);

patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

