---
Begin generate bug_id: Time_23
num_of_hunks: 8
timeout for running: 3600
use working dir: ./working/data/Time_23
clean up: ./working/data/Time_23
Try to checkout Time_23
build dir: ['build/classes', 'build/tests']
init FileManager
trace file: src/main/java/org/joda/time/DateTimeZone.java
trying to replace old failing tests
new test num: 0
ori test num: 1
pattern: 00000000
patches are written to file
running tests...
used time: Finished in 34.82 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
processed: 00000000
pattern: 00000001
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 33.62 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 00000001
pattern: 00000010
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 30.49 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 00000010
pattern: 00000100
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 33.38 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 00000100
pattern: 00001000
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 34.56 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 00001000
pattern: 00010000
try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 28.76 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 00010000
pattern: 00100000
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

patches are written to file
running tests...
used time: Finished in 31.11 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 00100000
pattern: 01000000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

patches are written to file
running tests...
used time: Finished in 30.70 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 01000000
pattern: 10000000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

patches are written to file
running tests...
used time: Finished in 35.26 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 10000000
pattern: 00000011
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 31.79 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00000011
pattern: 00000101
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 32.77 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00000101
pattern: 00000110
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 35.01 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00000110
pattern: 00001001
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 32.05 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001001
pattern: 00001010
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 27.67 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001010
pattern: 00001100
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 29.80 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001100
pattern: 00010001
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 31.54 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010001
pattern: 00010010
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 30.60 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010010
pattern: 00010100
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 33.35 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010100
pattern: 00011000
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 29.12 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011000
pattern: 00100001
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 30.93 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100001
pattern: 00100010
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 25.52 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100010
pattern: 00100100
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 24.47 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100100
pattern: 00101000
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 25.31 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101000
pattern: 00110000
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 17.34 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110000
pattern: 01000001
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 17.94 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000001
pattern: 01000010
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.38 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000010
pattern: 01000100
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 12.69 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000100
pattern: 01001000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 15.13 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01001000
pattern: 01010000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 11.75 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01010000
pattern: 01100000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

patches are written to file
running tests...
used time: Finished in 13.92 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01100000
pattern: 10000001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.51 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000001
pattern: 10000010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.70 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000010
pattern: 10000100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 14.61 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000100
pattern: 10001000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 11.79 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10001000
pattern: 10010000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 13.34 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10010000
pattern: 10100000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

patches are written to file
running tests...
used time: Finished in 14.82 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10100000
pattern: 11000000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

patches are written to file
running tests...
used time: Finished in 11.93 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11000000
pattern: 00000111
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.58 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00000111
pattern: 00001011
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.88 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001011
pattern: 00001101
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.77 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001101
pattern: 00001110
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.17 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001110
pattern: 00010011
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.44 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010011
pattern: 00010101
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.96 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010101
pattern: 00010110
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 11.49 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010110
pattern: 00011001
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.12 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011001
pattern: 00011010
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 11.34 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011010
pattern: 00011100
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 13.75 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011100
pattern: 00100011
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.98 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100011
pattern: 00100101
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 11.46 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100101
pattern: 00100110
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.57 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100110
pattern: 00101001
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.98 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101001
pattern: 00101010
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.93 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101010
pattern: 00101100
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 13.21 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101100
pattern: 00110001
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 11.99 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110001
pattern: 00110010
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 11.70 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110010
pattern: 00110100
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 13.15 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110100
pattern: 00111000
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 16.77 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00111000
pattern: 01000011
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 15.63 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000011
pattern: 01000101
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.24 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000101
pattern: 01000110
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.42 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000110
pattern: 01001001
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.63 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01001001
pattern: 01001010
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 11.82 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01001010
pattern: 01001100
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 15.03 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01001100
pattern: 01010001
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.73 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01010001
pattern: 01010010
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.78 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01010010
pattern: 01010100
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 12.12 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01010100
pattern: 01011000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 12.72 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01011000
pattern: 01100001
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.39 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01100001
pattern: 01100010
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.22 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01100010
pattern: 01100100
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 16.24 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01100100
pattern: 01101000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 12.23 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01101000
pattern: 01110000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 12.09 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01110000
pattern: 10000011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.33 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000011
pattern: 10000101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.85 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000101
pattern: 10000110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.60 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000110
pattern: 10001001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.77 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10001001
pattern: 10001010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 11.86 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10001010
pattern: 10001100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 12.43 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10001100
pattern: 10010001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.81 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10010001
pattern: 10010010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.43 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10010010
pattern: 10010100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 12.90 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10010100
pattern: 10011000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 14.98 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10011000
pattern: 10100001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 11.61 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10100001
pattern: 10100010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.01 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10100010
pattern: 10100100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 13.67 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10100100
pattern: 10101000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 11.92 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10101000
pattern: 10110000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 12.50 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10110000
pattern: 11000001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.88 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11000001
pattern: 11000010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.46 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11000010
pattern: 11000100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 12.44 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11000100
pattern: 11001000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 12.07 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11001000
pattern: 11010000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 12.05 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11010000
pattern: 11100000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

patches are written to file
running tests...
used time: Finished in 14.49 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11100000
pattern: 00001111
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 16.58 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001111
pattern: 00010111
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 16.02 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010111
pattern: 00011011
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.77 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011011
pattern: 00011101
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.72 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011101
pattern: 00011110
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 15.04 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011110
pattern: 00100111
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.19 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100111
pattern: 00101011
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 15.71 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101011
pattern: 00101101
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.20 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101101
pattern: 00101110
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.39 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101110
pattern: 00110011
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.07 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110011
pattern: 00110101
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.19 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110101
pattern: 00110110
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 15.09 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110110
pattern: 00111001
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.05 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00111001
pattern: 00111010
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.58 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00111010
pattern: 00111100
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 14.34 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00111100
pattern: 01000111
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 15.25 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000111
pattern: 01001011
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.68 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01001011
pattern: 01001101
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 11.86 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01001101
pattern: 01001110
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.29 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01001110
pattern: 01010011
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 11.52 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01010011
pattern: 01010101
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.48 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01010101
pattern: 01010110
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.37 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01010110
pattern: 01011001
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.13 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01011001
pattern: 01011010
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.17 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01011010
pattern: 01011100
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 14.77 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01011100
pattern: 01100011
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.58 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01100011
pattern: 01100101
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.41 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01100101
pattern: 01100110
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.81 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01100110
pattern: 01101001
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.43 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01101001
pattern: 01101010
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.18 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01101010
pattern: 01101100
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 16.83 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01101100
pattern: 01110001
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.99 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01110001
pattern: 01110010
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.13 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01110010
pattern: 01110100
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 12.88 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01110100
pattern: 01111000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 12.91 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01111000
pattern: 10000111
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.63 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000111
pattern: 10001011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.93 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10001011
pattern: 10001101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.96 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10001101
pattern: 10001110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 11.80 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10001110
pattern: 10010011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 15.56 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10010011
pattern: 10010101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.39 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10010101
pattern: 10010110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.02 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10010110
pattern: 10011001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.48 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10011001
pattern: 10011010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.19 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10011010
pattern: 10011100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 14.23 seconds
Failing tests: 0
Can independently fix ['org.joda.time.TestDateTimeZone::testForID_String_old']
select new bug
Pattern: 10011100
new failing tests:
org.joda.time.TestDateTimeZone::testForID_String_old
Save found bug
processed: 10011100
pattern: 10100011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.70 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10100011
pattern: 10100101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.96 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10100101
pattern: 10100110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.31 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10100110
pattern: 10101001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.42 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10101001
pattern: 10101010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.40 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10101010
pattern: 10101100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 12.38 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10101100
pattern: 10110001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.34 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10110001
pattern: 10110010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.90 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10110010
pattern: 10110100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 11.45 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10110100
pattern: 10111000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 13.89 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10111000
pattern: 11000011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.98 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11000011
pattern: 11000101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.18 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11000101
pattern: 11000110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.72 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11000110
pattern: 11001001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.51 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11001001
pattern: 11001010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.56 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11001010
pattern: 11001100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 14.84 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11001100
pattern: 11010001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 15.25 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11010001
pattern: 11010010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 15.95 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11010010
pattern: 11010100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 12.28 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11010100
pattern: 11011000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 12.65 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11011000
pattern: 11100001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.16 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11100001
pattern: 11100010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.64 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11100010
pattern: 11100100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 14.20 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11100100
pattern: 11101000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 13.81 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11101000
pattern: 11110000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 13.47 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11110000
pattern: 00011111
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 11.99 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011111
pattern: 00101111
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.38 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101111
pattern: 00110111
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.21 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110111
pattern: 00111011
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.75 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00111011
pattern: 00111101
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.66 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00111101
pattern: 00111110
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.42 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00111110
pattern: 01001111
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.07 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01001111
pattern: 01010111
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.11 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01010111
pattern: 01011011
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.54 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01011011
pattern: 01011101
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.16 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01011101
pattern: 01011110
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.42 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01011110
pattern: 01100111
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 15.53 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01100111
pattern: 01101011
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 15.01 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01101011
pattern: 01101101
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.10 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01101101
pattern: 01101110
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.35 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01101110
pattern: 01110011
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.07 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01110011
pattern: 01110101
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.56 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01110101
pattern: 01110110
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.23 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01110110
pattern: 01111001
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.75 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01111001
pattern: 01111010
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.37 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01111010
pattern: 01111100
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 12.84 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01111100
pattern: 10001111
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.33 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10001111
pattern: 10010111
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.57 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10010111
pattern: 10011011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.58 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10011011
pattern: 10011101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.33 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
processed: 10011101
pattern: 10011110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.73 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
processed: 10011110
pattern: 10100111
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.91 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10100111
pattern: 10101011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 11.61 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10101011
pattern: 10101101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.77 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10101101
pattern: 10101110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.08 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10101110
pattern: 10110011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.16 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10110011
pattern: 10110101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.79 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10110101
pattern: 10110110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.24 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10110110
pattern: 10111001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 11.66 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10111001
pattern: 10111010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.37 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10111010
pattern: 10111100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 14.15 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
processed: 10111100
pattern: 11000111
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.71 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11000111
pattern: 11001011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.29 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11001011
pattern: 11001101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.87 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11001101
pattern: 11001110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 11.89 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11001110
pattern: 11010011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 16.70 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11010011
pattern: 11010101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 16.95 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11010101
pattern: 11010110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.45 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11010110
pattern: 11011001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.32 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11011001
pattern: 11011010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 13.79 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11011010
pattern: 11011100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 13.45 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
processed: 11011100
pattern: 11100011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 16.00 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11100011
pattern: 11100101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.79 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11100101
pattern: 11100110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.15 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11100110
pattern: 11101001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.32 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11101001
pattern: 11101010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.82 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11101010
pattern: 11101100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 13.92 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11101100
pattern: 11110001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.38 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11110001
pattern: 11110010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 14.85 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11110010
pattern: 11110100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 14.02 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11110100
pattern: 11111000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 13.45 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11111000
pattern: 00111111
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.40 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00111111
pattern: 01011111
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.79 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01011111
pattern: 01101111
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.59 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01101111
pattern: 01110111
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.91 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01110111
pattern: 01111011
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 16.74 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01111011
pattern: 01111101
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.16 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01111101
pattern: 01111110
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.51 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01111110
pattern: 10011111
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.34 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
processed: 10011111
pattern: 10101111
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 11.99 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10101111
pattern: 10110111
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.28 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10110111
pattern: 10111011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 16.19 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10111011
pattern: 10111101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.45 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
processed: 10111101
pattern: 10111110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 12.31 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
processed: 10111110
pattern: 11001111
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 14.07 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11001111
pattern: 11010111
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 13.77 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11010111
pattern: 11011011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 12.37 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11011011
pattern: 11011101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

