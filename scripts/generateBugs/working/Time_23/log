---
Begin generate bug_id: Time_23
num_of_hunks: 8
timeout for running: 3600
use working dir: ./working/data/Time_23
Try to checkout Time_23
build dir: ['./working/data/Time_23/build/classes', './working/data/Time_23/build/tests']
init FileManager
trace file: src/main/java/org/joda/time/DateTimeZone.java
trying to replace old failing tests
new test num: 0
ori test num: 1
pattern: 00000000
patches are written to file
running tests...
used time: Finished in 45.10 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
processed: 00000000
pattern: 00000001
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 35.60 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 00000001
pattern: 00000010
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 35.82 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 00000010
pattern: 00000100
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 33.19 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 00000100
pattern: 00001000
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 33.48 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 00001000
pattern: 00010000
try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 33.70 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 00010000
pattern: 00100000
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

patches are written to file
running tests...
used time: Finished in 32.47 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 00100000
pattern: 01000000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

patches are written to file
running tests...
used time: Finished in 33.59 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 01000000
pattern: 10000000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

patches are written to file
running tests...
used time: Finished in 34.90 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
No new failing tests but only 1 hunk
processed: 10000000
pattern: 00000011
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 29.66 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00000011
pattern: 00000101
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 34.23 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00000101
pattern: 00000110
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 30.59 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00000110
pattern: 00001001
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 35.38 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001001
pattern: 00001010
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 30.54 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001010
pattern: 00001100
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 33.30 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001100
pattern: 00010001
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 30.79 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010001
pattern: 00010010
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 32.65 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010010
pattern: 00010100
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 32.90 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010100
pattern: 00011000
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 36.84 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011000
pattern: 00100001
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 32.24 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100001
pattern: 00100010
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 37.12 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100010
pattern: 00100100
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 30.48 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100100
pattern: 00101000
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 32.61 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101000
pattern: 00110000
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 34.16 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110000
pattern: 01000001
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 33.11 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000001
pattern: 01000010
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 32.94 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000010
pattern: 01000100
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 39.01 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000100
pattern: 01001000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 34.35 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01001000
pattern: 01010000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 34.87 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01010000
pattern: 01100000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

patches are written to file
running tests...
used time: Finished in 34.86 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01100000
pattern: 10000001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 34.92 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000001
pattern: 10000010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 31.28 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000010
pattern: 10000100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 39.27 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000100
pattern: 10001000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 32.80 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10001000
pattern: 10010000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 34.98 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10010000
pattern: 10100000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

patches are written to file
running tests...
used time: Finished in 33.46 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10100000
pattern: 11000000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

patches are written to file
running tests...
used time: Finished in 35.14 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11000000
pattern: 00000111
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 34.10 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00000111
pattern: 00001011
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 40.53 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001011
pattern: 00001101
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 35.45 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001101
pattern: 00001110
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 34.18 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001110
pattern: 00010011
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 32.63 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010011
pattern: 00010101
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 36.74 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010101
pattern: 00010110
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 33.07 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010110
pattern: 00011001
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 34.98 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011001
pattern: 00011010
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 32.72 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011010
pattern: 00011100
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 36.74 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011100
pattern: 00100011
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 38.18 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100011
pattern: 00100101
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 37.87 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100101
pattern: 00100110
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 32.06 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100110
pattern: 00101001
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 37.60 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101001
pattern: 00101010
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 35.20 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101010
pattern: 00101100
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 36.63 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101100
pattern: 00110001
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 36.47 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110001
pattern: 00110010
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 35.10 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110010
pattern: 00110100
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 38.79 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110100
pattern: 00111000
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 33.13 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00111000
pattern: 01000011
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 37.65 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000011
pattern: 01000101
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 38.89 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000101
pattern: 01000110
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 38.66 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01000110
pattern: 01001001
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 37.62 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01001001
pattern: 01001010
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 36.79 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01001010
pattern: 01001100
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 35.46 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01001100
pattern: 01010001
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 34.10 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01010001
pattern: 01010010
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 38.90 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01010010
pattern: 01010100
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 34.27 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01010100
pattern: 01011000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 33.13 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01011000
pattern: 01100001
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 35.92 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01100001
pattern: 01100010
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 34.43 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01100010
pattern: 01100100
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 34.50 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01100100
pattern: 01101000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 33.07 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01101000
pattern: 01110000
try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 33.41 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 01110000
pattern: 10000011
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 34.20 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000011
pattern: 10000101
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 35.10 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000101
pattern: 10000110
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 34.83 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10000110
pattern: 10001001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 31.00 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10001001
pattern: 10001010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 30.50 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10001010
pattern: 10001100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 34.19 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10001100
pattern: 10010001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 34.54 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10010001
pattern: 10010010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 32.50 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10010010
pattern: 10010100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 33.93 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10010100
pattern: 10011000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 34.19 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10011000
pattern: 10100001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 34.95 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10100001
pattern: 10100010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 31.80 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10100010
pattern: 10100100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 31.36 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10100100
pattern: 10101000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 33.66 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10101000
pattern: 10110000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 38.07 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 10110000
pattern: 11000001
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 34.60 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11000001
pattern: 11000010
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 30.67 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11000010
pattern: 11000100
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 5
delete from 583 with range 1
patches are written to file
running tests...
used time: Finished in 37.04 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11000100
pattern: 11001000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 4
delete from 581 with range 1
patches are written to file
running tests...
used time: Finished in 31.50 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11001000
pattern: 11010000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 3
delete from 577 with range 2
patches are written to file
running tests...
used time: Finished in 35.67 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11010000
pattern: 11100000
try to fix hunk: 0
insert before 564 with             map.put("WET", "WET");
            map.put("CET", "CET");
            map.put("MET", "CET");
            map.put("ECT", "CET");
            map.put("EET", "EET");

try to fix hunk: 1
replace from 572 with range 1 to
            map.put("IET", "America/Indiana/Indianapolis");

try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

patches are written to file
running tests...
used time: Finished in 35.89 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 11100000
pattern: 00001111
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 34.83 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00001111
pattern: 00010111
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 34.85 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00010111
pattern: 00011011
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 39.43 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011011
pattern: 00011101
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 35.77 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011101
pattern: 00011110
try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 37.50 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00011110
pattern: 00100111
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 35.83 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00100111
pattern: 00101011
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 36.41 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101011
pattern: 00101101
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 35.38 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101101
pattern: 00101110
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 4
delete from 581 with range 1
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

patches are written to file
running tests...
used time: Finished in 34.98 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00101110
pattern: 00110011
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 6
replace from 586 with range 1 to
            map.put("IST", "Asia/Kolkata");

try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
used time: Finished in 39.73 seconds
Failing tests: 1
	org.joda.time.TestDateTimeZone::testForID_String_old
Can independently fix []
Could not fix independently
processed: 00110011
pattern: 00110101
try to fix hunk: 2
replace from 575 with range 1 to
            map.put("AGT", "America/Argentina/Buenos_Aires");

try to fix hunk: 3
delete from 577 with range 2
try to fix hunk: 5
delete from 583 with range 1
try to fix hunk: 7
replace from 588 with range 1 to
            map.put("VST", "Asia/Ho_Chi_Minh");

patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

