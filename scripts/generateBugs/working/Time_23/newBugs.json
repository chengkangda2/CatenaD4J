{
    "original": {
        "num_of_hunks": 8,
        "0": {
            "file_name": "src/main/java/org/joda/time/DateTimeZone.java",
            "replaced_with": "            map.put(\"WET\", \"WET\");\n            map.put(\"CET\", \"CET\");\n            map.put(\"MET\", \"CET\");\n            map.put(\"ECT\", \"CET\");\n            map.put(\"EET\", \"EET\");\n",
            "patch_type": "insert",
            "next_line_no": 564
        },
        "1": {
            "file_name": "src/main/java/org/joda/time/DateTimeZone.java",
            "from_line_no": 572,
            "to_line_no": 572,
            "replaced_with": "            map.put(\"IET\", \"America/Indiana/Indianapolis\");\n",
            "replaced": "            map.put(\"IET\", \"America/Indianapolis\");\n",
            "patch_type": "replace",
            "next_line_no": 573
        },
        "2": {
            "file_name": "src/main/java/org/joda/time/DateTimeZone.java",
            "from_line_no": 575,
            "to_line_no": 575,
            "replaced_with": "            map.put(\"AGT\", \"America/Argentina/Buenos_Aires\");\n",
            "replaced": "            map.put(\"AGT\", \"America/Buenos_Aires\");\n",
            "patch_type": "replace",
            "next_line_no": 576
        },
        "3": {
            "file_name": "src/main/java/org/joda/time/DateTimeZone.java",
            "from_line_no": 577,
            "to_line_no": 578,
            "replaced": "            map.put(\"WET\", \"Europe/London\");\n            map.put(\"ECT\", \"Europe/Paris\");\n",
            "patch_type": "delete",
            "next_line_no": 579
        },
        "4": {
            "file_name": "src/main/java/org/joda/time/DateTimeZone.java",
            "from_line_no": 581,
            "to_line_no": 581,
            "replaced": "            map.put(\"EET\", \"Europe/Bucharest\");\n",
            "patch_type": "delete",
            "next_line_no": 582
        },
        "5": {
            "file_name": "src/main/java/org/joda/time/DateTimeZone.java",
            "from_line_no": 583,
            "to_line_no": 583,
            "replaced": "            map.put(\"MET\", \"Asia/Tehran\");\n",
            "patch_type": "delete",
            "next_line_no": 584
        },
        "6": {
            "file_name": "src/main/java/org/joda/time/DateTimeZone.java",
            "from_line_no": 586,
            "to_line_no": 586,
            "replaced_with": "            map.put(\"IST\", \"Asia/Kolkata\");\n",
            "replaced": "            map.put(\"IST\", \"Asia/Calcutta\");\n",
            "patch_type": "replace",
            "next_line_no": 587
        },
        "7": {
            "file_name": "src/main/java/org/joda/time/DateTimeZone.java",
            "from_line_no": 588,
            "to_line_no": 588,
            "replaced_with": "            map.put(\"VST\", \"Asia/Ho_Chi_Minh\");\n",
            "replaced": "            map.put(\"VST\", \"Asia/Saigon\");\n",
            "patch_type": "replace",
            "next_line_no": 589
        }
    },
    "method": {
        "failing_tests": [
            "org.joda.time.TestDateTimeZone::testForID_String_old"
        ],
        "org.joda.time.TestDateTimeZone::testForID_String_old": {
            "file_path": "src/test/java/org/joda/time/TestDateTimeZone.java",
            "Instance": "Begin: Pos(243, 12)\nEnd: Pos(288, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Time_23/src/test/java//org/joda/time/TestDateTimeZone.java\nName: testForID_String_old\nChilds: [StatementAssertion<Begin: Pos(282, 13), End: Pos(282, 46)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Time_23/src/test/java//org/joda/time/TestDateTimeZone.java",
            "name": "testForID_String_old",
            "begin": "Pos(243, 12)",
            "end": "Pos(288, 5)",
            "begin_line_no": 243,
            "end_line_no": 288,
            "child": [
                "Begin: Pos(282, 13)\nEnd: Pos(282, 46)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [],
            "func": {}
        }
    },
    "10011100": {
        "failing_tests": [
            "org.joda.time.TestDateTimeZone::testForID_String_old"
        ]
    }
}