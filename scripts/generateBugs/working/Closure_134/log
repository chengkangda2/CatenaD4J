---
Begin generate bug_id: Closure_134
num_of_hunks: 9
timeout for running: 3600
use working dir: ./working/data/Closure_134
Try to checkout Closure_134
build dir: ['./working/data/Closure_134/build/classes', './working/data/Closure_134/build/test']
init FileManager
trace file: src/com/google/javascript/jscomp/AmbiguateProperties.java
trace file: src/com/google/javascript/jscomp/TypedScopeCreator.java
trying to replace old failing tests
new test num: 0
ori test num: 2
pattern: 000000000
patches are written to file
running tests...
used time: Finished in 124.92 seconds
Failing tests: 2
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
processed: 000000000
pattern: 000000001
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001
pattern: 000000010
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010
pattern: 000000100
try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
used time: Finished in 118.75 seconds
Failing tests: 11
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 000000100
pattern: 000001000
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000
pattern: 000010000
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

patches are written to file
running tests...
used time: Finished in 101.24 seconds
Failing tests: 2
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
No new failing tests but only 1 hunk
processed: 000010000
pattern: 000100000
try to fix hunk: 3
delete from 553 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000
pattern: 001000000
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000
pattern: 010000000
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000
pattern: 100000000
try to fix hunk: 0
delete from 210 with range 1
patches are written to file
running tests...
used time: Finished in 103.50 seconds
Failing tests: 19
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 100000000
pattern: 000000011
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
used time: Finished in 109.43 seconds
Failing tests: 1
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
Can independently fix ['com.google.javascript.jscomp.TypeCheckTest::testIssue86']
select new bug
Pattern: 000000011
new failing tests:
com.google.javascript.jscomp.TypeCheckTest::testIssue86
Save found bug
processed: 000000011
pattern: 000000101
try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101
pattern: 000000110
try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110
pattern: 000001001
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001
pattern: 000001010
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010
pattern: 000001100
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100
pattern: 000010001
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001
pattern: 000010010
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010
pattern: 000010100
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
used time: Finished in 107.73 seconds
Failing tests: 11
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 000010100
pattern: 000011000
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
used time: Finished in 106.74 seconds
Failing tests: 19
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 000011000
pattern: 000100001
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001
pattern: 000100010
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010
pattern: 000100100
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100
pattern: 000101000
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000
pattern: 000110000
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000
pattern: 001000001
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001
pattern: 001000010
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010
pattern: 001000100
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100
pattern: 001001000
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000
pattern: 001010000
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

patches are written to file
running tests...
used time: Finished in 104.04 seconds
Failing tests: 4
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 001010000
pattern: 001100000
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000
pattern: 010000001
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000001
pattern: 010000010
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010
pattern: 010000100
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100
pattern: 010001000
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000
pattern: 010010000
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

patches are written to file
running tests...
used time: Finished in 108.29 seconds
Failing tests: 4
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 010010000
pattern: 010100000
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 3
delete from 553 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000
pattern: 011000000
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000
pattern: 100000001
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001
pattern: 100000010
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010
pattern: 100000100
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
used time: Finished in 99.32 seconds
Failing tests: 19
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 100000100
pattern: 100001000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000
pattern: 100010000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

patches are written to file
running tests...
used time: Finished in 104.65 seconds
Failing tests: 19
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 100010000
pattern: 100100000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 3
delete from 553 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000
pattern: 101000000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000
pattern: 110000000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000
pattern: 000000111
try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
used time: Finished in 104.12 seconds
Failing tests: 10
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
Includes new failing tests, set to unusable
processed: 000000111
pattern: 000001011
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001011
pattern: 000001101
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001101
pattern: 000001110
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001110
pattern: 000010011
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
used time: Finished in 108.47 seconds
Failing tests: 1
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
Can independently fix []
Could not fix independently
processed: 000010011
pattern: 000010101
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010101
pattern: 000010110
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010110
pattern: 000011001
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011001
pattern: 000011010
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011010
pattern: 000011100
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
used time: Finished in 106.64 seconds
Failing tests: 19
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 000011100
pattern: 000100011
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100011
pattern: 000100101
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100101
pattern: 000100110
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100110
pattern: 000101001
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101001
pattern: 000101010
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101010
pattern: 000101100
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101100
pattern: 000110001
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110001
pattern: 000110010
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110010
pattern: 000110100
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110100
pattern: 000111000
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111000
pattern: 001000011
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000011
pattern: 001000101
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000101
pattern: 001000110
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000110
pattern: 001001001
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001001
pattern: 001001010
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001010
pattern: 001001100
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001100
pattern: 001010001
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010001
pattern: 001010010
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010010
pattern: 001010100
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
used time: Finished in 105.90 seconds
Failing tests: 11
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 001010100
pattern: 001011000
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
used time: Finished in 101.61 seconds
Failing tests: 19
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 001011000
pattern: 001100001
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100001
pattern: 001100010
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100010
pattern: 001100100
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100100
pattern: 001101000
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101000
pattern: 001110000
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110000
pattern: 010000011
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000011
pattern: 010000101
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000101
pattern: 010000110
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000110
pattern: 010001001
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001001
pattern: 010001010
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001010
pattern: 010001100
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001100
pattern: 010010001
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010001
pattern: 010010010
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010010
pattern: 010010100
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
used time: Finished in 108.14 seconds
Failing tests: 11
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 010010100
pattern: 010011000
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
used time: Finished in 106.61 seconds
Failing tests: 19
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 010011000
pattern: 010100001
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100001
pattern: 010100010
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100010
pattern: 010100100
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100100
pattern: 010101000
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010101000
pattern: 010110000
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010110000
pattern: 011000001
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000001
pattern: 011000010
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000010
pattern: 011000100
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000100
pattern: 011001000
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011001000
pattern: 011010000
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

patches are written to file
running tests...
used time: Finished in 101.18 seconds
Failing tests: 11
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 011010000
pattern: 011100000
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011100000
pattern: 100000011
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
used time: Finished in 109.26 seconds
Failing tests: 18
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
Includes new failing tests, set to unusable
processed: 100000011
pattern: 100000101
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000101
pattern: 100000110
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000110
pattern: 100001001
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001001
pattern: 100001010
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001010
pattern: 100001100
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001100
pattern: 100010001
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010001
pattern: 100010010
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010010
pattern: 100010100
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
used time: Finished in 101.47 seconds
Failing tests: 19
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 100010100
pattern: 100011000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
used time: Finished in 102.28 seconds
Failing tests: 19
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 100011000
pattern: 100100001
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100001
pattern: 100100010
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100010
pattern: 100100100
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100100
pattern: 100101000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101000
pattern: 100110000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110000
pattern: 101000001
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000001
pattern: 101000010
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000010
pattern: 101000100
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000100
pattern: 101001000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001000
pattern: 101010000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

patches are written to file
running tests...
used time: Finished in 99.27 seconds
Failing tests: 19
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 101010000
pattern: 101100000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100000
pattern: 110000001
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001
pattern: 110000010
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010
pattern: 110000100
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100
pattern: 110001000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000
pattern: 110010000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

patches are written to file
running tests...
used time: Finished in 102.51 seconds
Failing tests: 19
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 110010000
pattern: 110100000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 3
delete from 553 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000
pattern: 111000000
try to fix hunk: 0
delete from 210 with range 1
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000
pattern: 000001111
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001111
pattern: 000010111
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
used time: Finished in 102.57 seconds
Failing tests: 10
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
Includes new failing tests, set to unusable
processed: 000010111
pattern: 000011011
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
used time: Finished in 106.12 seconds
Failing tests: 18
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
Includes new failing tests, set to unusable
processed: 000011011
pattern: 000011101
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011101
pattern: 000011110
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011110
pattern: 000100111
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100111
pattern: 000101011
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101011
pattern: 000101101
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101101
pattern: 000101110
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101110
pattern: 000110011
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110011
pattern: 000110101
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110101
pattern: 000110110
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110110
pattern: 000111001
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111001
pattern: 000111010
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111010
pattern: 000111100
try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111100
pattern: 001000111
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000111
pattern: 001001011
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001011
pattern: 001001101
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001101
pattern: 001001110
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001110
pattern: 001010011
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
used time: Finished in 105.43 seconds
Failing tests: 3
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
Includes new failing tests, set to unusable
processed: 001010011
pattern: 001010101
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010101
pattern: 001010110
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010110
pattern: 001011001
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001011001
pattern: 001011010
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001011010
pattern: 001011100
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
used time: Finished in 104.66 seconds
Failing tests: 19
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExternedPropertyName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfVars
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceMethodWithSameName
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnion
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOverlappingOriginalAndGeneratedNames
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoTypesTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testRenamingMap
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoIndependentVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testFunctionType
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testPropertyAddedToFunction
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testLotsOfClasses
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testOneVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testTwoVar
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testUnions
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testStaticAndInstanceProperties
	com.google.javascript.jscomp.TypeCheckTest::testIssue86
Includes new failing tests, set to unusable
processed: 001011100
pattern: 001100011
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100011
pattern: 001100101
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100101
pattern: 001100110
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100110
pattern: 001101001
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101001
pattern: 001101010
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101010
pattern: 001101100
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101100
pattern: 001110001
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110001
pattern: 001110010
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110010
pattern: 001110100
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110100
pattern: 001111000
try to fix hunk: 2
replace from 366 with range 1 to
      typesRelatedToSet.or(prop.relatedTypesSet);

try to fix hunk: 3
delete from 553 with range 1
try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001111000
pattern: 010000111
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000111
pattern: 010001011
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001011
pattern: 010001101
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001101
pattern: 010001110
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001110
pattern: 010010011
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
used time: Finished in 107.89 seconds
Failing tests: 3
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends
	com.google.javascript.jscomp.AmbiguatePropertiesTest::testInline
Includes new failing tests, set to unusable
processed: 010010011
pattern: 010010101
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010101
pattern: 010010110
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 6
delete from 599 with range 1
try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010110
pattern: 010011001
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 8
insert before 563 with         for (ObjectType iface :
                 ownerType.getCtorImplementedInterfaces()) {
          propType = iface.getPropertyType(propName);
          if (propType instanceof FunctionType) {
            return (FunctionType) propType;
          }
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010011001
pattern: 010011010
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 7
replace from 560 with range 1 to
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010011010
pattern: 010011100
try to fix hunk: 1
replace from 356 with range 1 to
      return !prop.relatedTypesSet.intersects(typesInSet);

try to fix hunk: 4
insert before 558 with     JSTypeBitSet relatedTypesSet = new JSTypeBitSet(intForType.size());

try to fix hunk: 5
replace from 594 with range 4 to
      int typeInt = getIntForType(newType);
      if (!typesSet.get(typeInt)) {
        computeRelatedTypes(newType);
        typesSet.set(typeInt);
        relatedTypesSet.or(getRelatedTypesOnNonUnion(newType));

try to fix hunk: 6
delete from 599 with range 1
patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

