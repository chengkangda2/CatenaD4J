---
Begin generate bug_id: Math_95
num_of_hunks: 3
use working dir: ./working/data/Math_95
Try to checkout Math_95
build dir: ['./working/data/Math_95/target/classes', './working/data/Math_95/target/test-classes']
init FileManager
trace file: src/java/org/apache/commons/math/distribution/FDistributionImpl.java
trace file: src/java/org/apache/commons/math/distribution/FDistributionImpl.java
trace file: src/java/org/apache/commons/math/distribution/FDistributionImpl.java
trying to replace old failing tests
edit: replace from 109 range 13 at src/test/org/apache/commons/math/distribution/FDistributionTest.java
to
    public void testSmallDegreesOfFreedom$catena_0() throws Exception {
        org.apache.commons.math.distribution.FDistributionImpl fd =
            new org.apache.commons.math.distribution.FDistributionImpl(
                1.0, 1.0);
        double p = fd.cumulativeProbability(0.975);
        double x = fd.inverseCumulativeProbability(p);
        assertEquals(0.975, x, 1.0e-5);                                                                     /***** ORIGINAL ASSERTION IS HERE *****/

        fd.setDenominatorDegreesOfFreedom(2.0);
        p = fd.cumulativeProbability(0.975);
        x = fd.inverseCumulativeProbability(p);
        try{ assertEquals(0.975, x, 1.0e-5);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testSmallDegreesOfFreedom$catena_1() throws Exception {
        org.apache.commons.math.distribution.FDistributionImpl fd =
            new org.apache.commons.math.distribution.FDistributionImpl(
                1.0, 1.0);
        double p = fd.cumulativeProbability(0.975);
        double x = fd.inverseCumulativeProbability(p);
        try{ assertEquals(0.975, x, 1.0e-5);                                                                }catch(Throwable __SHOULD_BE_IGNORED){}

        fd.setDenominatorDegreesOfFreedom(2.0);
        p = fd.cumulativeProbability(0.975);
        x = fd.inverseCumulativeProbability(p);
        assertEquals(0.975, x, 1.0e-5);                                                                     /***** ORIGINAL ASSERTION IS HERE *****/
    }
trace file: src/test/org/apache/commons/math/distribution/FDistributionTest.java
new test num: 2
ori test num: 0
pattern: 000
patches are written to file
running tests...
used time: Finished in 27.39 seconds
Failing tests: 2
	org.apache.commons.math.distribution.FDistributionTest::testSmallDegreesOfFreedom$catena_0
	org.apache.commons.math.distribution.FDistributionTest::testSmallDegreesOfFreedom$catena_1
pattern: 001
try to fix hunk: 2
insert before 148 with         }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 010
try to fix hunk: 1
insert before 146 with         if (d > 2.0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 100
try to fix hunk: 0
replace from 144 with range 1 to
        double ret = 1.0;

patches are written to file
running tests...
used time: Finished in 21.67 seconds
Failing tests: 2
	org.apache.commons.math.distribution.FDistributionTest::testSmallDegreesOfFreedom$catena_0
	org.apache.commons.math.distribution.FDistributionTest::testSmallDegreesOfFreedom$catena_1
No new failing tests but only 1 hunk
pattern: 011
try to fix hunk: 1
insert before 146 with         if (d > 2.0) {

try to fix hunk: 2
insert before 148 with         }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 101
try to fix hunk: 0
replace from 144 with range 1 to
        double ret = 1.0;

try to fix hunk: 2
insert before 148 with         }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 110
try to fix hunk: 0
replace from 144 with range 1 to
        double ret = 1.0;

try to fix hunk: 1
insert before 146 with         if (d > 2.0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 111
try to fix hunk: 0
replace from 144 with range 1 to
        double ret = 1.0;

try to fix hunk: 1
insert before 146 with         if (d > 2.0) {

try to fix hunk: 2
insert before 148 with         }

patches are written to file
running tests...
used time: Finished in 21.21 seconds
Failing tests: 0
Can independently fix ['org.apache.commons.math.distribution.FDistributionTest::testSmallDegreesOfFreedom$catena_1', 'org.apache.commons.math.distribution.FDistributionTest::testSmallDegreesOfFreedom$catena_0']
select new bug
Pattern: 111
failing tests: org.apache.commons.math.distribution.FDistributionTest::testSmallDegreesOfFreedom$catena_1@org.apache.commons.math.distribution.FDistributionTest::testSmallDegreesOfFreedom$catena_0
Find 1 new bugs
