---
Begin generate bug_id: Closure_158
num_of_hunks: 26
NOTICE: may not contains full fix patterns for hunks are too much (26 hunks)
timeout for running: 3600
use working dir: ./working/data/Closure_158
Try to checkout Closure_158
build dir: ['./working/data/Closure_158/build/classes', './working/data/Closure_158/build/test']
init FileManager
trace file: src/com/google/javascript/jscomp/AbstractCommandLineRunner.java
trace file: src/com/google/javascript/jscomp/CommandLineRunner.java
trace file: src/com/google/javascript/jscomp/DiagnosticGroups.java
trying to replace old failing tests
new test num: 0
ori test num: 2
pattern: 00000000000000000000000000
patches are written to file
running tests...
used time: Finished in 185.38 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testWarningGuardOrdering2
	com.google.javascript.jscomp.CommandLineRunnerTest::testWarningGuardOrdering4
processed: 00000000000000000000000000
pattern: 10000000000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000000
pattern: 01000000000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000000
pattern: 00100000000000000000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000000
pattern: 00010000000000000000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000000
pattern: 00001000000000000000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000000
pattern: 00000100000000000000000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000000
pattern: 00000010000000000000000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000000
pattern: 00000001000000000000000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000000
pattern: 00000000100000000000000000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000000
pattern: 00000000010000000000000000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000000
pattern: 00000000001000000000000000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000000
pattern: 00000000000100000000000000
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000000000
pattern: 00000000000010000000000000
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000000000000
pattern: 00000000000001000000000000
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000000000000
pattern: 00000000000000100000000000
try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100000000000
pattern: 00000000000000010000000000
try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010000000000
pattern: 00000000000000001000000000
try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001000000000
pattern: 00000000000000000100000000
try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000100000000
pattern: 00000000000000000010000000
try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000010000000
pattern: 00000000000000000001000000
try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000001000000
pattern: 00000000000000000000100000
try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000100000
pattern: 00000000000000000000010000
try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000010000
pattern: 00000000000000000000001000
try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000001000
pattern: 00000000000000000000000100
try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000100
pattern: 00000000000000000000000010
try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000010
pattern: 00000000000000000000000001
try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000001
pattern: 11000000000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000000000000
pattern: 10100000000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000000000000
pattern: 10010000000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000000000000
pattern: 10001000000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000000000000
pattern: 10000100000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000000000000
pattern: 10000010000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000000000000
pattern: 10000001000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000000000000
pattern: 10000000100000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000000000000
pattern: 10000000010000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000000000000
pattern: 10000000001000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000000000000
pattern: 10000000000100000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000000000000
pattern: 10000000000010000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000000000000
pattern: 10000000000001000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000000000000
pattern: 10000000000000100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100000000000
pattern: 10000000000000010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010000000000
pattern: 10000000000000001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001000000000
pattern: 10000000000000000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000100000000
pattern: 10000000000000000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000010000000
pattern: 10000000000000000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000001000000
pattern: 10000000000000000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000100000
pattern: 10000000000000000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000010000
pattern: 10000000000000000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000001000
pattern: 10000000000000000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000100
pattern: 10000000000000000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000010
pattern: 10000000000000000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000001
pattern: 01100000000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000000000000
pattern: 01010000000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000000000000
pattern: 01001000000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000000000000
pattern: 01000100000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000000000000
pattern: 01000010000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000000000000
pattern: 01000001000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000000000000000
pattern: 01000000100000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000100000000000000000
pattern: 01000000010000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000010000000000000000
pattern: 01000000001000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000001000000000000000
pattern: 01000000000100000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000100000000000000
pattern: 01000000000010000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000010000000000000
pattern: 01000000000001000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000001000000000000
pattern: 01000000000000100000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000100000000000
pattern: 01000000000000010000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000010000000000
pattern: 01000000000000001000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000001000000000
pattern: 01000000000000000100000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000100000000
pattern: 01000000000000000010000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000010000000
pattern: 01000000000000000001000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000001000000
pattern: 01000000000000000000100000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000100000
pattern: 01000000000000000000010000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000010000
pattern: 01000000000000000000001000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000001000
pattern: 01000000000000000000000100
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000100
pattern: 01000000000000000000000010
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000010
pattern: 01000000000000000000000001
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000001
pattern: 00110000000000000000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000000000000000000000
pattern: 00101000000000000000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000000000000000000000
pattern: 00100100000000000000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100000000000000000000
pattern: 00100010000000000000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010000000000000000000
pattern: 00100001000000000000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001000000000000000000
pattern: 00100000100000000000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000100000000000000000
pattern: 00100000010000000000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000010000000000000000
pattern: 00100000001000000000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000001000000000000000
pattern: 00100000000100000000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000100000000000000
pattern: 00100000000010000000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000010000000000000
pattern: 00100000000001000000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000001000000000000
pattern: 00100000000000100000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000100000000000
pattern: 00100000000000010000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000010000000000
pattern: 00100000000000001000000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000001000000000
pattern: 00100000000000000100000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000100000000
pattern: 00100000000000000010000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000010000000
pattern: 00100000000000000001000000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000001000000
pattern: 00100000000000000000100000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000100000
pattern: 00100000000000000000010000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000010000
pattern: 00100000000000000000001000
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000001000
pattern: 00100000000000000000000100
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000100
pattern: 00100000000000000000000010
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000010
pattern: 00100000000000000000000001
try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000001
pattern: 00011000000000000000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000000000000000000000
pattern: 00010100000000000000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100000000000000000000
pattern: 00010010000000000000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010000000000000000000
pattern: 00010001000000000000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001000000000000000000
pattern: 00010000100000000000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000100000000000000000
pattern: 00010000010000000000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000010000000000000000
pattern: 00010000001000000000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000001000000000000000
pattern: 00010000000100000000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000100000000000000
pattern: 00010000000010000000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000010000000000000
pattern: 00010000000001000000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000001000000000000
pattern: 00010000000000100000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000100000000000
pattern: 00010000000000010000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000010000000000
pattern: 00010000000000001000000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000001000000000
pattern: 00010000000000000100000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000100000000
pattern: 00010000000000000010000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000010000000
pattern: 00010000000000000001000000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000001000000
pattern: 00010000000000000000100000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000100000
pattern: 00010000000000000000010000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000010000
pattern: 00010000000000000000001000
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000001000
pattern: 00010000000000000000000100
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000100
pattern: 00010000000000000000000010
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000010
pattern: 00010000000000000000000001
try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000001
pattern: 00001100000000000000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001100000000000000000000
pattern: 00001010000000000000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001010000000000000000000
pattern: 00001001000000000000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001001000000000000000000
pattern: 00001000100000000000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000100000000000000000
pattern: 00001000010000000000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000010000000000000000
pattern: 00001000001000000000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000001000000000000000
pattern: 00001000000100000000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000100000000000000
pattern: 00001000000010000000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000010000000000000
pattern: 00001000000001000000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000001000000000000
pattern: 00001000000000100000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000100000000000
pattern: 00001000000000010000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000010000000000
pattern: 00001000000000001000000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000001000000000
pattern: 00001000000000000100000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000100000000
pattern: 00001000000000000010000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000010000000
pattern: 00001000000000000001000000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000001000000
pattern: 00001000000000000000100000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000100000
pattern: 00001000000000000000010000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000010000
pattern: 00001000000000000000001000
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000001000
pattern: 00001000000000000000000100
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000100
pattern: 00001000000000000000000010
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000010
pattern: 00001000000000000000000001
try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000001
pattern: 00000110000000000000000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000110000000000000000000
pattern: 00000101000000000000000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000101000000000000000000
pattern: 00000100100000000000000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100100000000000000000
pattern: 00000100010000000000000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100010000000000000000
pattern: 00000100001000000000000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100001000000000000000
pattern: 00000100000100000000000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000100000000000000
pattern: 00000100000010000000000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000010000000000000
pattern: 00000100000001000000000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000001000000000000
pattern: 00000100000000100000000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000100000000000
pattern: 00000100000000010000000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000010000000000
pattern: 00000100000000001000000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000001000000000
pattern: 00000100000000000100000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000100000000
pattern: 00000100000000000010000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000010000000
pattern: 00000100000000000001000000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000001000000
pattern: 00000100000000000000100000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000100000
pattern: 00000100000000000000010000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000010000
pattern: 00000100000000000000001000
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000001000
pattern: 00000100000000000000000100
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000100
pattern: 00000100000000000000000010
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000010
pattern: 00000100000000000000000001
try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000001
pattern: 00000011000000000000000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000011000000000000000000
pattern: 00000010100000000000000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010100000000000000000
pattern: 00000010010000000000000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010010000000000000000
pattern: 00000010001000000000000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010001000000000000000
pattern: 00000010000100000000000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000100000000000000
pattern: 00000010000010000000000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000010000000000000
pattern: 00000010000001000000000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000001000000000000
pattern: 00000010000000100000000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000100000000000
pattern: 00000010000000010000000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000010000000000
pattern: 00000010000000001000000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000001000000000
pattern: 00000010000000000100000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000100000000
pattern: 00000010000000000010000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000010000000
pattern: 00000010000000000001000000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000001000000
pattern: 00000010000000000000100000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000100000
pattern: 00000010000000000000010000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000010000
pattern: 00000010000000000000001000
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000001000
pattern: 00000010000000000000000100
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000100
pattern: 00000010000000000000000010
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000010
pattern: 00000010000000000000000001
try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000001
pattern: 00000001100000000000000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001100000000000000000
pattern: 00000001010000000000000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001010000000000000000
pattern: 00000001001000000000000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001001000000000000000
pattern: 00000001000100000000000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000100000000000000
pattern: 00000001000010000000000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000010000000000000
pattern: 00000001000001000000000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000001000000000000
pattern: 00000001000000100000000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000100000000000
pattern: 00000001000000010000000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000010000000000
pattern: 00000001000000001000000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000001000000000
pattern: 00000001000000000100000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000100000000
pattern: 00000001000000000010000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000010000000
pattern: 00000001000000000001000000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000001000000
pattern: 00000001000000000000100000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000100000
pattern: 00000001000000000000010000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000010000
pattern: 00000001000000000000001000
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000001000
pattern: 00000001000000000000000100
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000100
pattern: 00000001000000000000000010
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000010
pattern: 00000001000000000000000001
try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000001
pattern: 00000000110000000000000000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000110000000000000000
pattern: 00000000101000000000000000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000101000000000000000
pattern: 00000000100100000000000000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100100000000000000
pattern: 00000000100010000000000000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100010000000000000
pattern: 00000000100001000000000000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100001000000000000
pattern: 00000000100000100000000000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000100000000000
pattern: 00000000100000010000000000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000010000000000
pattern: 00000000100000001000000000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000001000000000
pattern: 00000000100000000100000000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000100000000
pattern: 00000000100000000010000000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000010000000
pattern: 00000000100000000001000000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000001000000
pattern: 00000000100000000000100000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000100000
pattern: 00000000100000000000010000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000010000
pattern: 00000000100000000000001000
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000001000
pattern: 00000000100000000000000100
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000100
pattern: 00000000100000000000000010
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000010
pattern: 00000000100000000000000001
try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000001
pattern: 00000000011000000000000000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000011000000000000000
pattern: 00000000010100000000000000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010100000000000000
pattern: 00000000010010000000000000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010010000000000000
pattern: 00000000010001000000000000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010001000000000000
pattern: 00000000010000100000000000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000100000000000
pattern: 00000000010000010000000000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000010000000000
pattern: 00000000010000001000000000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000001000000000
pattern: 00000000010000000100000000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000100000000
pattern: 00000000010000000010000000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000010000000
pattern: 00000000010000000001000000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000001000000
pattern: 00000000010000000000100000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000100000
pattern: 00000000010000000000010000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000010000
pattern: 00000000010000000000001000
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000001000
pattern: 00000000010000000000000100
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000100
pattern: 00000000010000000000000010
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000010
pattern: 00000000010000000000000001
try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000001
pattern: 00000000001100000000000000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001100000000000000
pattern: 00000000001010000000000000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001010000000000000
pattern: 00000000001001000000000000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001001000000000000
pattern: 00000000001000100000000000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000100000000000
pattern: 00000000001000010000000000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000010000000000
pattern: 00000000001000001000000000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000001000000000
pattern: 00000000001000000100000000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000100000000
pattern: 00000000001000000010000000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000010000000
pattern: 00000000001000000001000000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000001000000
pattern: 00000000001000000000100000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000100000
pattern: 00000000001000000000010000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000010000
pattern: 00000000001000000000001000
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000001000
pattern: 00000000001000000000000100
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000100
pattern: 00000000001000000000000010
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000010
pattern: 00000000001000000000000001
try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000001
pattern: 00000000000110000000000000
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000110000000000000
pattern: 00000000000101000000000000
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000101000000000000
pattern: 00000000000100100000000000
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100100000000000
pattern: 00000000000100010000000000
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100010000000000
pattern: 00000000000100001000000000
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100001000000000
pattern: 00000000000100000100000000
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000100000000
pattern: 00000000000100000010000000
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000010000000
pattern: 00000000000100000001000000
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000001000000
pattern: 00000000000100000000100000
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000100000
pattern: 00000000000100000000010000
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000010000
pattern: 00000000000100000000001000
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000001000
pattern: 00000000000100000000000100
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000000100
pattern: 00000000000100000000000010
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000000010
pattern: 00000000000100000000000001
try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000000001
pattern: 00000000000011000000000000
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000011000000000000
pattern: 00000000000010100000000000
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010100000000000
pattern: 00000000000010010000000000
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010010000000000
pattern: 00000000000010001000000000
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010001000000000
pattern: 00000000000010000100000000
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000100000000
pattern: 00000000000010000010000000
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000010000000
pattern: 00000000000010000001000000
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000001000000
pattern: 00000000000010000000100000
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000000100000
pattern: 00000000000010000000010000
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000000010000
pattern: 00000000000010000000001000
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000000001000
pattern: 00000000000010000000000100
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000000000100
pattern: 00000000000010000000000010
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000000000010
pattern: 00000000000010000000000001
try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000000000001
pattern: 00000000000001100000000000
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001100000000000
pattern: 00000000000001010000000000
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001010000000000
pattern: 00000000000001001000000000
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001001000000000
pattern: 00000000000001000100000000
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000100000000
pattern: 00000000000001000010000000
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000010000000
pattern: 00000000000001000001000000
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000001000000
pattern: 00000000000001000000100000
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000000100000
pattern: 00000000000001000000010000
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000000010000
pattern: 00000000000001000000001000
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000000001000
pattern: 00000000000001000000000100
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000000000100
pattern: 00000000000001000000000010
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000000000010
pattern: 00000000000001000000000001
try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000000000001
pattern: 00000000000000110000000000
try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000110000000000
pattern: 00000000000000101000000000
try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000101000000000
pattern: 00000000000000100100000000
try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100100000000
pattern: 00000000000000100010000000
try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100010000000
pattern: 00000000000000100001000000
try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100001000000
pattern: 00000000000000100000100000
try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100000100000
pattern: 00000000000000100000010000
try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100000010000
pattern: 00000000000000100000001000
try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100000001000
pattern: 00000000000000100000000100
try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100000000100
pattern: 00000000000000100000000010
try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100000000010
pattern: 00000000000000100000000001
try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100000000001
pattern: 00000000000000011000000000
try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000011000000000
pattern: 00000000000000010100000000
try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010100000000
pattern: 00000000000000010010000000
try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010010000000
pattern: 00000000000000010001000000
try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010001000000
pattern: 00000000000000010000100000
try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010000100000
pattern: 00000000000000010000010000
try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010000010000
pattern: 00000000000000010000001000
try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010000001000
pattern: 00000000000000010000000100
try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010000000100
pattern: 00000000000000010000000010
try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010000000010
pattern: 00000000000000010000000001
try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010000000001
pattern: 00000000000000001100000000
try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001100000000
pattern: 00000000000000001010000000
try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001010000000
pattern: 00000000000000001001000000
try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001001000000
pattern: 00000000000000001000100000
try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001000100000
pattern: 00000000000000001000010000
try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001000010000
pattern: 00000000000000001000001000
try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001000001000
pattern: 00000000000000001000000100
try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001000000100
pattern: 00000000000000001000000010
try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001000000010
pattern: 00000000000000001000000001
try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001000000001
pattern: 00000000000000000110000000
try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000110000000
pattern: 00000000000000000101000000
try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000101000000
pattern: 00000000000000000100100000
try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000100100000
pattern: 00000000000000000100010000
try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000100010000
pattern: 00000000000000000100001000
try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000100001000
pattern: 00000000000000000100000100
try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000100000100
pattern: 00000000000000000100000010
try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000100000010
pattern: 00000000000000000100000001
try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000100000001
pattern: 00000000000000000011000000
try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000011000000
pattern: 00000000000000000010100000
try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000010100000
pattern: 00000000000000000010010000
try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000010010000
pattern: 00000000000000000010001000
try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000010001000
pattern: 00000000000000000010000100
try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000010000100
pattern: 00000000000000000010000010
try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000010000010
pattern: 00000000000000000010000001
try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000010000001
pattern: 00000000000000000001100000
try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000001100000
pattern: 00000000000000000001010000
try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000001010000
pattern: 00000000000000000001001000
try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000001001000
pattern: 00000000000000000001000100
try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000001000100
pattern: 00000000000000000001000010
try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000001000010
pattern: 00000000000000000001000001
try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000001000001
pattern: 00000000000000000000110000
try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000110000
pattern: 00000000000000000000101000
try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000101000
pattern: 00000000000000000000100100
try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000100100
pattern: 00000000000000000000100010
try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000100010
pattern: 00000000000000000000100001
try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000100001
pattern: 00000000000000000000011000
try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000011000
pattern: 00000000000000000000010100
try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000010100
pattern: 00000000000000000000010010
try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000010010
pattern: 00000000000000000000010001
try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000010001
pattern: 00000000000000000000001100
try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000001100
pattern: 00000000000000000000001010
try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000001010
pattern: 00000000000000000000001001
try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000001001
pattern: 00000000000000000000000110
try to fix hunk: 23
delete from 23 with range 1
try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000110
pattern: 00000000000000000000000101
try to fix hunk: 23
delete from 23 with range 1
try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000101
pattern: 00000000000000000000000011
try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000011
pattern: 11100000000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11100000000000000000000000
pattern: 11010000000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11010000000000000000000000
pattern: 11001000000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11001000000000000000000000
pattern: 11000100000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000100000000000000000000
pattern: 11000010000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000010000000000000000000
pattern: 11000001000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000001000000000000000000
pattern: 11000000100000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000100000000000000000
pattern: 11000000010000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000010000000000000000
pattern: 11000000001000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000001000000000000000
pattern: 11000000000100000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000100000000000000
pattern: 11000000000010000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000010000000000000
pattern: 11000000000001000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000001000000000000
pattern: 11000000000000100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000100000000000
pattern: 11000000000000010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000010000000000
pattern: 11000000000000001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000001000000000
pattern: 11000000000000000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000100000000
pattern: 11000000000000000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000010000000
pattern: 11000000000000000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000001000000
pattern: 11000000000000000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000000100000
pattern: 11000000000000000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000000010000
pattern: 11000000000000000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000000001000
pattern: 11000000000000000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000000000100
pattern: 11000000000000000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000000000010
pattern: 11000000000000000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000000000001
pattern: 10110000000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10110000000000000000000000
pattern: 10101000000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10101000000000000000000000
pattern: 10100100000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100100000000000000000000
pattern: 10100010000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100010000000000000000000
pattern: 10100001000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100001000000000000000000
pattern: 10100000100000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000100000000000000000
pattern: 10100000010000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000010000000000000000
pattern: 10100000001000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000001000000000000000
pattern: 10100000000100000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000100000000000000
pattern: 10100000000010000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000010000000000000
pattern: 10100000000001000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000001000000000000
pattern: 10100000000000100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000100000000000
pattern: 10100000000000010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000010000000000
pattern: 10100000000000001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000001000000000
pattern: 10100000000000000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000100000000
pattern: 10100000000000000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000010000000
pattern: 10100000000000000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000001000000
pattern: 10100000000000000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000000100000
pattern: 10100000000000000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000000010000
pattern: 10100000000000000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000000001000
pattern: 10100000000000000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000000000100
pattern: 10100000000000000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000000000010
pattern: 10100000000000000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000000000001
pattern: 10011000000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10011000000000000000000000
pattern: 10010100000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010100000000000000000000
pattern: 10010010000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010010000000000000000000
pattern: 10010001000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010001000000000000000000
pattern: 10010000100000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000100000000000000000
pattern: 10010000010000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000010000000000000000
pattern: 10010000001000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000001000000000000000
pattern: 10010000000100000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000100000000000000
pattern: 10010000000010000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000010000000000000
pattern: 10010000000001000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000001000000000000
pattern: 10010000000000100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000100000000000
pattern: 10010000000000010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000010000000000
pattern: 10010000000000001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000001000000000
pattern: 10010000000000000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000100000000
pattern: 10010000000000000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000010000000
pattern: 10010000000000000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000001000000
pattern: 10010000000000000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000000100000
pattern: 10010000000000000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000000010000
pattern: 10010000000000000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000000001000
pattern: 10010000000000000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000000000100
pattern: 10010000000000000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000000000010
pattern: 10010000000000000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000000000001
pattern: 10001100000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001100000000000000000000
pattern: 10001010000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001010000000000000000000
pattern: 10001001000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001001000000000000000000
pattern: 10001000100000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000100000000000000000
pattern: 10001000010000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000010000000000000000
pattern: 10001000001000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000001000000000000000
pattern: 10001000000100000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000100000000000000
pattern: 10001000000010000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000010000000000000
pattern: 10001000000001000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000001000000000000
pattern: 10001000000000100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000100000000000
pattern: 10001000000000010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000010000000000
pattern: 10001000000000001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000001000000000
pattern: 10001000000000000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000100000000
pattern: 10001000000000000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000010000000
pattern: 10001000000000000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000001000000
pattern: 10001000000000000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000000100000
pattern: 10001000000000000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000000010000
pattern: 10001000000000000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000000001000
pattern: 10001000000000000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000000000100
pattern: 10001000000000000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000000000010
pattern: 10001000000000000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000000000001
pattern: 10000110000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000110000000000000000000
pattern: 10000101000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000101000000000000000000
pattern: 10000100100000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100100000000000000000
pattern: 10000100010000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100010000000000000000
pattern: 10000100001000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100001000000000000000
pattern: 10000100000100000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000100000000000000
pattern: 10000100000010000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000010000000000000
pattern: 10000100000001000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000001000000000000
pattern: 10000100000000100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000100000000000
pattern: 10000100000000010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000010000000000
pattern: 10000100000000001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000001000000000
pattern: 10000100000000000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000100000000
pattern: 10000100000000000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000010000000
pattern: 10000100000000000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000001000000
pattern: 10000100000000000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000000100000
pattern: 10000100000000000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000000010000
pattern: 10000100000000000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000000001000
pattern: 10000100000000000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000000000100
pattern: 10000100000000000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000000000010
pattern: 10000100000000000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000000000001
pattern: 10000011000000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000011000000000000000000
pattern: 10000010100000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010100000000000000000
pattern: 10000010010000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010010000000000000000
pattern: 10000010001000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010001000000000000000
pattern: 10000010000100000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000100000000000000
pattern: 10000010000010000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000010000000000000
pattern: 10000010000001000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000001000000000000
pattern: 10000010000000100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000100000000000
pattern: 10000010000000010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000010000000000
pattern: 10000010000000001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000001000000000
pattern: 10000010000000000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000100000000
pattern: 10000010000000000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000010000000
pattern: 10000010000000000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000001000000
pattern: 10000010000000000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000000100000
pattern: 10000010000000000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000000010000
pattern: 10000010000000000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000000001000
pattern: 10000010000000000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000000000100
pattern: 10000010000000000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000000000010
pattern: 10000010000000000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000000000001
pattern: 10000001100000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001100000000000000000
pattern: 10000001010000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001010000000000000000
pattern: 10000001001000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001001000000000000000
pattern: 10000001000100000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000100000000000000
pattern: 10000001000010000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000010000000000000
pattern: 10000001000001000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000001000000000000
pattern: 10000001000000100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000100000000000
pattern: 10000001000000010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000010000000000
pattern: 10000001000000001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000001000000000
pattern: 10000001000000000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000100000000
pattern: 10000001000000000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000010000000
pattern: 10000001000000000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000001000000
pattern: 10000001000000000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000000100000
pattern: 10000001000000000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000000010000
pattern: 10000001000000000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000000001000
pattern: 10000001000000000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000000000100
pattern: 10000001000000000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000000000010
pattern: 10000001000000000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000000000001
pattern: 10000000110000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000110000000000000000
pattern: 10000000101000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000101000000000000000
pattern: 10000000100100000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100100000000000000
pattern: 10000000100010000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100010000000000000
pattern: 10000000100001000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100001000000000000
pattern: 10000000100000100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000100000000000
pattern: 10000000100000010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000010000000000
pattern: 10000000100000001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000001000000000
pattern: 10000000100000000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000100000000
pattern: 10000000100000000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000010000000
pattern: 10000000100000000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000001000000
pattern: 10000000100000000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000000100000
pattern: 10000000100000000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000000010000
pattern: 10000000100000000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000000001000
pattern: 10000000100000000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000000000100
pattern: 10000000100000000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000000000010
pattern: 10000000100000000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000000000001
pattern: 10000000011000000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000011000000000000000
pattern: 10000000010100000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010100000000000000
pattern: 10000000010010000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010010000000000000
pattern: 10000000010001000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010001000000000000
pattern: 10000000010000100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000100000000000
pattern: 10000000010000010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000010000000000
pattern: 10000000010000001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000001000000000
pattern: 10000000010000000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000100000000
pattern: 10000000010000000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000010000000
pattern: 10000000010000000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000001000000
pattern: 10000000010000000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000000100000
pattern: 10000000010000000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000000010000
pattern: 10000000010000000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000000001000
pattern: 10000000010000000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000000000100
pattern: 10000000010000000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000000000010
pattern: 10000000010000000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000000000001
pattern: 10000000001100000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001100000000000000
pattern: 10000000001010000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001010000000000000
pattern: 10000000001001000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001001000000000000
pattern: 10000000001000100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000100000000000
pattern: 10000000001000010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000010000000000
pattern: 10000000001000001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000001000000000
pattern: 10000000001000000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000100000000
pattern: 10000000001000000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000010000000
pattern: 10000000001000000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000001000000
pattern: 10000000001000000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000000100000
pattern: 10000000001000000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000000010000
pattern: 10000000001000000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000000001000
pattern: 10000000001000000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000000000100
pattern: 10000000001000000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000000000010
pattern: 10000000001000000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000000000001
pattern: 10000000000110000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000110000000000000
pattern: 10000000000101000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000101000000000000
pattern: 10000000000100100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100100000000000
pattern: 10000000000100010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100010000000000
pattern: 10000000000100001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100001000000000
pattern: 10000000000100000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000100000000
pattern: 10000000000100000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000010000000
pattern: 10000000000100000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000001000000
pattern: 10000000000100000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000000100000
pattern: 10000000000100000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000000010000
pattern: 10000000000100000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000000001000
pattern: 10000000000100000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000000000100
pattern: 10000000000100000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000000000010
pattern: 10000000000100000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000000000001
pattern: 10000000000011000000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000011000000000000
pattern: 10000000000010100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010100000000000
pattern: 10000000000010010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010010000000000
pattern: 10000000000010001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010001000000000
pattern: 10000000000010000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000100000000
pattern: 10000000000010000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000010000000
pattern: 10000000000010000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000001000000
pattern: 10000000000010000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000000100000
pattern: 10000000000010000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000000010000
pattern: 10000000000010000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000000001000
pattern: 10000000000010000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000000000100
pattern: 10000000000010000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000000000010
pattern: 10000000000010000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000000000001
pattern: 10000000000001100000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001100000000000
pattern: 10000000000001010000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001010000000000
pattern: 10000000000001001000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001001000000000
pattern: 10000000000001000100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000100000000
pattern: 10000000000001000010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000010000000
pattern: 10000000000001000001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000001000000
pattern: 10000000000001000000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000000100000
pattern: 10000000000001000000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000000010000
pattern: 10000000000001000000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000000001000
pattern: 10000000000001000000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000000000100
pattern: 10000000000001000000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000000000010
pattern: 10000000000001000000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000000000001
pattern: 10000000000000110000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000110000000000
pattern: 10000000000000101000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000101000000000
pattern: 10000000000000100100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100100000000
pattern: 10000000000000100010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100010000000
pattern: 10000000000000100001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100001000000
pattern: 10000000000000100000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100000100000
pattern: 10000000000000100000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100000010000
pattern: 10000000000000100000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100000001000
pattern: 10000000000000100000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100000000100
pattern: 10000000000000100000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100000000010
pattern: 10000000000000100000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100000000001
pattern: 10000000000000011000000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000011000000000
pattern: 10000000000000010100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010100000000
pattern: 10000000000000010010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010010000000
pattern: 10000000000000010001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010001000000
pattern: 10000000000000010000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010000100000
pattern: 10000000000000010000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010000010000
pattern: 10000000000000010000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010000001000
pattern: 10000000000000010000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010000000100
pattern: 10000000000000010000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010000000010
pattern: 10000000000000010000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010000000001
pattern: 10000000000000001100000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001100000000
pattern: 10000000000000001010000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001010000000
pattern: 10000000000000001001000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001001000000
pattern: 10000000000000001000100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001000100000
pattern: 10000000000000001000010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001000010000
pattern: 10000000000000001000001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001000001000
pattern: 10000000000000001000000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001000000100
pattern: 10000000000000001000000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001000000010
pattern: 10000000000000001000000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001000000001
pattern: 10000000000000000110000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000110000000
pattern: 10000000000000000101000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000101000000
pattern: 10000000000000000100100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000100100000
pattern: 10000000000000000100010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000100010000
pattern: 10000000000000000100001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000100001000
pattern: 10000000000000000100000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000100000100
pattern: 10000000000000000100000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000100000010
pattern: 10000000000000000100000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000100000001
pattern: 10000000000000000011000000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000011000000
pattern: 10000000000000000010100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000010100000
pattern: 10000000000000000010010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000010010000
pattern: 10000000000000000010001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000010001000
pattern: 10000000000000000010000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000010000100
pattern: 10000000000000000010000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000010000010
pattern: 10000000000000000010000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000010000001
pattern: 10000000000000000001100000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000001100000
pattern: 10000000000000000001010000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000001010000
pattern: 10000000000000000001001000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000001001000
pattern: 10000000000000000001000100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000001000100
pattern: 10000000000000000001000010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000001000010
pattern: 10000000000000000001000001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000001000001
pattern: 10000000000000000000110000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000110000
pattern: 10000000000000000000101000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000101000
pattern: 10000000000000000000100100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000100100
pattern: 10000000000000000000100010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000100010
pattern: 10000000000000000000100001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000100001
pattern: 10000000000000000000011000
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000011000
pattern: 10000000000000000000010100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000010100
pattern: 10000000000000000000010010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000010010
pattern: 10000000000000000000010001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000010001
pattern: 10000000000000000000001100
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000001100
pattern: 10000000000000000000001010
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000001010
pattern: 10000000000000000000001001
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000001001
pattern: 10000000000000000000000110
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 23
delete from 23 with range 1
try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000110
pattern: 10000000000000000000000101
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 23
delete from 23 with range 1
try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000101
pattern: 10000000000000000000000011
try to fix hunk: 0
replace from 197 with range 6 to
    if (config.warningGuards != null) {
      for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
        diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000011
pattern: 01110000000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01110000000000000000000000
pattern: 01101000000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01101000000000000000000000
pattern: 01100100000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100100000000000000000000
pattern: 01100010000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100010000000000000000000
pattern: 01100001000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100001000000000000000000
pattern: 01100000100000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000100000000000000000
pattern: 01100000010000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000010000000000000000
pattern: 01100000001000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000001000000000000000
pattern: 01100000000100000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000100000000000000
pattern: 01100000000010000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000010000000000000
pattern: 01100000000001000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000001000000000000
pattern: 01100000000000100000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000100000000000
pattern: 01100000000000010000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000010000000000
pattern: 01100000000000001000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000001000000000
pattern: 01100000000000000100000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000100000000
pattern: 01100000000000000010000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000010000000
pattern: 01100000000000000001000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000001000000
pattern: 01100000000000000000100000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000000100000
pattern: 01100000000000000000010000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000000010000
pattern: 01100000000000000000001000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000000001000
pattern: 01100000000000000000000100
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000000000100
pattern: 01100000000000000000000010
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000000000010
pattern: 01100000000000000000000001
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 2
replace from 1502 with range 15 to
    CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
      this.warningGuards = spec;

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000000000001
pattern: 01011000000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01011000000000000000000000
pattern: 01010100000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010100000000000000000000
pattern: 01010010000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010010000000000000000000
pattern: 01010001000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010001000000000000000000
pattern: 01010000100000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000100000000000000000
pattern: 01010000010000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000010000000000000000
pattern: 01010000001000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000001000000000000000
pattern: 01010000000100000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000100000000000000
pattern: 01010000000010000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000010000000000000
pattern: 01010000000001000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000001000000000000
pattern: 01010000000000100000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000100000000000
pattern: 01010000000000010000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000010000000000
pattern: 01010000000000001000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000001000000000
pattern: 01010000000000000100000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000100000000
pattern: 01010000000000000010000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000010000000
pattern: 01010000000000000001000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000001000000
pattern: 01010000000000000000100000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000000100000
pattern: 01010000000000000000010000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000000010000
pattern: 01010000000000000000001000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000000001000
pattern: 01010000000000000000000100
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000000000100
pattern: 01010000000000000000000010
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000000000010
pattern: 01010000000000000000000001
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 3
replace from 1628 with range 1 to
  protected static class WarningGuardSpec {
    private static class Entry {
      private final CheckLevel level;
      private final String groupName;

      private Entry(CheckLevel level, String groupName) {
        this.level = level;
        this.groupName = groupName;
      }
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000000000001
pattern: 01001100000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001100000000000000000000
pattern: 01001010000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001010000000000000000000
pattern: 01001001000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001001000000000000000000
pattern: 01001000100000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000100000000000000000
pattern: 01001000010000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000010000000000000000
pattern: 01001000001000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000001000000000000000
pattern: 01001000000100000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000100000000000000
pattern: 01001000000010000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000010000000000000
pattern: 01001000000001000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000001000000000000
pattern: 01001000000000100000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000100000000000
pattern: 01001000000000010000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000010000000000
pattern: 01001000000000001000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000001000000000
pattern: 01001000000000000100000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000100000000
pattern: 01001000000000000010000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000010000000
pattern: 01001000000000000001000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000001000000
pattern: 01001000000000000000100000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000000100000
pattern: 01001000000000000000010000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000000010000
pattern: 01001000000000000000001000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000000001000
pattern: 01001000000000000000000100
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000000000100
pattern: 01001000000000000000000010
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000000000010
pattern: 01001000000000000000000001
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 4
insert before 1631 with     private final List<Entry> entries = Lists.newArrayList();

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000000000001
pattern: 01000110000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000110000000000000000000
pattern: 01000101000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000101000000000000000000
pattern: 01000100100000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100100000000000000000
pattern: 01000100010000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100010000000000000000
pattern: 01000100001000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100001000000000000000
pattern: 01000100000100000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000100000000000000
pattern: 01000100000010000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000010000000000000
pattern: 01000100000001000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000001000000000000
pattern: 01000100000000100000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000100000000000
pattern: 01000100000000010000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000010000000000
pattern: 01000100000000001000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000001000000000
pattern: 01000100000000000100000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000100000000
pattern: 01000100000000000010000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000010000000
pattern: 01000100000000000001000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000001000000
pattern: 01000100000000000000100000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000000100000
pattern: 01000100000000000000010000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000000010000
pattern: 01000100000000000000001000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000000001000
pattern: 01000100000000000000000100
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000000000100
pattern: 01000100000000000000000010
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000000000010
pattern: 01000100000000000000000001
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 5
insert before 1632 with     protected void add(CheckLevel level, String groupName) {
      entries.add(new Entry(level, groupName));
    }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000000000001
pattern: 01000011000000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000011000000000000000000
pattern: 01000010100000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010100000000000000000
pattern: 01000010010000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010010000000000000000
pattern: 01000010001000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010001000000000000000
pattern: 01000010000100000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000100000000000000
pattern: 01000010000010000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000010000000000000
pattern: 01000010000001000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000001000000000000
pattern: 01000010000000100000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000100000000000
pattern: 01000010000000010000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000010000000000
pattern: 01000010000000001000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000001000000000
pattern: 01000010000000000100000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000100000000
pattern: 01000010000000000010000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000010000000
pattern: 01000010000000000001000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000001000000
pattern: 01000010000000000000100000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000000100000
pattern: 01000010000000000000010000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 21
insert before 500 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000000010000
pattern: 01000010000000000000001000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 22
replace from 552 with range 3 to
          .setWarningGuardSpec(Flags.warningGuardSpec)

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000000001000
pattern: 01000010000000000000000100
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 23
delete from 23 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000000000100
pattern: 01000010000000000000000010
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 24
replace from 186 with range 3 to
  void setWarningLevel(CompilerOptions options,
      String name, CheckLevel level) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000000000010
pattern: 01000010000000000000000001
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 6
insert before 1633 with     protected void clear() {
      entries.clear();
    }
  }

try to fix hunk: 25
delete from 192 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000000000001
pattern: 01000001100000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 8
insert before 94 with     private static final WarningGuardSpec warningGuardSpec =
        new WarningGuardSpec();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001100000000000000000
pattern: 01000001010000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 9
insert before 231 with         handler = WarningGuardErrorOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001010000000000000000
pattern: 01000001001000000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 10
insert before 236 with         handler = WarningGuardWarningOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001001000000000000000
pattern: 01000001000100000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 11
insert before 241 with         handler = WarningGuardOffOptionHandler.class,

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000100000000000000
pattern: 01000001000010000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 12
insert before 389 with     public static class WarningGuardErrorOptionHandler
        extends StringOptionHandler {
      public WarningGuardErrorOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000010000000000000
pattern: 01000001000001000000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 13
insert before 390 with     public static class WarningGuardWarningOptionHandler
        extends StringOptionHandler {
      public WarningGuardWarningOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option,
            new WarningGuardSetter(setter, CheckLevel.WARNING));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000001000000000000
pattern: 01000001000000100000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 14
insert before 391 with     public static class WarningGuardOffOptionHandler
        extends StringOptionHandler {
      public WarningGuardOffOptionHandler(
          CmdLineParser parser, OptionDef option,
          Setter<? super String> setter) {
        super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000100000000000
pattern: 01000001000000010000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 15
insert before 392 with     private static class WarningGuardSetter implements Setter {
      private final Setter proxy;
      private final CheckLevel level;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000010000000000
pattern: 01000001000000001000000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 16
insert before 393 with       private WarningGuardSetter(Setter proxy, CheckLevel level) {
        this.proxy = proxy;
        this.level = level;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000001000000000
pattern: 01000001000000000100000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 17
insert before 394 with       @Override public boolean isMultiValued() { return proxy.isMultiValued(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000000100000000
pattern: 01000001000000000010000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 18
insert before 395 with       @Override public Class getType() { return proxy.getType(); }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000000010000000
pattern: 01000001000000000001000000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 19
insert before 396 with       @Override public void addValue(Object value) throws CmdLineException {
        proxy.addValue((String) value);
        warningGuardSpec.add(level, (String) value);
      }
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000000001000000
pattern: 01000001000000000000100000
try to fix hunk: 1
replace from 1497 with range 1 to
    private WarningGuardSpec warningGuards = null;

try to fix hunk: 7
insert before 26 with import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;

try to fix hunk: 20
insert before 485 with     Flags.warningGuardSpec.clear();

patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

