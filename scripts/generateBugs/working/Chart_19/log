---
Begin generate bug_id: Chart_19
num_of_hunks: 2
use working dir: ./working/data/Chart_19
Try to checkout Chart_19
build dir: ['./working/data/Chart_19/build', './working/data/Chart_19/build-tests']
init FileManager
trace file: source/org/jfree/chart/plot/CategoryPlot.java
trace file: source/org/jfree/chart/plot/CategoryPlot.java
trying to replace old failing tests
edit: replace from 743 range 20 at tests/org/jfree/chart/plot/junit/CategoryPlotTests.java
to
    public void testGetRangeAxisIndex$catena_0() {
        CategoryAxis domainAxis1 = new CategoryAxis("X1");
        NumberAxis rangeAxis1 = new NumberAxis("Y1");
        NumberAxis rangeAxis2 = new NumberAxis("Y2");
        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, 
                null);
        assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                                /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        plot.setRangeAxis(1, rangeAxis2);
        try{ assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis("Y2")));                                }catch(Throwable __SHOULD_BE_IGNORED){}
        boolean pass = false;
        try {
            plot.getRangeAxisIndex(null);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testGetRangeAxisIndex$catena_1() {
        CategoryAxis domainAxis1 = new CategoryAxis("X1");
        NumberAxis rangeAxis1 = new NumberAxis("Y1");
        NumberAxis rangeAxis2 = new NumberAxis("Y2");
        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, 
                null);
        try{ assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                               /***** ORIGINAL ASSERTION IS HERE *****/
        plot.setRangeAxis(1, rangeAxis2);
        try{ assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis("Y2")));                                }catch(Throwable __SHOULD_BE_IGNORED){}
        boolean pass = false;
        try {
            plot.getRangeAxisIndex(null);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testGetRangeAxisIndex$catena_2() {
        CategoryAxis domainAxis1 = new CategoryAxis("X1");
        NumberAxis rangeAxis1 = new NumberAxis("Y1");
        NumberAxis rangeAxis2 = new NumberAxis("Y2");
        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, 
                null);
        try{ assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        plot.setRangeAxis(1, rangeAxis2);
        assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                                /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis("Y2")));                                }catch(Throwable __SHOULD_BE_IGNORED){}
        boolean pass = false;
        try {
            plot.getRangeAxisIndex(null);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testGetRangeAxisIndex$catena_3() {
        CategoryAxis domainAxis1 = new CategoryAxis("X1");
        NumberAxis rangeAxis1 = new NumberAxis("Y1");
        NumberAxis rangeAxis2 = new NumberAxis("Y2");
        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, 
                null);
        try{ assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        plot.setRangeAxis(1, rangeAxis2);
        try{ assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis("Y2")));                                     /***** ORIGINAL ASSERTION IS HERE *****/
        boolean pass = false;
        try {
            plot.getRangeAxisIndex(null);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testGetRangeAxisIndex$catena_4() {
        CategoryAxis domainAxis1 = new CategoryAxis("X1");
        NumberAxis rangeAxis1 = new NumberAxis("Y1");
        NumberAxis rangeAxis2 = new NumberAxis("Y2");
        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, 
                null);
        try{ assertEquals(0, plot.getRangeAxisIndex(rangeAxis1));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2));                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        plot.setRangeAxis(1, rangeAxis2);
        try{ assertEquals(1, plot.getRangeAxisIndex(rangeAxis2));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis("Y2")));                                }catch(Throwable __SHOULD_BE_IGNORED){}
        boolean pass = false;
        try {
            plot.getRangeAxisIndex(null);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);                                                                                   /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 719 range 20 at tests/org/jfree/chart/plot/junit/CategoryPlotTests.java
to
    public void testGetDomainAxisIndex$catena_0() {
        CategoryAxis domainAxis1 = new CategoryAxis("X1");
        CategoryAxis domainAxis2 = new CategoryAxis("X2");
        NumberAxis rangeAxis1 = new NumberAxis("Y1");
        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, 
                null);
        assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                              /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        plot.setDomainAxis(1, domainAxis2);
        try{ assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis("X2")));                             }catch(Throwable __SHOULD_BE_IGNORED){}
        boolean pass = false;
        try {
            plot.getDomainAxisIndex(null);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testGetDomainAxisIndex$catena_1() {
        CategoryAxis domainAxis1 = new CategoryAxis("X1");
        CategoryAxis domainAxis2 = new CategoryAxis("X2");
        NumberAxis rangeAxis1 = new NumberAxis("Y1");
        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, 
                null);
        try{ assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                             /***** ORIGINAL ASSERTION IS HERE *****/
        plot.setDomainAxis(1, domainAxis2);
        try{ assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis("X2")));                             }catch(Throwable __SHOULD_BE_IGNORED){}
        boolean pass = false;
        try {
            plot.getDomainAxisIndex(null);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testGetDomainAxisIndex$catena_2() {
        CategoryAxis domainAxis1 = new CategoryAxis("X1");
        CategoryAxis domainAxis2 = new CategoryAxis("X2");
        NumberAxis rangeAxis1 = new NumberAxis("Y1");
        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, 
                null);
        try{ assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        plot.setDomainAxis(1, domainAxis2);
        assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                              /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis("X2")));                             }catch(Throwable __SHOULD_BE_IGNORED){}
        boolean pass = false;
        try {
            plot.getDomainAxisIndex(null);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testGetDomainAxisIndex$catena_3() {
        CategoryAxis domainAxis1 = new CategoryAxis("X1");
        CategoryAxis domainAxis2 = new CategoryAxis("X2");
        NumberAxis rangeAxis1 = new NumberAxis("Y1");
        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, 
                null);
        try{ assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        plot.setDomainAxis(1, domainAxis2);
        try{ assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis("X2")));                                  /***** ORIGINAL ASSERTION IS HERE *****/
        boolean pass = false;
        try {
            plot.getDomainAxisIndex(null);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        try{ assertTrue(pass);                                                                              }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testGetDomainAxisIndex$catena_4() {
        CategoryAxis domainAxis1 = new CategoryAxis("X1");
        CategoryAxis domainAxis2 = new CategoryAxis("X2");
        NumberAxis rangeAxis1 = new NumberAxis("Y1");
        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, 
                null);
        try{ assertEquals(0, plot.getDomainAxisIndex(domainAxis1));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, plot.getDomainAxisIndex(domainAxis2));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        plot.setDomainAxis(1, domainAxis2);
        try{ assertEquals(1, plot.getDomainAxisIndex(domainAxis2));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis("X2")));                             }catch(Throwable __SHOULD_BE_IGNORED){}
        boolean pass = false;
        try {
            plot.getDomainAxisIndex(null);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);                                                                                   /***** ORIGINAL ASSERTION IS HERE *****/
    }
trace file: tests/org/jfree/chart/plot/junit/CategoryPlotTests.java
new test num: 10
ori test num: 0
pattern: 00
patches are written to file
running tests...
used time: Finished in 47.42 seconds
Failing tests: 2
	org.jfree.chart.plot.junit.CategoryPlotTests::testGetRangeAxisIndex$catena_4
	org.jfree.chart.plot.junit.CategoryPlotTests::testGetDomainAxisIndex$catena_4
pattern: 01
try to fix hunk: 1
insert before 973 with         if (axis == null) {
            throw new IllegalArgumentException("Null 'axis' argument.");
        }

patches are written to file
running tests...
used time: Finished in 30.41 seconds
Failing tests: 1
	org.jfree.chart.plot.junit.CategoryPlotTests::testGetDomainAxisIndex$catena_4
No new failing tests but only 1 hunk
pattern: 10
try to fix hunk: 0
insert before 698 with         if (axis == null) {
            throw new IllegalArgumentException("Null 'axis' argument.");
        }

patches are written to file
running tests...
used time: Finished in 32.59 seconds
Failing tests: 1
	org.jfree.chart.plot.junit.CategoryPlotTests::testGetRangeAxisIndex$catena_4
No new failing tests but only 1 hunk
pattern: 11
try to fix hunk: 0
insert before 698 with         if (axis == null) {
            throw new IllegalArgumentException("Null 'axis' argument.");
        }

try to fix hunk: 1
insert before 973 with         if (axis == null) {
            throw new IllegalArgumentException("Null 'axis' argument.");
        }

patches are written to file
running tests...
used time: Finished in 28.82 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
Find 0 new bugs
