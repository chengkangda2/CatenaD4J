{
    "original": {
        "num_of_hunks": 2,
        "0": {
            "file_name": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
            "replaced_with": "      if (loopNode.isForEach()) {\n        errorReporter.error(\n            \"unsupported language extension: for each\",\n            sourceName,\n            loopNode.getLineno(), \"\", 0);\n",
            "patch_type": "insert",
            "next_line_no": 568
        },
        "1": {
            "file_name": "src/com/google/javascript/jscomp/parsing/IRFactory.java",
            "replaced_with": "        return newNode(Token.EXPR_RESULT, Node.newNumber(0));\n      }\n",
            "patch_type": "insert",
            "next_line_no": 570
        }
    },
    "method": {
        "failing_tests": [
            "com.google.javascript.jscomp.parsing.ParserTest::testForEach"
        ],
        "com.google.javascript.jscomp.parsing.ParserTest::testForEach": {
            "file_path": "test/com/google/javascript/jscomp/parsing/ParserTest.java",
            "Instance": "Begin: Pos(961, 10)\nEnd: Pos(972, 3)\nSource: /root/workbench/exportInfo/d4j_buggy/Closure_42/test//com/google/javascript/jscomp/parsing/ParserTest.java\nName: testForEach\nChilds: [StatementAssertion<Begin: Pos(962, 5), End: Pos(971, 52)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Closure_42/test//com/google/javascript/jscomp/parsing/ParserTest.java",
            "name": "testForEach",
            "begin": "Pos(961, 10)",
            "end": "Pos(972, 3)",
            "begin_line_no": 961,
            "end_line_no": 972,
            "child": [
                "Begin: Pos(962, 5)\nEnd: Pos(971, 52)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [],
            "func": {}
        }
    },
    "11": {
        "failing_tests": [
            "com.google.javascript.jscomp.parsing.ParserTest::testForEach"
        ]
    }
}