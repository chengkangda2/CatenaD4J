{
    "original": {
        "num_of_hunks": 4,
        "0": {
            "file_name": "src/java/org/apache/commons/math/fraction/ProperFractionFormat.java",
            "replaced_with": "        if (num.intValue() < 0) {\n",
            "patch_type": "insert",
            "next_line_no": 165
        },
        "1": {
            "file_name": "src/java/org/apache/commons/math/fraction/ProperFractionFormat.java",
            "replaced_with": "            pos.setIndex(initialIndex);\n            return null;\n        }\n",
            "patch_type": "insert",
            "next_line_no": 166
        },
        "2": {
            "file_name": "src/java/org/apache/commons/math/fraction/ProperFractionFormat.java",
            "replaced_with": "        if (den.intValue() < 0) {\n",
            "patch_type": "insert",
            "next_line_no": 200
        },
        "3": {
            "file_name": "src/java/org/apache/commons/math/fraction/ProperFractionFormat.java",
            "replaced_with": "            pos.setIndex(initialIndex);\n            return null;\n        }\n",
            "patch_type": "insert",
            "next_line_no": 201
        }
    },
    "method": {
        "failing_tests": [
            "org.apache.commons.math.fraction.FractionFormatTest::testParseProperInvalidMinus"
        ],
        "org.apache.commons.math.fraction.FractionFormatTest::testParseProperInvalidMinus": {
            "file_path": "src/test/org/apache/commons/math/fraction/FractionFormatTest.java",
            "Instance": "Begin: Pos(232, 12)\nEnd: Pos(247, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Math_106/src/test//org/apache/commons/math/fraction/FractionFormatTest.java\nName: testParseProperInvalidMinus\nChilds: [StatementAssertion<Begin: Pos(236, 13), End: Pos(236, 56)>,\nStatementAssertion<Begin: Pos(243, 13), End: Pos(243, 56)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Math_106/src/test//org/apache/commons/math/fraction/FractionFormatTest.java",
            "name": "testParseProperInvalidMinus",
            "begin": "Pos(232, 12)",
            "end": "Pos(247, 5)",
            "begin_line_no": 232,
            "end_line_no": 247,
            "child": [
                "Begin: Pos(236, 13)\nEnd: Pos(236, 56)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(243, 13)\nEnd: Pos(243, 56)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    public void testParseProperInvalidMinus$catena_0() {\n        String source = \"2 -2 / 3\";\n        try {\n            Fraction c = properFormat.parse(source);\n            fail(\"invalid minus in improper fraction.\");                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        } catch (ParseException ex) {\n            // expected\n        }\n        source = \"2 2 / -3\";\n        try {\n            Fraction c = properFormat.parse(source);\n            try{ fail(\"invalid minus in improper fraction.\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (ParseException ex) {\n            // expected\n        }\n    }",
                "    public void testParseProperInvalidMinus$catena_1() {\n        String source = \"2 -2 / 3\";\n        try {\n            Fraction c = properFormat.parse(source);\n            try{ fail(\"invalid minus in improper fraction.\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (ParseException ex) {\n            // expected\n        }\n        source = \"2 2 / -3\";\n        try {\n            Fraction c = properFormat.parse(source);\n            fail(\"invalid minus in improper fraction.\");                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        } catch (ParseException ex) {\n            // expected\n        }\n    }"
            ],
            "func": {
                "0": "    public void testParseProperInvalidMinus$catena_0() {\n        String source = \"2 -2 / 3\";\n        try {\n            Fraction c = properFormat.parse(source);\n            fail(\"invalid minus in improper fraction.\");                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        } catch (ParseException ex) {\n            // expected\n        }\n        source = \"2 2 / -3\";\n        try {\n            Fraction c = properFormat.parse(source);\n            try{ fail(\"invalid minus in improper fraction.\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (ParseException ex) {\n            // expected\n        }\n    }",
                "1": "    public void testParseProperInvalidMinus$catena_1() {\n        String source = \"2 -2 / 3\";\n        try {\n            Fraction c = properFormat.parse(source);\n            try{ fail(\"invalid minus in improper fraction.\");                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        } catch (ParseException ex) {\n            // expected\n        }\n        source = \"2 2 / -3\";\n        try {\n            Fraction c = properFormat.parse(source);\n            fail(\"invalid minus in improper fraction.\");                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        } catch (ParseException ex) {\n            // expected\n        }\n    }"
            }
        }
    },
    "0011": {
        "failing_tests": [
            "org.apache.commons.math.fraction.FractionFormatTest::testParseProperInvalidMinus$catena_1"
        ]
    },
    "1100": {
        "failing_tests": [
            "org.apache.commons.math.fraction.FractionFormatTest::testParseProperInvalidMinus$catena_0"
        ]
    }
}