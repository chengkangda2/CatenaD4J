{
    "original": {
        "num_of_hunks": 9,
        "0": {
            "file_name": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
            "from_line_no": 86,
            "to_line_no": 86,
            "replaced_with": "        return escapeJavaStyleString(str, false, false);\n",
            "replaced": "        return escapeJavaStyleString(str, false);\n",
            "patch_type": "replace",
            "next_line_no": 87
        },
        "1": {
            "file_name": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
            "from_line_no": 102,
            "to_line_no": 102,
            "replaced_with": "        escapeJavaStyleString(out, str, false, false);\n",
            "replaced": "        escapeJavaStyleString(out, str, false);\n",
            "patch_type": "replace",
            "next_line_no": 103
        },
        "2": {
            "file_name": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
            "from_line_no": 127,
            "to_line_no": 127,
            "replaced_with": "        return escapeJavaStyleString(str, true, true);\n",
            "replaced": "        return escapeJavaStyleString(str, true);\n",
            "patch_type": "replace",
            "next_line_no": 128
        },
        "3": {
            "file_name": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
            "from_line_no": 143,
            "to_line_no": 143,
            "replaced_with": "        escapeJavaStyleString(out, str, true, true);\n",
            "replaced": "        escapeJavaStyleString(out, str, true);\n",
            "patch_type": "replace",
            "next_line_no": 144
        },
        "4": {
            "file_name": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
            "from_line_no": 154,
            "to_line_no": 154,
            "replaced_with": "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes, boolean escapeForwardSlash) {\n",
            "replaced": "    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {\n",
            "patch_type": "replace",
            "next_line_no": 155
        },
        "5": {
            "file_name": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
            "from_line_no": 160,
            "to_line_no": 160,
            "replaced_with": "            escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);\n",
            "replaced": "            escapeJavaStyleString(writer, str, escapeSingleQuotes);\n",
            "patch_type": "replace",
            "next_line_no": 161
        },
        "6": {
            "file_name": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
            "from_line_no": 178,
            "to_line_no": 178,
            "replaced_with": "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote,\n            boolean escapeForwardSlash) throws IOException {\n",
            "replaced": "    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {\n",
            "patch_type": "replace",
            "next_line_no": 179
        },
        "7": {
            "file_name": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
            "replaced_with": "                        if (escapeForwardSlash) {\n",
            "patch_type": "insert",
            "next_line_no": 244
        },
        "8": {
            "file_name": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
            "replaced_with": "                        }\n",
            "patch_type": "insert",
            "next_line_no": 245
        }
    },
    "method": {
        "failing_tests": [
            "org.apache.commons.lang.StringEscapeUtilsTest::testEscapeJavaWithSlash"
        ],
        "org.apache.commons.lang.StringEscapeUtilsTest::testEscapeJavaWithSlash": {
            "file_path": "src/test/org/apache/commons/lang/StringEscapeUtilsTest.java",
            "Instance": "Begin: Pos(103, 12)\nEnd: Pos(114, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Lang_46/src/test//org/apache/commons/lang/StringEscapeUtilsTest.java\nName: testEscapeJavaWithSlash\nChilds: [StatementAssertion<Begin: Pos(113, 9), End: Pos(113, 39)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Lang_46/src/test//org/apache/commons/lang/StringEscapeUtilsTest.java",
            "name": "testEscapeJavaWithSlash",
            "begin": "Pos(103, 12)",
            "end": "Pos(114, 5)",
            "begin_line_no": 103,
            "end_line_no": 114,
            "child": [
                "Begin: Pos(113, 9)\nEnd: Pos(113, 39)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [],
            "func": {}
        }
    },
    "111111111": {
        "failing_tests": [
            "org.apache.commons.lang.StringEscapeUtilsTest::testEscapeJavaWithSlash"
        ]
    }
}