---
Begin generate bug_id: Time_18
num_of_hunks: 2
use working dir: ./working/data/Time_18
Try to checkout Time_18
build dir: ['./working/data/Time_18/build/classes', './working/data/Time_18/build/tests']
init FileManager
trace file: src/main/java/org/joda/time/chrono/GJChronology.java
trace file: src/main/java/org/joda/time/chrono/GJChronology.java
trying to replace old failing tests
edit: replace from 494 range 7 at src/test/java/org/joda/time/chrono/TestGJChronology.java
to
    public void testLeapYearRulesConstruction$catena_0() {
        // 1500 not leap in Gregorian, but is leap in Julian
        DateMidnight dt = new DateMidnight(1500, 2, 29, GJChronology.getInstanceUTC());
        assertEquals(dt.getYear(), 1500);                                                                   /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(dt.getMonthOfYear(), 2);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(dt.getDayOfMonth(), 29);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testLeapYearRulesConstruction$catena_1() {
        // 1500 not leap in Gregorian, but is leap in Julian
        DateMidnight dt = new DateMidnight(1500, 2, 29, GJChronology.getInstanceUTC());
        try{ assertEquals(dt.getYear(), 1500);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(dt.getMonthOfYear(), 2);                                                               /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(dt.getDayOfMonth(), 29);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testLeapYearRulesConstruction$catena_2() {
        // 1500 not leap in Gregorian, but is leap in Julian
        DateMidnight dt = new DateMidnight(1500, 2, 29, GJChronology.getInstanceUTC());
        try{ assertEquals(dt.getYear(), 1500);                                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(dt.getMonthOfYear(), 2);                                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(dt.getDayOfMonth(), 29);                                                               /***** ORIGINAL ASSERTION IS HERE *****/
    }
trace file: src/test/java/org/joda/time/chrono/TestGJChronology.java
new test num: 3
ori test num: 0
pattern: 00
patches are written to file
running tests...
used time: Finished in 45.73 seconds
Failing tests: 3
	org.joda.time.chrono.TestGJChronology::testLeapYearRulesConstruction$catena_0
	org.joda.time.chrono.TestGJChronology::testLeapYearRulesConstruction$catena_1
	org.joda.time.chrono.TestGJChronology::testLeapYearRulesConstruction$catena_2
pattern: 01
try to fix hunk: 1
insert before 367 with         } catch (IllegalFieldValueException ex) {
            if (monthOfYear != 2 || dayOfMonth != 29) {
                throw ex;
            }
            instant = iGregorianChronology.getDateTimeMillis
                (year, monthOfYear, 28,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
            if (instant >= iCutoverMillis) {
                throw ex;
            }
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 10
try to fix hunk: 0
insert before 364 with         try {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 11
try to fix hunk: 0
insert before 364 with         try {

try to fix hunk: 1
insert before 367 with         } catch (IllegalFieldValueException ex) {
            if (monthOfYear != 2 || dayOfMonth != 29) {
                throw ex;
            }
            instant = iGregorianChronology.getDateTimeMillis
                (year, monthOfYear, 28,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
            if (instant >= iCutoverMillis) {
                throw ex;
            }
        }

patches are written to file
running tests...
used time: Finished in 37.06 seconds
Failing tests: 0
Can independently fix ['org.joda.time.chrono.TestGJChronology::testLeapYearRulesConstruction$catena_1', 'org.joda.time.chrono.TestGJChronology::testLeapYearRulesConstruction$catena_0', 'org.joda.time.chrono.TestGJChronology::testLeapYearRulesConstruction$catena_2']
select new bug
Pattern: 11
failing tests: org.joda.time.chrono.TestGJChronology::testLeapYearRulesConstruction$catena_1@org.joda.time.chrono.TestGJChronology::testLeapYearRulesConstruction$catena_0@org.joda.time.chrono.TestGJChronology::testLeapYearRulesConstruction$catena_2
Find 1 new bugs
