{
    "original": {
        "num_of_hunks": 2,
        "0": {
            "file_name": "src/main/java/org/apache/commons/math3/util/FastMath.java",
            "replaced_with": "    private static final double TWO_POWER_53 = 2 * TWO_POWER_52;\n",
            "patch_type": "insert",
            "next_line_no": 313
        },
        "1": {
            "file_name": "src/main/java/org/apache/commons/math3/util/FastMath.java",
            "from_line_no": 1541,
            "to_line_no": 1541,
            "replaced_with": "            if (y >= TWO_POWER_53 || y <= -TWO_POWER_53) {\n",
            "replaced": "            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {\n",
            "patch_type": "replace",
            "next_line_no": 1542
        }
    },
    "method": {
        "failing_tests": [
            "org.apache.commons.math3.util.FastMathTest::testMath904"
        ],
        "org.apache.commons.math3.util.FastMathTest::testMath904": {
            "file_path": "src/test/java/org/apache/commons/math3/util/FastMathTest.java",
            "Instance": "Begin: Pos(160, 5)\nEnd: Pos(168, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Math_15/src/test/java//org/apache/commons/math3/util/FastMathTest.java\nName: testMath904\nChilds: [StatementAssertion<Begin: Pos(164, 9), End: Pos(165, 51)>,\nStatementAssertion<Begin: Pos(166, 9), End: Pos(167, 52)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Math_15/src/test/java//org/apache/commons/math3/util/FastMathTest.java",
            "name": "testMath904",
            "begin": "Pos(160, 5)",
            "end": "Pos(168, 5)",
            "begin_line_no": 160,
            "end_line_no": 168,
            "child": [
                "Begin: Pos(164, 9)\nEnd: Pos(165, 51)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(166, 9)\nEnd: Pos(167, 52)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    @Test\n    public void testMath904$catena_0() {\n        final double x = -1;\n        final double y = (5 + 1e-15) * 1e15;\n        Assert.assertEquals(Math.pow(x, y),\n                            FastMath.pow(x, y), 0);                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ Assert.assertEquals(Math.pow(x, -y),\n                            FastMath.pow(x, -y), 0);                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    @Test\n    public void testMath904$catena_1() {\n        final double x = -1;\n        final double y = (5 + 1e-15) * 1e15;\n        try{ Assert.assertEquals(Math.pow(x, y),\n                            FastMath.pow(x, y), 0);                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        Assert.assertEquals(Math.pow(x, -y),\n                            FastMath.pow(x, -y), 0);                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            ],
            "func": {
                "0": "    @Test\n    public void testMath904$catena_0() {\n        final double x = -1;\n        final double y = (5 + 1e-15) * 1e15;\n        Assert.assertEquals(Math.pow(x, y),\n                            FastMath.pow(x, y), 0);                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ Assert.assertEquals(Math.pow(x, -y),\n                            FastMath.pow(x, -y), 0);                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "1": "    @Test\n    public void testMath904$catena_1() {\n        final double x = -1;\n        final double y = (5 + 1e-15) * 1e15;\n        try{ Assert.assertEquals(Math.pow(x, y),\n                            FastMath.pow(x, y), 0);                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n        Assert.assertEquals(Math.pow(x, -y),\n                            FastMath.pow(x, -y), 0);                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            }
        }
    },
    "11": {
        "failing_tests": [
            "org.apache.commons.math3.util.FastMathTest::testMath904$catena_1",
            "org.apache.commons.math3.util.FastMathTest::testMath904$catena_0"
        ]
    }
}