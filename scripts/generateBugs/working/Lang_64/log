---
Begin generate bug_id: Lang_64
num_of_hunks: 5
use working dir: ./working/data/Lang_64
Try to checkout Lang_64
build dir: ['./working/data/Lang_64/target/classes', './working/data/Lang_64/target/tests']
init FileManager
trace file: src/java/org/apache/commons/lang/enums/ValuedEnum.java
trace file: src/java/org/apache/commons/lang/enums/ValuedEnum.java
trace file: src/java/org/apache/commons/lang/enums/ValuedEnum.java
trace file: src/java/org/apache/commons/lang/enums/ValuedEnum.java
trace file: src/java/org/apache/commons/lang/enums/ValuedEnum.java
trying to replace old failing tests
new test num: 0
ori test num: 1
pattern: 00000
patches are written to file
running tests...
used time: Finished in 28.16 seconds
Failing tests: 1
	org.apache.commons.lang.enums.ValuedEnumTest::testCompareTo_otherEnumType
pattern: 00001
try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 00010
try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 00100
try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 01000
try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 10000
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 00011
try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 00101
try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 00110
try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 01001
try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 01010
try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 01100
try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 10001
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 10010
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 10100
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 11000
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 00111
try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 01011
try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 01101
try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 01110
try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 10011
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 10101
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 10110
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 11001
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 11010
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 11100
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 01111
try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
used time: Finished in 24.88 seconds
Failing tests: 1
	org.apache.commons.lang.enums.ValuedEnumTest::testCompareTo_otherEnumType
Can independently fix []
Could not fix independently
pattern: 10111
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 11011
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 11101
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 11110
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 11111
try to fix hunk: 0
insert before 183 with         if (other == this) {
            return 0;
        }
        if (other.getClass() != this.getClass()) {
            if (other.getClass().getName().equals(this.getClass().getName())) {
                return iValue - getValueInOtherClassLoader(other);
            }
            throw new ClassCastException(
                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
        }

try to fix hunk: 1
insert before 192 with     private int getValueInOtherClassLoader(Object other) {
        try {
            Method mth = other.getClass().getMethod("getValue", null);
            Integer value = (Integer) mth.invoke(other, null);
            return value.intValue();
        } catch (NoSuchMethodException e) {

try to fix hunk: 2
insert before 193 with         } catch (IllegalAccessException e) {

try to fix hunk: 3
insert before 194 with         } catch (InvocationTargetException e) {

try to fix hunk: 4
insert before 195 with         }
        throw new IllegalStateException("This should not happen");
    }

patches are written to file
running tests...
used time: Finished in 24.82 seconds
Failing tests: 0
Can independently fix ['org.apache.commons.lang.enums.ValuedEnumTest::testCompareTo_otherEnumType']
select new bug
Pattern: 11111
failing tests: org.apache.commons.lang.enums.ValuedEnumTest::testCompareTo_otherEnumType
Find 1 new bugs
