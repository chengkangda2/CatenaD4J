---
Begin generate bug_id: Closure_169
num_of_hunks: 32
NOTICE: may not contains full fix patterns for hunks are too much (32 hunks)
timeout for running: 3600
use working dir: ./working/data/Closure_169
Try to checkout Closure_169
build dir: ['./working/data/Closure_169/build/classes', './working/data/Closure_169/build/test']
init FileManager
trace file: src/com/google/javascript/rhino/jstype/ArrowType.java
trace file: src/com/google/javascript/rhino/jstype/FunctionType.java
trace file: src/com/google/javascript/rhino/jstype/JSType.java
trace file: src/com/google/javascript/rhino/jstype/RecordType.java
trace file: src/com/google/javascript/rhino/jstype/UnionType.java
trying to replace old failing tests
edit: replace from 124 range 18 at test/com/google/javascript/rhino/jstype/RecordTypeTest.java
to
  public void testSubtypeWithUnknowns2$catena_0() throws Exception {
    JSType recordA = new RecordTypeBuilder(registry)
        .addProperty("a",
            new FunctionBuilder(registry)
            .withReturnType(NUMBER_TYPE)
            .build(),
            null)
        .build();
    JSType recordB = new RecordTypeBuilder(registry)
        .addProperty("a",
            new FunctionBuilder(registry)
            .withReturnType(UNKNOWN_TYPE)
            .build(),
            null)
        .build();
    assertTrue(recordA.isSubtype(recordB));                                                                 /***** ORIGINAL ASSERTION IS HERE *****/
    try{ assertTrue(recordB.isSubtype(recordA));                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
  }   public void testSubtypeWithUnknowns2$catena_1() throws Exception {
    JSType recordA = new RecordTypeBuilder(registry)
        .addProperty("a",
            new FunctionBuilder(registry)
            .withReturnType(NUMBER_TYPE)
            .build(),
            null)
        .build();
    JSType recordB = new RecordTypeBuilder(registry)
        .addProperty("a",
            new FunctionBuilder(registry)
            .withReturnType(UNKNOWN_TYPE)
            .build(),
            null)
        .build();
    try{ assertTrue(recordA.isSubtype(recordB));                                                            }catch(Throwable __SHOULD_BE_IGNORED){}
    assertTrue(recordB.isSubtype(recordA));                                                                 /***** ORIGINAL ASSERTION IS HERE *****/
  }
trace file: test/com/google/javascript/rhino/jstype/RecordTypeTest.java
new test num: 2
ori test num: 1
pattern: 00000000000000000000000000000000
patches are written to file
running tests...
used time: Finished in 286.62 seconds
Failing tests: 3
	com.google.javascript.jscomp.TypeCheckTest::testIssue791
	com.google.javascript.rhino.jstype.RecordTypeTest::testSubtypeWithUnknowns2$catena_0
	com.google.javascript.rhino.jstype.RecordTypeTest::testSubtypeWithUnknowns2$catena_1
processed: 00000000000000000000000000000000
pattern: 10000000000000000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000000000000
pattern: 01000000000000000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000000000000
pattern: 00100000000000000000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000000000000
pattern: 00010000000000000000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000000000000
pattern: 00001000000000000000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000000000000
pattern: 00000100000000000000000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000000000000
pattern: 00000010000000000000000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000000000000
pattern: 00000001000000000000000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000000000000
pattern: 00000000100000000000000000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000000000000
pattern: 00000000010000000000000000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000000000000
pattern: 00000000001000000000000000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000000000000
pattern: 00000000000100000000000000000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000000000000000
pattern: 00000000000010000000000000000000
try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000000000000000000
pattern: 00000000000001000000000000000000
try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000000000000000000
pattern: 00000000000000100000000000000000
try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100000000000000000
pattern: 00000000000000010000000000000000
try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010000000000000000
pattern: 00000000000000001000000000000000
try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001000000000000000
pattern: 00000000000000000100000000000000
try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000100000000000000
pattern: 00000000000000000010000000000000
try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000010000000000000
pattern: 00000000000000000001000000000000
try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
used time: Finished in 264.41 seconds
Failing tests: 3
	com.google.javascript.jscomp.TypeCheckTest::testIssue791
	com.google.javascript.rhino.jstype.RecordTypeTest::testSubtypeWithUnknowns2$catena_0
	com.google.javascript.rhino.jstype.RecordTypeTest::testSubtypeWithUnknowns2$catena_1
No new failing tests but only 1 hunk
processed: 00000000000000000001000000000000
pattern: 00000000000000000000100000000000
try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000100000000000
pattern: 00000000000000000000010000000000
try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000010000000000
pattern: 00000000000000000000001000000000
try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000001000000000
pattern: 00000000000000000000000100000000
try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000100000000
pattern: 00000000000000000000000010000000
try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000010000000
pattern: 00000000000000000000000001000000
try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
used time: Finished in 254.92 seconds
Failing tests: 5
	com.google.javascript.jscomp.TypeCheckTest::testIssue791
	com.google.javascript.rhino.jstype.JSTypeTest::testRecordTypeGreatestSubType6
	com.google.javascript.rhino.jstype.JSTypeTest::testRecordTypeGreatestSubType8
	com.google.javascript.rhino.jstype.RecordTypeTest::testSubtypeWithUnknowns2$catena_0
	com.google.javascript.rhino.jstype.RecordTypeTest::testSubtypeWithUnknowns2$catena_1
Includes new failing tests, set to unusable
processed: 00000000000000000000000001000000
pattern: 00000000000000000000000000100000
try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000000100000
pattern: 00000000000000000000000000010000
try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000000010000
pattern: 00000000000000000000000000001000
try to fix hunk: 28
replace from 334 with range 2 to
      UnionType that, EquivalenceMethod eqMethod) {
    if (eqMethod == EquivalenceMethod.IDENTITY

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000000001000
pattern: 00000000000000000000000000000100
try to fix hunk: 29
replace from 340 with range 1 to
      if (!hasAlternate(alternate, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000000000100
pattern: 00000000000000000000000000000010
try to fix hunk: 30
replace from 347 with range 1 to
  private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000000000010
pattern: 00000000000000000000000000000001
try to fix hunk: 31
replace from 349 with range 1 to
      if (alternate.checkEquivalenceHelper(type, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000000000000000001
pattern: 11000000000000000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000000000000000000
pattern: 10100000000000000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000000000000000000
pattern: 10010000000000000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000000000000000000
pattern: 10001000000000000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000000000000000000
pattern: 10000100000000000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000000000000000000
pattern: 10000010000000000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000000000000000000
pattern: 10000001000000000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000000000000000000
pattern: 10000000100000000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000000000000000000
pattern: 10000000010000000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000000000000000000
pattern: 10000000001000000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000000000000000000
pattern: 10000000000100000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000000000000000000
pattern: 10000000000010000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000000000000000000
pattern: 10000000000001000000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000000000000000000
pattern: 10000000000000100000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100000000000000000
pattern: 10000000000000010000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010000000000000000
pattern: 10000000000000001000000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001000000000000000
pattern: 10000000000000000100000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000100000000000000
pattern: 10000000000000000010000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000010000000000000
pattern: 10000000000000000001000000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000001000000000000
pattern: 10000000000000000000100000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000100000000000
pattern: 10000000000000000000010000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000010000000000
pattern: 10000000000000000000001000000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000001000000000
pattern: 10000000000000000000000100000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000100000000
pattern: 10000000000000000000000010000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000010000000
pattern: 10000000000000000000000001000000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000001000000
pattern: 10000000000000000000000000100000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000000100000
pattern: 10000000000000000000000000010000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000000010000
pattern: 10000000000000000000000000001000
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 28
replace from 334 with range 2 to
      UnionType that, EquivalenceMethod eqMethod) {
    if (eqMethod == EquivalenceMethod.IDENTITY

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000000001000
pattern: 10000000000000000000000000000100
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 29
replace from 340 with range 1 to
      if (!hasAlternate(alternate, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000000000100
pattern: 10000000000000000000000000000010
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 30
replace from 347 with range 1 to
  private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000000000010
pattern: 10000000000000000000000000000001
try to fix hunk: 0
replace from 177 with range 1 to
  boolean hasEqualParameters(ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 31
replace from 349 with range 1 to
      if (alternate.checkEquivalenceHelper(type, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000000000000000001
pattern: 01100000000000000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000000000000000000
pattern: 01010000000000000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000000000000000000
pattern: 01001000000000000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000000000000000000
pattern: 01000100000000000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000000000000000000
pattern: 01000010000000000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000000000000000000
pattern: 01000001000000000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000000000000000000000
pattern: 01000000100000000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000100000000000000000000000
pattern: 01000000010000000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000010000000000000000000000
pattern: 01000000001000000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000001000000000000000000000
pattern: 01000000000100000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000100000000000000000000
pattern: 01000000000010000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000010000000000000000000
pattern: 01000000000001000000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000001000000000000000000
pattern: 01000000000000100000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000100000000000000000
pattern: 01000000000000010000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000010000000000000000
pattern: 01000000000000001000000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000001000000000000000
pattern: 01000000000000000100000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000100000000000000
pattern: 01000000000000000010000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000010000000000000
pattern: 01000000000000000001000000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000001000000000000
pattern: 01000000000000000000100000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000100000000000
pattern: 01000000000000000000010000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000010000000000
pattern: 01000000000000000000001000000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000001000000000
pattern: 01000000000000000000000100000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000100000000
pattern: 01000000000000000000000010000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000010000000
pattern: 01000000000000000000000001000000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000001000000
pattern: 01000000000000000000000000100000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000000100000
pattern: 01000000000000000000000000010000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000000010000
pattern: 01000000000000000000000000001000
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 28
replace from 334 with range 2 to
      UnionType that, EquivalenceMethod eqMethod) {
    if (eqMethod == EquivalenceMethod.IDENTITY

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000000001000
pattern: 01000000000000000000000000000100
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 29
replace from 340 with range 1 to
      if (!hasAlternate(alternate, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000000000100
pattern: 01000000000000000000000000000010
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 30
replace from 347 with range 1 to
  private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000000000010
pattern: 01000000000000000000000000000001
try to fix hunk: 1
replace from 187 with range 1 to
                otherParamType, eqMethod)) {

try to fix hunk: 31
replace from 349 with range 1 to
      if (alternate.checkEquivalenceHelper(type, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000000000000000001
pattern: 00110000000000000000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000000000000000000000000000
pattern: 00101000000000000000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000000000000000000000000000
pattern: 00100100000000000000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100000000000000000000000000
pattern: 00100010000000000000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010000000000000000000000000
pattern: 00100001000000000000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001000000000000000000000000
pattern: 00100000100000000000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000100000000000000000000000
pattern: 00100000010000000000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000010000000000000000000000
pattern: 00100000001000000000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000001000000000000000000000
pattern: 00100000000100000000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000100000000000000000000
pattern: 00100000000010000000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000010000000000000000000
pattern: 00100000000001000000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000001000000000000000000
pattern: 00100000000000100000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000100000000000000000
pattern: 00100000000000010000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000010000000000000000
pattern: 00100000000000001000000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000001000000000000000
pattern: 00100000000000000100000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000100000000000000
pattern: 00100000000000000010000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000010000000000000
pattern: 00100000000000000001000000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000001000000000000
pattern: 00100000000000000000100000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000100000000000
pattern: 00100000000000000000010000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000010000000000
pattern: 00100000000000000000001000000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000001000000000
pattern: 00100000000000000000000100000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000100000000
pattern: 00100000000000000000000010000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000010000000
pattern: 00100000000000000000000001000000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000001000000
pattern: 00100000000000000000000000100000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000000100000
pattern: 00100000000000000000000000010000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000000010000
pattern: 00100000000000000000000000001000
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 28
replace from 334 with range 2 to
      UnionType that, EquivalenceMethod eqMethod) {
    if (eqMethod == EquivalenceMethod.IDENTITY

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000000001000
pattern: 00100000000000000000000000000100
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 29
replace from 340 with range 1 to
      if (!hasAlternate(alternate, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000000000100
pattern: 00100000000000000000000000000010
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 30
replace from 347 with range 1 to
  private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000000000010
pattern: 00100000000000000000000000000001
try to fix hunk: 2
replace from 204 with range 1 to
      ArrowType that, EquivalenceMethod eqMethod) {

try to fix hunk: 31
replace from 349 with range 1 to
      if (alternate.checkEquivalenceHelper(type, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000000000000001
pattern: 00011000000000000000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000000000000000000000000000
pattern: 00010100000000000000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100000000000000000000000000
pattern: 00010010000000000000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010000000000000000000000000
pattern: 00010001000000000000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001000000000000000000000000
pattern: 00010000100000000000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000100000000000000000000000
pattern: 00010000010000000000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000010000000000000000000000
pattern: 00010000001000000000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000001000000000000000000000
pattern: 00010000000100000000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000100000000000000000000
pattern: 00010000000010000000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000010000000000000000000
pattern: 00010000000001000000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000001000000000000000000
pattern: 00010000000000100000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000100000000000000000
pattern: 00010000000000010000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000010000000000000000
pattern: 00010000000000001000000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000001000000000000000
pattern: 00010000000000000100000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000100000000000000
pattern: 00010000000000000010000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000010000000000000
pattern: 00010000000000000001000000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000001000000000000
pattern: 00010000000000000000100000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000100000000000
pattern: 00010000000000000000010000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000010000000000
pattern: 00010000000000000000001000000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000001000000000
pattern: 00010000000000000000000100000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000100000000
pattern: 00010000000000000000000010000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000010000000
pattern: 00010000000000000000000001000000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000001000000
pattern: 00010000000000000000000000100000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000000100000
pattern: 00010000000000000000000000010000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000000010000
pattern: 00010000000000000000000000001000
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 28
replace from 334 with range 2 to
      UnionType that, EquivalenceMethod eqMethod) {
    if (eqMethod == EquivalenceMethod.IDENTITY

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000000001000
pattern: 00010000000000000000000000000100
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 29
replace from 340 with range 1 to
      if (!hasAlternate(alternate, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000000000100
pattern: 00010000000000000000000000000010
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 30
replace from 347 with range 1 to
  private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000000000010
pattern: 00010000000000000000000000000001
try to fix hunk: 3
replace from 206 with range 1 to
    if (!returnType.checkEquivalenceHelper(that.returnType, eqMethod)) {

try to fix hunk: 31
replace from 349 with range 1 to
      if (alternate.checkEquivalenceHelper(type, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000000000000000001
pattern: 00001100000000000000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001100000000000000000000000000
pattern: 00001010000000000000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001010000000000000000000000000
pattern: 00001001000000000000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001001000000000000000000000000
pattern: 00001000100000000000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000100000000000000000000000
pattern: 00001000010000000000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000010000000000000000000000
pattern: 00001000001000000000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000001000000000000000000000
pattern: 00001000000100000000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000100000000000000000000
pattern: 00001000000010000000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000010000000000000000000
pattern: 00001000000001000000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000001000000000000000000
pattern: 00001000000000100000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000100000000000000000
pattern: 00001000000000010000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000010000000000000000
pattern: 00001000000000001000000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000001000000000000000
pattern: 00001000000000000100000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000100000000000000
pattern: 00001000000000000010000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000010000000000000
pattern: 00001000000000000001000000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000001000000000000
pattern: 00001000000000000000100000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000100000000000
pattern: 00001000000000000000010000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000010000000000
pattern: 00001000000000000000001000000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000001000000000
pattern: 00001000000000000000000100000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000100000000
pattern: 00001000000000000000000010000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000010000000
pattern: 00001000000000000000000001000000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000001000000
pattern: 00001000000000000000000000100000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000000100000
pattern: 00001000000000000000000000010000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000000010000
pattern: 00001000000000000000000000001000
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 28
replace from 334 with range 2 to
      UnionType that, EquivalenceMethod eqMethod) {
    if (eqMethod == EquivalenceMethod.IDENTITY

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000000001000
pattern: 00001000000000000000000000000100
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 29
replace from 340 with range 1 to
      if (!hasAlternate(alternate, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000000000100
pattern: 00001000000000000000000000000010
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 30
replace from 347 with range 1 to
  private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000000000010
pattern: 00001000000000000000000000000001
try to fix hunk: 4
replace from 209 with range 1 to
    return hasEqualParameters(that, eqMethod);

try to fix hunk: 31
replace from 349 with range 1 to
      if (alternate.checkEquivalenceHelper(type, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000000000000001
pattern: 00000110000000000000000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000110000000000000000000000000
pattern: 00000101000000000000000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000101000000000000000000000000
pattern: 00000100100000000000000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100100000000000000000000000
pattern: 00000100010000000000000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100010000000000000000000000
pattern: 00000100001000000000000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100001000000000000000000000
pattern: 00000100000100000000000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000100000000000000000000
pattern: 00000100000010000000000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000010000000000000000000
pattern: 00000100000001000000000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000001000000000000000000
pattern: 00000100000000100000000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000100000000000000000
pattern: 00000100000000010000000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000010000000000000000
pattern: 00000100000000001000000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000001000000000000000
pattern: 00000100000000000100000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000100000000000000
pattern: 00000100000000000010000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000010000000000000
pattern: 00000100000000000001000000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000001000000000000
pattern: 00000100000000000000100000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000100000000000
pattern: 00000100000000000000010000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000010000000000
pattern: 00000100000000000000001000000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000001000000000
pattern: 00000100000000000000000100000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000100000000
pattern: 00000100000000000000000010000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000010000000
pattern: 00000100000000000000000001000000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000001000000
pattern: 00000100000000000000000000100000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000000100000
pattern: 00000100000000000000000000010000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000000010000
pattern: 00000100000000000000000000001000
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 28
replace from 334 with range 2 to
      UnionType that, EquivalenceMethod eqMethod) {
    if (eqMethod == EquivalenceMethod.IDENTITY

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000000001000
pattern: 00000100000000000000000000000100
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 29
replace from 340 with range 1 to
      if (!hasAlternate(alternate, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000000000100
pattern: 00000100000000000000000000000010
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 30
replace from 347 with range 1 to
  private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000000000010
pattern: 00000100000000000000000000000001
try to fix hunk: 5
replace from 792 with range 1 to
    if (call.hasEqualParameters(other.call, EquivalenceMethod.IDENTITY)) {

try to fix hunk: 31
replace from 349 with range 1 to
      if (alternate.checkEquivalenceHelper(type, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000000000000001
pattern: 00000011000000000000000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000011000000000000000000000000
pattern: 00000010100000000000000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010100000000000000000000000
pattern: 00000010010000000000000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010010000000000000000000000
pattern: 00000010001000000000000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010001000000000000000000000
pattern: 00000010000100000000000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000100000000000000000000
pattern: 00000010000010000000000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000010000000000000000000
pattern: 00000010000001000000000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000001000000000000000000
pattern: 00000010000000100000000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000100000000000000000
pattern: 00000010000000010000000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000010000000000000000
pattern: 00000010000000001000000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000001000000000000000
pattern: 00000010000000000100000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000100000000000000
pattern: 00000010000000000010000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000010000000000000
pattern: 00000010000000000001000000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000001000000000000
pattern: 00000010000000000000100000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000100000000000
pattern: 00000010000000000000010000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000010000000000
pattern: 00000010000000000000001000000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000001000000000
pattern: 00000010000000000000000100000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000100000000
pattern: 00000010000000000000000010000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000010000000
pattern: 00000010000000000000000001000000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000001000000
pattern: 00000010000000000000000000100000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000000100000
pattern: 00000010000000000000000000010000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000000010000
pattern: 00000010000000000000000000001000
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 28
replace from 334 with range 2 to
      UnionType that, EquivalenceMethod eqMethod) {
    if (eqMethod == EquivalenceMethod.IDENTITY

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000000001000
pattern: 00000010000000000000000000000100
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 29
replace from 340 with range 1 to
      if (!hasAlternate(alternate, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000000000100
pattern: 00000010000000000000000000000010
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 30
replace from 347 with range 1 to
  private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000000000010
pattern: 00000010000000000000000000000001
try to fix hunk: 6
replace from 890 with range 1 to
      FunctionType that, EquivalenceMethod eqMethod) {

try to fix hunk: 31
replace from 349 with range 1 to
      if (alternate.checkEquivalenceHelper(type, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000000000000001
pattern: 00000001100000000000000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001100000000000000000000000
pattern: 00000001010000000000000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001010000000000000000000000
pattern: 00000001001000000000000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001001000000000000000000000
pattern: 00000001000100000000000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000100000000000000000000
pattern: 00000001000010000000000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000010000000000000000000
pattern: 00000001000001000000000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000001000000000000000000
pattern: 00000001000000100000000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000100000000000000000
pattern: 00000001000000010000000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000010000000000000000
pattern: 00000001000000001000000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000001000000000000000
pattern: 00000001000000000100000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000100000000000000
pattern: 00000001000000000010000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000010000000000000
pattern: 00000001000000000001000000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000001000000000000
pattern: 00000001000000000000100000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000100000000000
pattern: 00000001000000000000010000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000010000000000
pattern: 00000001000000000000001000000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000001000000000
pattern: 00000001000000000000000100000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000100000000
pattern: 00000001000000000000000010000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000010000000
pattern: 00000001000000000000000001000000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000001000000
pattern: 00000001000000000000000000100000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000000100000
pattern: 00000001000000000000000000010000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000000010000
pattern: 00000001000000000000000000001000
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 28
replace from 334 with range 2 to
      UnionType that, EquivalenceMethod eqMethod) {
    if (eqMethod == EquivalenceMethod.IDENTITY

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000000001000
pattern: 00000001000000000000000000000100
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 29
replace from 340 with range 1 to
      if (!hasAlternate(alternate, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000000000100
pattern: 00000001000000000000000000000010
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 30
replace from 347 with range 1 to
  private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000000000010
pattern: 00000001000000000000000000000001
try to fix hunk: 7
replace from 908 with range 2 to
        that.typeOfThis, eqMethod) &&
        call.checkArrowEquivalenceHelper(that.call, eqMethod);

try to fix hunk: 31
replace from 349 with range 1 to
      if (alternate.checkEquivalenceHelper(type, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000000000000001
pattern: 00000000110000000000000000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000110000000000000000000000
pattern: 00000000101000000000000000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000101000000000000000000000
pattern: 00000000100100000000000000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100100000000000000000000
pattern: 00000000100010000000000000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100010000000000000000000
pattern: 00000000100001000000000000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100001000000000000000000
pattern: 00000000100000100000000000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000100000000000000000
pattern: 00000000100000010000000000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000010000000000000000
pattern: 00000000100000001000000000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000001000000000000000
pattern: 00000000100000000100000000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000100000000000000
pattern: 00000000100000000010000000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000010000000000000
pattern: 00000000100000000001000000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000001000000000000
pattern: 00000000100000000000100000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000100000000000
pattern: 00000000100000000000010000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000010000000000
pattern: 00000000100000000000001000000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000001000000000
pattern: 00000000100000000000000100000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000100000000
pattern: 00000000100000000000000010000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000010000000
pattern: 00000000100000000000000001000000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000001000000
pattern: 00000000100000000000000000100000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000000100000
pattern: 00000000100000000000000000010000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000000010000
pattern: 00000000100000000000000000001000
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 28
replace from 334 with range 2 to
      UnionType that, EquivalenceMethod eqMethod) {
    if (eqMethod == EquivalenceMethod.IDENTITY

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000000001000
pattern: 00000000100000000000000000000100
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 29
replace from 340 with range 1 to
      if (!hasAlternate(alternate, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000000000100
pattern: 00000000100000000000000000000010
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 30
replace from 347 with range 1 to
  private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000000000010
pattern: 00000000100000000000000000000001
try to fix hunk: 8
replace from 918 with range 1 to
    return this.call.checkArrowEquivalenceHelper(
        otherType.call, EquivalenceMethod.IDENTITY);

try to fix hunk: 31
replace from 349 with range 1 to
      if (alternate.checkEquivalenceHelper(type, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000000000000000001
pattern: 00000000011000000000000000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000011000000000000000000000
pattern: 00000000010100000000000000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010100000000000000000000
pattern: 00000000010010000000000000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010010000000000000000000
pattern: 00000000010001000000000000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010001000000000000000000
pattern: 00000000010000100000000000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000100000000000000000
pattern: 00000000010000010000000000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000010000000000000000
pattern: 00000000010000001000000000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000001000000000000000
pattern: 00000000010000000100000000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000100000000000000
pattern: 00000000010000000010000000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000010000000000000
pattern: 00000000010000000001000000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000001000000000000
pattern: 00000000010000000000100000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000100000000000
pattern: 00000000010000000000010000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000010000000000
pattern: 00000000010000000000001000000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000001000000000
pattern: 00000000010000000000000100000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000100000000
pattern: 00000000010000000000000010000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000010000000
pattern: 00000000010000000000000001000000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000001000000
pattern: 00000000010000000000000000100000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000000100000
pattern: 00000000010000000000000000010000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000000010000
pattern: 00000000010000000000000000001000
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 28
replace from 334 with range 2 to
      UnionType that, EquivalenceMethod eqMethod) {
    if (eqMethod == EquivalenceMethod.IDENTITY

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000000001000
pattern: 00000000010000000000000000000100
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 29
replace from 340 with range 1 to
      if (!hasAlternate(alternate, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000000000100
pattern: 00000000010000000000000000000010
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 30
replace from 347 with range 1 to
  private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000000000010
pattern: 00000000010000000000000000000001
try to fix hunk: 9
replace from 492 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.IDENTITY);

try to fix hunk: 31
replace from 349 with range 1 to
      if (alternate.checkEquivalenceHelper(type, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000000000000000001
pattern: 00000000001100000000000000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001100000000000000000000
pattern: 00000000001010000000000000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001010000000000000000000
pattern: 00000000001001000000000000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001001000000000000000000
pattern: 00000000001000100000000000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000100000000000000000
pattern: 00000000001000010000000000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000010000000000000000
pattern: 00000000001000001000000000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000001000000000000000
pattern: 00000000001000000100000000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000100000000000000
pattern: 00000000001000000010000000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000010000000000000
pattern: 00000000001000000001000000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000001000000000000
pattern: 00000000001000000000100000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000100000000000
pattern: 00000000001000000000010000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000010000000000
pattern: 00000000001000000000001000000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000001000000000
pattern: 00000000001000000000000100000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000100000000
pattern: 00000000001000000000000010000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000010000000
pattern: 00000000001000000000000001000000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000001000000
pattern: 00000000001000000000000000100000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000000100000
pattern: 00000000001000000000000000010000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000000010000
pattern: 00000000001000000000000000001000
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 28
replace from 334 with range 2 to
      UnionType that, EquivalenceMethod eqMethod) {
    if (eqMethod == EquivalenceMethod.IDENTITY

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000000001000
pattern: 00000000001000000000000000000100
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 29
replace from 340 with range 1 to
      if (!hasAlternate(alternate, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000000000100
pattern: 00000000001000000000000000000010
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 30
replace from 347 with range 1 to
  private boolean hasAlternate(JSType type, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000000000010
pattern: 00000000001000000000000000000001
try to fix hunk: 10
replace from 500 with range 1 to
    return checkEquivalenceHelper(that, EquivalenceMethod.INVARIANT);

try to fix hunk: 31
replace from 349 with range 1 to
      if (alternate.checkEquivalenceHelper(type, eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000000000000000001
pattern: 00000000000110000000000000000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 12
replace from 520 with range 1 to
  boolean checkEquivalenceHelper(JSType that, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000110000000000000000000
pattern: 00000000000101000000000000000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 13
replace from 528 with range 1 to
      if (eqMethod == EquivalenceMethod.INVARIANT) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000101000000000000000000
pattern: 00000000000100100000000000000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 14
insert before 531 with         return true;
      } else if (eqMethod == EquivalenceMethod.DATA_FLOW) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100100000000000000000
pattern: 00000000000100010000000000000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 15
replace from 545 with range 1 to
          that.toMaybeUnionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100010000000000000000
pattern: 00000000000100001000000000000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 16
replace from 550 with range 1 to
          that.toMaybeFunctionType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100001000000000000000
pattern: 00000000000100000100000000000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 17
replace from 555 with range 1 to
          that.toMaybeRecordType(), eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000100000000000000
pattern: 00000000000100000010000000000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 18
replace from 565 with range 2 to
            thatParamType.getParameterType(), eqMethod);
      } else if (eqMethod == EquivalenceMethod.IDENTITY) {
        paramsMatch = false;
      } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000010000000000000
pattern: 00000000000100000001000000000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 19
delete from 571 with range 2
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000001000000000000
pattern: 00000000000100000000100000000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 20
replace from 580 with range 1 to
          thisRootType.checkEquivalenceHelper(thatRootType, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000100000000000
pattern: 00000000000100000000010000000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 21
replace from 592 with range 1 to
              that, eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000010000000000
pattern: 00000000000100000000001000000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 22
replace from 598 with range 1 to
          eqMethod);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000001000000000
pattern: 00000000000100000000000100000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 23
replace from 118 with range 1 to
      RecordType otherRecord, EquivalenceMethod eqMethod) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000000100000000
pattern: 00000000000100000000000010000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 24
replace from 126 with range 1 to
              properties.get(key), eqMethod)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000000010000000
pattern: 00000000000100000000000001000000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 25
replace from 204 with range 2 to
              propType.isInvariant(altPropType)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000000001000000
pattern: 00000000000100000000000000100000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 26
delete from 268 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000000000100000
pattern: 00000000000100000000000000010000
try to fix hunk: 11
replace from 514 with range 1 to
    return !checkEquivalenceHelper(that, EquivalenceMethod.DATA_FLOW);

try to fix hunk: 27
delete from 280 with range 1
patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

