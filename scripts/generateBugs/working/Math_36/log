---
Begin generate bug_id: Math_36
num_of_hunks: 4
timeout for running: 3600
use working dir: ./working/data/Math_36
Try to checkout Math_36
build dir: ['./working/data/Math_36/target/classes', './working/data/Math_36/target/test-classes']
init FileManager
trace file: src/main/java/org/apache/commons/math/fraction/BigFraction.java
trying to replace old failing tests
new test num: 0
ori test num: 2
pattern: 0000
patches are written to file
running tests...
used time: Finished in 94.87 seconds
Failing tests: 2
	org.apache.commons.math.fraction.BigFractionTest::testFloatValueForLargeNumeratorAndDenominator
	org.apache.commons.math.fraction.BigFractionTest::testDoubleValueForLargeNumeratorAndDenominator
processed: 0000
pattern: 0001
try to fix hunk: 3
insert before 735 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Float.MAX_EXPONENT;
            result = numerator.shiftRight(shift).floatValue() /
                denominator.shiftRight(shift).floatValue();
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001
pattern: 0010
try to fix hunk: 2
insert before 733 with         if (Double.isNaN(result)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010
pattern: 0100
try to fix hunk: 1
insert before 688 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Double.MAX_EXPONENT;
            result = numerator.shiftRight(shift).doubleValue() /
                denominator.shiftRight(shift).doubleValue();
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100
pattern: 1000
try to fix hunk: 0
insert before 686 with         if (Double.isNaN(result)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000
pattern: 0011
try to fix hunk: 2
insert before 733 with         if (Double.isNaN(result)) {

try to fix hunk: 3
insert before 735 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Float.MAX_EXPONENT;
            result = numerator.shiftRight(shift).floatValue() /
                denominator.shiftRight(shift).floatValue();
        }

patches are written to file
running tests...
used time: Finished in 84.78 seconds
Failing tests: 1
	org.apache.commons.math.fraction.BigFractionTest::testDoubleValueForLargeNumeratorAndDenominator
Can independently fix ['org.apache.commons.math.fraction.BigFractionTest::testFloatValueForLargeNumeratorAndDenominator']
select new bug
Pattern: 0011
new failing tests:
org.apache.commons.math.fraction.BigFractionTest::testFloatValueForLargeNumeratorAndDenominator
Save found bug
processed: 0011
pattern: 0101
try to fix hunk: 1
insert before 688 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Double.MAX_EXPONENT;
            result = numerator.shiftRight(shift).doubleValue() /
                denominator.shiftRight(shift).doubleValue();
        }

try to fix hunk: 3
insert before 735 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Float.MAX_EXPONENT;
            result = numerator.shiftRight(shift).floatValue() /
                denominator.shiftRight(shift).floatValue();
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101
pattern: 0110
try to fix hunk: 1
insert before 688 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Double.MAX_EXPONENT;
            result = numerator.shiftRight(shift).doubleValue() /
                denominator.shiftRight(shift).doubleValue();
        }

try to fix hunk: 2
insert before 733 with         if (Double.isNaN(result)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110
pattern: 1001
try to fix hunk: 0
insert before 686 with         if (Double.isNaN(result)) {

try to fix hunk: 3
insert before 735 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Float.MAX_EXPONENT;
            result = numerator.shiftRight(shift).floatValue() /
                denominator.shiftRight(shift).floatValue();
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001
pattern: 1010
try to fix hunk: 0
insert before 686 with         if (Double.isNaN(result)) {

try to fix hunk: 2
insert before 733 with         if (Double.isNaN(result)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010
pattern: 1100
try to fix hunk: 0
insert before 686 with         if (Double.isNaN(result)) {

try to fix hunk: 1
insert before 688 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Double.MAX_EXPONENT;
            result = numerator.shiftRight(shift).doubleValue() /
                denominator.shiftRight(shift).doubleValue();
        }

patches are written to file
running tests...
used time: Finished in 82.30 seconds
Failing tests: 1
	org.apache.commons.math.fraction.BigFractionTest::testFloatValueForLargeNumeratorAndDenominator
Can independently fix ['org.apache.commons.math.fraction.BigFractionTest::testDoubleValueForLargeNumeratorAndDenominator']
select new bug
Pattern: 1100
new failing tests:
org.apache.commons.math.fraction.BigFractionTest::testDoubleValueForLargeNumeratorAndDenominator
Save found bug
processed: 1100
pattern: 0111
try to fix hunk: 1
insert before 688 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Double.MAX_EXPONENT;
            result = numerator.shiftRight(shift).doubleValue() /
                denominator.shiftRight(shift).doubleValue();
        }

try to fix hunk: 2
insert before 733 with         if (Double.isNaN(result)) {

try to fix hunk: 3
insert before 735 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Float.MAX_EXPONENT;
            result = numerator.shiftRight(shift).floatValue() /
                denominator.shiftRight(shift).floatValue();
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0111
pattern: 1011
try to fix hunk: 0
insert before 686 with         if (Double.isNaN(result)) {

try to fix hunk: 2
insert before 733 with         if (Double.isNaN(result)) {

try to fix hunk: 3
insert before 735 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Float.MAX_EXPONENT;
            result = numerator.shiftRight(shift).floatValue() /
                denominator.shiftRight(shift).floatValue();
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1011
pattern: 1101
try to fix hunk: 0
insert before 686 with         if (Double.isNaN(result)) {

try to fix hunk: 1
insert before 688 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Double.MAX_EXPONENT;
            result = numerator.shiftRight(shift).doubleValue() /
                denominator.shiftRight(shift).doubleValue();
        }

try to fix hunk: 3
insert before 735 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Float.MAX_EXPONENT;
            result = numerator.shiftRight(shift).floatValue() /
                denominator.shiftRight(shift).floatValue();
        }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1101
pattern: 1110
try to fix hunk: 0
insert before 686 with         if (Double.isNaN(result)) {

try to fix hunk: 1
insert before 688 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Double.MAX_EXPONENT;
            result = numerator.shiftRight(shift).doubleValue() /
                denominator.shiftRight(shift).doubleValue();
        }

try to fix hunk: 2
insert before 733 with         if (Double.isNaN(result)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1110
pattern: 1111
try to fix hunk: 0
insert before 686 with         if (Double.isNaN(result)) {

try to fix hunk: 1
insert before 688 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Double.MAX_EXPONENT;
            result = numerator.shiftRight(shift).doubleValue() /
                denominator.shiftRight(shift).doubleValue();
        }

try to fix hunk: 2
insert before 733 with         if (Double.isNaN(result)) {

try to fix hunk: 3
insert before 735 with             int shift = Math.max(numerator.bitLength(),
                                 denominator.bitLength()) - Float.MAX_EXPONENT;
            result = numerator.shiftRight(shift).floatValue() /
                denominator.shiftRight(shift).floatValue();
        }

patches are written to file
running tests...
used time: Finished in 88.78 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
processed: 1111
Find 2 new bugs
