{
    "original": {
        "num_of_hunks": 4,
        "0": {
            "file_name": "src/com/google/javascript/jscomp/CodeGenerator.java",
            "replaced_with": "    if (n.getType() == Token.LABEL) {\n      Node labeledStatement = n.getLastChild();\n      if (labeledStatement.getType() != Token.BLOCK) {\n        return isOneExactlyFunctionOrDo(labeledStatement);\n      } else {\n",
            "patch_type": "insert",
            "next_line_no": 709
        },
        "1": {
            "file_name": "src/com/google/javascript/jscomp/CodeGenerator.java",
            "replaced_with": "        if (getNonEmptyChildCount(n, 2) == 1) { \n          return isOneExactlyFunctionOrDo(getFirstNonEmptyChild(n));\n        } else {\n",
            "patch_type": "insert",
            "next_line_no": 712
        },
        "2": {
            "file_name": "src/com/google/javascript/jscomp/CodeGenerator.java",
            "replaced_with": "          return false;\n        }\n      }\n    } else {\n",
            "patch_type": "insert",
            "next_line_no": 714
        },
        "3": {
            "file_name": "src/com/google/javascript/jscomp/CodeGenerator.java",
            "replaced_with": "    }\n",
            "patch_type": "insert",
            "next_line_no": 715
        }
    },
    "method": {
        "failing_tests": [
            "com.google.javascript.jscomp.CodePrinterTest::testFunctionSafariCompatiblity",
            "com.google.javascript.jscomp.CodePrinterTest::testDoLoopIECompatiblity"
        ],
        "com.google.javascript.jscomp.CodePrinterTest::testFunctionSafariCompatiblity": {
            "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
            "Instance": "Begin: Pos(944, 10)\nEnd: Pos(960, 3)\nSource: /root/workbench/exportInfo/d4j_buggy/Closure_145/test//com/google/javascript/jscomp/CodePrinterTest.java\nName: testFunctionSafariCompatiblity\nChilds: [StatementAssertion<Begin: Pos(946, 5), End: Pos(947, 69)>,\nStatementAssertion<Begin: Pos(949, 5), End: Pos(950, 69)>,\nStatementAssertion<Begin: Pos(952, 5), End: Pos(953, 47)>,\nStatementAssertion<Begin: Pos(955, 5), End: Pos(956, 47)>,\nStatementAssertion<Begin: Pos(958, 5), End: Pos(959, 49)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Closure_145/test//com/google/javascript/jscomp/CodePrinterTest.java",
            "name": "testFunctionSafariCompatiblity",
            "begin": "Pos(944, 10)",
            "end": "Pos(960, 3)",
            "begin_line_no": 944,
            "end_line_no": 960,
            "child": [
                "Begin: Pos(946, 5)\nEnd: Pos(947, 69)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(949, 5)\nEnd: Pos(950, 69)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(952, 5)\nEnd: Pos(953, 47)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(955, 5)\nEnd: Pos(956, 47)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(958, 5)\nEnd: Pos(959, 49)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "  public void testFunctionSafariCompatiblity$catena_0() {\n    // Functions within IFs cause syntax errors on Safari.\n    assertPrint(\"function(){if(e1){function goo(){return true}}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"function(){if(e1)function goo(){return true}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1){function goo(){return true}}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1)function goo(){return true}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1)A:function goo(){return true}\",\n        \"if(e1){A:function goo(){return true}}\");                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testFunctionSafariCompatiblity$catena_1() {\n    // Functions within IFs cause syntax errors on Safari.\n    try{ assertPrint(\"function(){if(e1){function goo(){return true}}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"function(){if(e1)function goo(){return true}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(e1){function goo(){return true}}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1)function goo(){return true}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1)A:function goo(){return true}\",\n        \"if(e1){A:function goo(){return true}}\");                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testFunctionSafariCompatiblity$catena_2() {\n    // Functions within IFs cause syntax errors on Safari.\n    try{ assertPrint(\"function(){if(e1){function goo(){return true}}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)function goo(){return true}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(e1){function goo(){return true}}\",\n        \"if(e1){function goo(){return true}}\");                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(e1)function goo(){return true}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1)A:function goo(){return true}\",\n        \"if(e1){A:function goo(){return true}}\");                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testFunctionSafariCompatiblity$catena_3() {\n    // Functions within IFs cause syntax errors on Safari.\n    try{ assertPrint(\"function(){if(e1){function goo(){return true}}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)function goo(){return true}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1){function goo(){return true}}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(e1)function goo(){return true}\",\n        \"if(e1){function goo(){return true}}\");                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(e1)A:function goo(){return true}\",\n        \"if(e1){A:function goo(){return true}}\");                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testFunctionSafariCompatiblity$catena_4() {\n    // Functions within IFs cause syntax errors on Safari.\n    try{ assertPrint(\"function(){if(e1){function goo(){return true}}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)function goo(){return true}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1){function goo(){return true}}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1)function goo(){return true}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(e1)A:function goo(){return true}\",\n        \"if(e1){A:function goo(){return true}}\");                                                           /***** ORIGINAL ASSERTION IS HERE *****/\n  }"
            ],
            "func": {
                "0": "  public void testFunctionSafariCompatiblity$catena_0() {\n    // Functions within IFs cause syntax errors on Safari.\n    assertPrint(\"function(){if(e1){function goo(){return true}}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"function(){if(e1)function goo(){return true}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1){function goo(){return true}}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1)function goo(){return true}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1)A:function goo(){return true}\",\n        \"if(e1){A:function goo(){return true}}\");                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "1": "  public void testFunctionSafariCompatiblity$catena_1() {\n    // Functions within IFs cause syntax errors on Safari.\n    try{ assertPrint(\"function(){if(e1){function goo(){return true}}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"function(){if(e1)function goo(){return true}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(e1){function goo(){return true}}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1)function goo(){return true}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1)A:function goo(){return true}\",\n        \"if(e1){A:function goo(){return true}}\");                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "2": "  public void testFunctionSafariCompatiblity$catena_2() {\n    // Functions within IFs cause syntax errors on Safari.\n    try{ assertPrint(\"function(){if(e1){function goo(){return true}}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)function goo(){return true}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(e1){function goo(){return true}}\",\n        \"if(e1){function goo(){return true}}\");                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(e1)function goo(){return true}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1)A:function goo(){return true}\",\n        \"if(e1){A:function goo(){return true}}\");                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "3": "  public void testFunctionSafariCompatiblity$catena_3() {\n    // Functions within IFs cause syntax errors on Safari.\n    try{ assertPrint(\"function(){if(e1){function goo(){return true}}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)function goo(){return true}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1){function goo(){return true}}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(e1)function goo(){return true}\",\n        \"if(e1){function goo(){return true}}\");                                                             /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(e1)A:function goo(){return true}\",\n        \"if(e1){A:function goo(){return true}}\");                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "4": "  public void testFunctionSafariCompatiblity$catena_4() {\n    // Functions within IFs cause syntax errors on Safari.\n    try{ assertPrint(\"function(){if(e1){function goo(){return true}}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)function goo(){return true}else foo()}\",\n        \"function(){if(e1){function goo(){return true}}else foo()}\");                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1){function goo(){return true}}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(e1)function goo(){return true}\",\n        \"if(e1){function goo(){return true}}\");                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(e1)A:function goo(){return true}\",\n        \"if(e1){A:function goo(){return true}}\");                                                           /***** ORIGINAL ASSERTION IS HERE *****/\n  }"
            }
        },
        "com.google.javascript.jscomp.CodePrinterTest::testDoLoopIECompatiblity": {
            "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
            "Instance": "Begin: Pos(917, 10)\nEnd: Pos(942, 3)\nSource: /root/workbench/exportInfo/d4j_buggy/Closure_145/test//com/google/javascript/jscomp/CodePrinterTest.java\nName: testDoLoopIECompatiblity\nChilds: [StatementAssertion<Begin: Pos(919, 5), End: Pos(920, 60)>,\nStatementAssertion<Begin: Pos(922, 5), End: Pos(923, 60)>,\nStatementAssertion<Begin: Pos(925, 5), End: Pos(926, 46)>,\nStatementAssertion<Begin: Pos(928, 5), End: Pos(929, 46)>,\nStatementAssertion<Begin: Pos(931, 5), End: Pos(932, 36)>,\nStatementAssertion<Begin: Pos(934, 5), End: Pos(935, 36)>,\nStatementAssertion<Begin: Pos(937, 5), End: Pos(938, 38)>,\nStatementAssertion<Begin: Pos(940, 5), End: Pos(941, 59)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Closure_145/test//com/google/javascript/jscomp/CodePrinterTest.java",
            "name": "testDoLoopIECompatiblity",
            "begin": "Pos(917, 10)",
            "end": "Pos(942, 3)",
            "begin_line_no": 917,
            "end_line_no": 942,
            "child": [
                "Begin: Pos(919, 5)\nEnd: Pos(920, 60)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(922, 5)\nEnd: Pos(923, 60)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(925, 5)\nEnd: Pos(926, 46)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(928, 5)\nEnd: Pos(929, 46)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(931, 5)\nEnd: Pos(932, 36)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(934, 5)\nEnd: Pos(935, 36)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(937, 5)\nEnd: Pos(938, 38)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(940, 5)\nEnd: Pos(941, 59)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "  public void testDoLoopIECompatiblity$catena_0() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testDoLoopIECompatiblity$catena_1() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testDoLoopIECompatiblity$catena_2() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testDoLoopIECompatiblity$catena_3() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testDoLoopIECompatiblity$catena_4() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testDoLoopIECompatiblity$catena_5() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testDoLoopIECompatiblity$catena_6() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      /***** ORIGINAL ASSERTION IS HERE *****/\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "  public void testDoLoopIECompatiblity$catena_7() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n  }"
            ],
            "func": {
                "0": "  public void testDoLoopIECompatiblity$catena_0() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "1": "  public void testDoLoopIECompatiblity$catena_1() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "2": "  public void testDoLoopIECompatiblity$catena_2() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "3": "  public void testDoLoopIECompatiblity$catena_3() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "4": "  public void testDoLoopIECompatiblity$catena_4() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "5": "  public void testDoLoopIECompatiblity$catena_5() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "6": "  public void testDoLoopIECompatiblity$catena_6() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      /***** ORIGINAL ASSERTION IS HERE *****/\n    \n    try{ assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n  }",
                "7": "  public void testDoLoopIECompatiblity$catena_7() {\n    // Do loops within IFs cause syntax errors in IE6 and IE7.\n    try{ assertPrint(\"function(){if(e1){do foo();while(e2)}else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"function(){if(e1)do foo();while(e2)else foo()}\",\n        \"function(){if(e1){do foo();while(e2)}else foo()}\");                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);else bar()\",\n        \"if(x){do foo();while(y)}else bar()\");                                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x){do{foo()}while(y)}\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)do{foo()}while(y);\",\n        \"if(x){do foo();while(y)}\");                                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ assertPrint(\"if(x)A:do{foo()}while(y);\",\n        \"if(x){A:do foo();while(y)}\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    \n    assertPrint(\"var i = 0;a: do{b: do{i++;break b;} while(0);} while(0);\",\n        \"var i=0;a:do{b:do{i++;break b}while(0)}while(0)\");                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n  }"
            }
        }
    },
    "1111": {
        "failing_tests": [
            "com.google.javascript.jscomp.CodePrinterTest::testDoLoopIECompatiblity$catena_7",
            "com.google.javascript.jscomp.CodePrinterTest::testDoLoopIECompatiblity$catena_6",
            "com.google.javascript.jscomp.CodePrinterTest::testFunctionSafariCompatiblity$catena_4"
        ]
    }
}