{
    "original": {
        "num_of_hunks": 2,
        "0": {
            "file_name": "src/java/org/apache/commons/math/linear/BigMatrixImpl.java",
            "from_line_no": 991,
            "to_line_no": 991,
            "replaced_with": "        final BigDecimal[] out = new BigDecimal[nRows];\n",
            "replaced": "        final BigDecimal[] out = new BigDecimal[v.length];\n",
            "patch_type": "replace",
            "next_line_no": 992
        },
        "1": {
            "file_name": "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
            "from_line_no": 779,
            "to_line_no": 779,
            "replaced_with": "        final double[] out = new double[nRows];\n",
            "replaced": "        final double[] out = new double[v.length];\n",
            "patch_type": "replace",
            "next_line_no": 780
        }
    },
    "method": {
        "failing_tests": [
            "org.apache.commons.math.linear.BigMatrixImplTest::testMath209",
            "org.apache.commons.math.linear.RealMatrixImplTest::testMath209"
        ],
        "org.apache.commons.math.linear.BigMatrixImplTest::testMath209": {
            "file_path": "src/test/org/apache/commons/math/linear/BigMatrixImplTest.java",
            "Instance": "Begin: Pos(440, 12)\nEnd: Pos(451, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Math_98/src/test//org/apache/commons/math/linear/BigMatrixImplTest.java\nName: testMath209\nChilds: [StatementAssertion<Begin: Pos(447, 9), End: Pos(447, 52)>,\nStatementAssertion<Begin: Pos(448, 9), End: Pos(448, 56)>,\nStatementAssertion<Begin: Pos(449, 9), End: Pos(449, 56)>,\nStatementAssertion<Begin: Pos(450, 9), End: Pos(450, 56)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Math_98/src/test//org/apache/commons/math/linear/BigMatrixImplTest.java",
            "name": "testMath209",
            "begin": "Pos(440, 12)",
            "end": "Pos(451, 5)",
            "begin_line_no": 440,
            "end_line_no": 451,
            "child": [
                "Begin: Pos(447, 9)\nEnd: Pos(447, 52)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(448, 9)\nEnd: Pos(448, 56)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(449, 9)\nEnd: Pos(449, 56)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(450, 9)\nEnd: Pos(450, 56)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    public void testMath209$catena_0() {\n        BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {\n                { new BigDecimal(1), new BigDecimal(2) },\n                { new BigDecimal(3), new BigDecimal(4) },\n                { new BigDecimal(5), new BigDecimal(6) }\n        }, false);\n        BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });\n        assertEquals(a.getRowDimension(), b.length);                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(11.0, b[2].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testMath209$catena_1() {\n        BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {\n                { new BigDecimal(1), new BigDecimal(2) },\n                { new BigDecimal(3), new BigDecimal(4) },\n                { new BigDecimal(5), new BigDecimal(6) }\n        }, false);\n        BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });\n        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(11.0, b[2].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testMath209$catena_2() {\n        BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {\n                { new BigDecimal(1), new BigDecimal(2) },\n                { new BigDecimal(3), new BigDecimal(4) },\n                { new BigDecimal(5), new BigDecimal(6) }\n        }, false);\n        BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });\n        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(11.0, b[2].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testMath209$catena_3() {\n        BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {\n                { new BigDecimal(1), new BigDecimal(2) },\n                { new BigDecimal(3), new BigDecimal(4) },\n                { new BigDecimal(5), new BigDecimal(6) }\n        }, false);\n        BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });\n        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(11.0, b[2].doubleValue(), 1.0e-12);                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            ],
            "func": {
                "0": "    public void testMath209$catena_0() {\n        BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {\n                { new BigDecimal(1), new BigDecimal(2) },\n                { new BigDecimal(3), new BigDecimal(4) },\n                { new BigDecimal(5), new BigDecimal(6) }\n        }, false);\n        BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });\n        assertEquals(a.getRowDimension(), b.length);                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(11.0, b[2].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "1": "    public void testMath209$catena_1() {\n        BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {\n                { new BigDecimal(1), new BigDecimal(2) },\n                { new BigDecimal(3), new BigDecimal(4) },\n                { new BigDecimal(5), new BigDecimal(6) }\n        }, false);\n        BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });\n        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(11.0, b[2].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "2": "    public void testMath209$catena_2() {\n        BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {\n                { new BigDecimal(1), new BigDecimal(2) },\n                { new BigDecimal(3), new BigDecimal(4) },\n                { new BigDecimal(5), new BigDecimal(6) }\n        }, false);\n        BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });\n        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(11.0, b[2].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "3": "    public void testMath209$catena_3() {\n        BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {\n                { new BigDecimal(1), new BigDecimal(2) },\n                { new BigDecimal(3), new BigDecimal(4) },\n                { new BigDecimal(5), new BigDecimal(6) }\n        }, false);\n        BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });\n        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);                                               }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(11.0, b[2].doubleValue(), 1.0e-12);                                                    /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            }
        },
        "org.apache.commons.math.linear.RealMatrixImplTest::testMath209": {
            "file_path": "src/test/org/apache/commons/math/linear/RealMatrixImplTest.java",
            "Instance": "Begin: Pos(347, 12)\nEnd: Pos(356, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Math_98/src/test//org/apache/commons/math/linear/RealMatrixImplTest.java\nName: testMath209\nChilds: [StatementAssertion<Begin: Pos(352, 9), End: Pos(352, 52)>,\nStatementAssertion<Begin: Pos(353, 9), End: Pos(353, 42)>,\nStatementAssertion<Begin: Pos(354, 9), End: Pos(354, 42)>,\nStatementAssertion<Begin: Pos(355, 9), End: Pos(355, 42)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Math_98/src/test//org/apache/commons/math/linear/RealMatrixImplTest.java",
            "name": "testMath209",
            "begin": "Pos(347, 12)",
            "end": "Pos(356, 5)",
            "begin_line_no": 347,
            "end_line_no": 356,
            "child": [
                "Begin: Pos(352, 9)\nEnd: Pos(352, 52)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(353, 9)\nEnd: Pos(353, 42)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(354, 9)\nEnd: Pos(354, 42)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(355, 9)\nEnd: Pos(355, 42)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    public void testMath209$catena_0() {\n        RealMatrix a = new RealMatrixImpl(new double[][] {\n                { 1, 2 }, { 3, 4 }, { 5, 6 }\n        }, false);\n        double[] b = a.operate(new double[] { 1, 1 });\n        assertEquals(a.getRowDimension(), b.length);                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals( 3.0, b[0], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 7.0, b[1], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(11.0, b[2], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testMath209$catena_1() {\n        RealMatrix a = new RealMatrixImpl(new double[][] {\n                { 1, 2 }, { 3, 4 }, { 5, 6 }\n        }, false);\n        double[] b = a.operate(new double[] { 1, 1 });\n        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals( 3.0, b[0], 1.0e-12);                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals( 7.0, b[1], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(11.0, b[2], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testMath209$catena_2() {\n        RealMatrix a = new RealMatrixImpl(new double[][] {\n                { 1, 2 }, { 3, 4 }, { 5, 6 }\n        }, false);\n        double[] b = a.operate(new double[] { 1, 1 });\n        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 3.0, b[0], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals( 7.0, b[1], 1.0e-12);                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(11.0, b[2], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testMath209$catena_3() {\n        RealMatrix a = new RealMatrixImpl(new double[][] {\n                { 1, 2 }, { 3, 4 }, { 5, 6 }\n        }, false);\n        double[] b = a.operate(new double[] { 1, 1 });\n        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 3.0, b[0], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 7.0, b[1], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(11.0, b[2], 1.0e-12);                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            ],
            "func": {
                "0": "    public void testMath209$catena_0() {\n        RealMatrix a = new RealMatrixImpl(new double[][] {\n                { 1, 2 }, { 3, 4 }, { 5, 6 }\n        }, false);\n        double[] b = a.operate(new double[] { 1, 1 });\n        assertEquals(a.getRowDimension(), b.length);                                                        /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals( 3.0, b[0], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 7.0, b[1], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(11.0, b[2], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "1": "    public void testMath209$catena_1() {\n        RealMatrix a = new RealMatrixImpl(new double[][] {\n                { 1, 2 }, { 3, 4 }, { 5, 6 }\n        }, false);\n        double[] b = a.operate(new double[] { 1, 1 });\n        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals( 3.0, b[0], 1.0e-12);                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals( 7.0, b[1], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(11.0, b[2], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "2": "    public void testMath209$catena_2() {\n        RealMatrix a = new RealMatrixImpl(new double[][] {\n                { 1, 2 }, { 3, 4 }, { 5, 6 }\n        }, false);\n        double[] b = a.operate(new double[] { 1, 1 });\n        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 3.0, b[0], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals( 7.0, b[1], 1.0e-12);                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(11.0, b[2], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "3": "    public void testMath209$catena_3() {\n        RealMatrix a = new RealMatrixImpl(new double[][] {\n                { 1, 2 }, { 3, 4 }, { 5, 6 }\n        }, false);\n        double[] b = a.operate(new double[] { 1, 1 });\n        try{ assertEquals(a.getRowDimension(), b.length);                                                   }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 3.0, b[0], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals( 7.0, b[1], 1.0e-12);                                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(11.0, b[2], 1.0e-12);                                                                  /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            }
        }
    },
    "01": {
        "failing_tests": [
            "org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_3",
            "org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_1",
            "org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_2",
            "org.apache.commons.math.linear.RealMatrixImplTest::testMath209$catena_0"
        ]
    },
    "10": {
        "failing_tests": [
            "org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_2",
            "org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_3",
            "org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_1",
            "org.apache.commons.math.linear.BigMatrixImplTest::testMath209$catena_0"
        ]
    }
}