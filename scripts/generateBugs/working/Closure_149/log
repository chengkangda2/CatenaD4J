---
Begin generate bug_id: Closure_149
num_of_hunks: 7
timeout for running: 3600
use working dir: ./working/data/Closure_149
Try to checkout Closure_149
build dir: ['./working/data/Closure_149/build/classes', './working/data/Closure_149/build/test']
init FileManager
trace file: src/com/google/javascript/jscomp/AbstractCommandLineRunner.java
trace file: src/com/google/javascript/jscomp/CommandLineRunner.java
trace file: src/com/google/javascript/jscomp/Compiler.java
trace file: src/com/google/javascript/jscomp/CompilerOptions.java
trying to replace old failing tests
edit: replace from 383 range 7 at test/com/google/javascript/jscomp/CommandLineRunnerTest.java
to
  public void testCharSetExpansion$catena_0() {
    testSame("");                                                                                           /***** ORIGINAL ASSERTION IS HERE *****/
    try{ assertEquals("US-ASCII", lastCompiler.getOptions().outputCharset);                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    args.add("--charset=UTF-8");
    try{ testSame("");                                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    try{ assertEquals("UTF-8", lastCompiler.getOptions().outputCharset);                                    }catch(Throwable __SHOULD_BE_IGNORED){}
  }   public void testCharSetExpansion$catena_1() {
    try{ testSame("");                                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    assertEquals("US-ASCII", lastCompiler.getOptions().outputCharset);                                      /***** ORIGINAL ASSERTION IS HERE *****/
    args.add("--charset=UTF-8");
    try{ testSame("");                                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    try{ assertEquals("UTF-8", lastCompiler.getOptions().outputCharset);                                    }catch(Throwable __SHOULD_BE_IGNORED){}
  }   public void testCharSetExpansion$catena_2() {
    try{ testSame("");                                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    try{ assertEquals("US-ASCII", lastCompiler.getOptions().outputCharset);                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    args.add("--charset=UTF-8");
    testSame("");                                                                                           /***** ORIGINAL ASSERTION IS HERE *****/
    try{ assertEquals("UTF-8", lastCompiler.getOptions().outputCharset);                                    }catch(Throwable __SHOULD_BE_IGNORED){}
  }   public void testCharSetExpansion$catena_3() {
    try{ testSame("");                                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    try{ assertEquals("US-ASCII", lastCompiler.getOptions().outputCharset);                                 }catch(Throwable __SHOULD_BE_IGNORED){}
    args.add("--charset=UTF-8");
    try{ testSame("");                                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    assertEquals("UTF-8", lastCompiler.getOptions().outputCharset);                                         /***** ORIGINAL ASSERTION IS HERE *****/
  }
trace file: test/com/google/javascript/jscomp/CommandLineRunnerTest.java
new test num: 4
ori test num: 0
pattern: 0000000
patches are written to file
running tests...
used time: Finished in 146.95 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
processed: 0000000
pattern: 0000001
try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001
pattern: 0000010
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010
pattern: 0000100
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100
pattern: 0001000
try to fix hunk: 3
delete from 471 with range 1
patches are written to file
running tests...
used time: Finished in 129.78 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
No new failing tests but only 1 hunk
processed: 0001000
pattern: 0010000
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

patches are written to file
running tests...
used time: Finished in 128.19 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
No new failing tests but only 1 hunk
processed: 0010000
pattern: 0100000
try to fix hunk: 1
delete from 518 with range 5
patches are written to file
running tests...
used time: Finished in 143.60 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
No new failing tests but only 1 hunk
processed: 0100000
pattern: 1000000
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000
pattern: 0000011
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000011
pattern: 0000101
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000101
pattern: 0000110
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000110
pattern: 0001001
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001001
pattern: 0001010
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001010
pattern: 0001100
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001100
pattern: 0010001
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010001
pattern: 0010010
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010010
pattern: 0010100
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010100
pattern: 0011000
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
patches are written to file
running tests...
used time: Finished in 142.58 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 0011000
pattern: 0100001
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001
pattern: 0100010
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010
pattern: 0100100
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100
pattern: 0101000
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
patches are written to file
running tests...
used time: Finished in 132.35 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 0101000
pattern: 0110000
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

patches are written to file
running tests...
used time: Finished in 133.57 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 0110000
pattern: 1000001
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000001
pattern: 1000010
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000010
pattern: 1000100
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000100
pattern: 1001000
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 3
delete from 471 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001000
pattern: 1010000
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010000
pattern: 1100000
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100000
pattern: 0000111
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000111
pattern: 0001011
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001011
pattern: 0001101
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001101
pattern: 0001110
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001110
pattern: 0010011
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010011
pattern: 0010101
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010101
pattern: 0010110
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010110
pattern: 0011001
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011001
pattern: 0011010
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011010
pattern: 0011100
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011100
pattern: 0100011
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100011
pattern: 0100101
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100101
pattern: 0100110
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
used time: Finished in 132.56 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 0100110
pattern: 0101001
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101001
pattern: 0101010
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101010
pattern: 0101100
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101100
pattern: 0110001
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110001
pattern: 0110010
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110010
pattern: 0110100
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110100
pattern: 0111000
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
patches are written to file
running tests...
used time: Finished in 133.09 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 0111000
pattern: 1000011
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000011
pattern: 1000101
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000101
pattern: 1000110
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000110
pattern: 1001001
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001001
pattern: 1001010
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001010
pattern: 1001100
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001100
pattern: 1010001
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010001
pattern: 1010010
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010010
pattern: 1010100
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010100
pattern: 1011000
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1011000
pattern: 1100001
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100001
pattern: 1100010
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100010
pattern: 1100100
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100100
pattern: 1101000
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1101000
pattern: 1110000
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1110000
pattern: 0001111
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001111
pattern: 0010111
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010111
pattern: 0011011
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011011
pattern: 0011101
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011101
pattern: 0011110
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011110
pattern: 0100111
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
used time: Finished in 135.55 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 0100111
pattern: 0101011
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101011
pattern: 0101101
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101101
pattern: 0101110
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
used time: Finished in 139.12 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 0101110
pattern: 0110011
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110011
pattern: 0110101
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110101
pattern: 0110110
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
used time: Finished in 130.89 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 0110110
pattern: 0111001
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0111001
pattern: 0111010
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0111010
pattern: 0111100
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0111100
pattern: 1000111
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000111
pattern: 1001011
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001011
pattern: 1001101
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001101
pattern: 1001110
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001110
pattern: 1010011
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010011
pattern: 1010101
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010101
pattern: 1010110
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010110
pattern: 1011001
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1011001
pattern: 1011010
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1011010
pattern: 1011100
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1011100
pattern: 1100011
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100011
pattern: 1100101
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100101
pattern: 1100110
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100110
pattern: 1101001
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1101001
pattern: 1101010
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1101010
pattern: 1101100
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1101100
pattern: 1110001
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1110001
pattern: 1110010
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1110010
pattern: 1110100
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1110100
pattern: 1111000
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1111000
pattern: 0011111
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011111
pattern: 0101111
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
used time: Finished in 134.95 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 0101111
pattern: 0110111
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
used time: Finished in 135.46 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 0110111
pattern: 0111011
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0111011
pattern: 0111101
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0111101
pattern: 0111110
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
used time: Finished in 136.79 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 0111110
pattern: 1001111
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001111
pattern: 1010111
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010111
pattern: 1011011
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1011011
pattern: 1011101
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1011101
pattern: 1011110
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1011110
pattern: 1100111
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100111
pattern: 1101011
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1101011
pattern: 1101101
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1101101
pattern: 1101110
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1101110
pattern: 1110011
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1110011
pattern: 1110101
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1110101
pattern: 1110110
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
used time: Finished in 138.00 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 1110110
pattern: 1111001
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1111001
pattern: 1111010
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1111010
pattern: 1111100
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1111100
pattern: 0111111
try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
used time: Finished in 131.32 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 0111111
pattern: 1011111
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1011111
pattern: 1101111
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1101111
pattern: 1110111
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
used time: Finished in 133.13 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 1110111
pattern: 1111011
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1111011
pattern: 1111101
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1111101
pattern: 1111110
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

patches are written to file
running tests...
used time: Finished in 138.03 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
Can independently fix []
Could not fix independently
processed: 1111110
pattern: 1111111
try to fix hunk: 0
insert before 159 with     options.outputCharset = getOutputCharset();

try to fix hunk: 1
delete from 518 with range 5
try to fix hunk: 2
insert before 693 with   private String getOutputCharset() throws FlagUsageException {
    if (!config.charset.isEmpty()) {
      if (!Charset.isSupported(config.charset)) {
        throw new FlagUsageException(config.charset +
            " is not a valid charset name.");
      }
      return config.charset;
    }
    return "US-ASCII";
  }

try to fix hunk: 3
delete from 471 with range 1
try to fix hunk: 4
replace from 1362 with range 1 to
    Charset charset = options.outputCharset != null ?
        Charset.forName(options.outputCharset) : null;

try to fix hunk: 5
replace from 588 with range 1 to
  String outputCharset;

try to fix hunk: 6
insert before 960 with   public void setOutputCharset(String charsetName) {
    this.outputCharset = charsetName;
  }

patches are written to file
running tests...
used time: Finished in 135.58 seconds
Failing tests: 2
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_1
	com.google.javascript.jscomp.CommandLineRunnerTest::testCharSetExpansion$catena_3
EXCEPTION: Could not pass after all fixed, should check
Can independently fix []
Could not fix independently
processed: 1111111
Find 0 new bugs
