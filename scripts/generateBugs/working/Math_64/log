---
Begin generate bug_id: Math_64
num_of_hunks: 13
NOTICE: may not contains full fix patterns for hunks are too much (13 hunks)
timeout for running: 3600
use working dir: ./working/data/Math_64
Try to checkout Math_64
build dir: ['./working/data/Math_64/target/classes', './working/data/Math_64/target/test-classes']
init FileManager
trace file: src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java
trying to replace old failing tests
edit: replace from 145 range 20 at src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
to
  public void testMinpackFreudensteinRoth$catena_0() {
    minpackTest(new FreudensteinRothFunction(new double[] { 0.5, -2.0 },
                                             20.0124960961895, 6.99887517584575,
                                             new double[] {
                                               11.4124844654993,
                                               -0.896827913731509
                                             }), false);                                                    /***** ORIGINAL ASSERTION IS HERE *****/
    try{ minpackTest(new FreudensteinRothFunction(new double[] { 5.0, -20.0 },
                                             12432.833948863, 6.9988751744895,
                                             new double[] {
                                                11.41300466147456,
                                                -0.896796038685959
                                             }), false);                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
    try{ minpackTest(new FreudensteinRothFunction(new double[] { 50.0, -200.0 },
                                             11426454.595762, 6.99887517242903,
                                             new double[] {
                                                 11.412781785788564,
                                                 -0.8968051074920405
                                             }), false);                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
  }   public void testMinpackFreudensteinRoth$catena_1() {
    try{ minpackTest(new FreudensteinRothFunction(new double[] { 0.5, -2.0 },
                                             20.0124960961895, 6.99887517584575,
                                             new double[] {
                                               11.4124844654993,
                                               -0.896827913731509
                                             }), false);                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
    minpackTest(new FreudensteinRothFunction(new double[] { 5.0, -20.0 },
                                             12432.833948863, 6.9988751744895,
                                             new double[] {
                                                11.41300466147456,
                                                -0.896796038685959
                                             }), false);                                                    /***** ORIGINAL ASSERTION IS HERE *****/
    try{ minpackTest(new FreudensteinRothFunction(new double[] { 50.0, -200.0 },
                                             11426454.595762, 6.99887517242903,
                                             new double[] {
                                                 11.412781785788564,
                                                 -0.8968051074920405
                                             }), false);                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
  }   public void testMinpackFreudensteinRoth$catena_2() {
    try{ minpackTest(new FreudensteinRothFunction(new double[] { 0.5, -2.0 },
                                             20.0124960961895, 6.99887517584575,
                                             new double[] {
                                               11.4124844654993,
                                               -0.896827913731509
                                             }), false);                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
    try{ minpackTest(new FreudensteinRothFunction(new double[] { 5.0, -20.0 },
                                             12432.833948863, 6.9988751744895,
                                             new double[] {
                                                11.41300466147456,
                                                -0.896796038685959
                                             }), false);                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
    minpackTest(new FreudensteinRothFunction(new double[] { 50.0, -200.0 },
                                             11426454.595762, 6.99887517242903,
                                             new double[] {
                                                 11.412781785788564,
                                                 -0.8968051074920405
                                             }), false);                                                    /***** ORIGINAL ASSERTION IS HERE *****/
  }
trace file: src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java
new test num: 3
ori test num: 1
pattern: 0000000000000
patches are written to file
running tests...
used time: Finished in 39.43 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
processed: 0000000000000
pattern: 1000000000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

patches are written to file
running tests...
used time: Finished in 25.81 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
No new failing tests but only 1 hunk
processed: 1000000000000
pattern: 0100000000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000000000
pattern: 0010000000000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000000000
pattern: 0001000000000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000000000
pattern: 0000100000000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 26.92 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
No new failing tests but only 1 hunk
processed: 0000100000000
pattern: 0000010000000
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010000000
pattern: 0000001000000
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001000000
pattern: 0000000100000
try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
used time: Finished in 29.19 seconds
Failing tests: 44
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 0000000100000
pattern: 0000000010000
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 28.80 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
No new failing tests but only 1 hunk
processed: 0000000010000
pattern: 0000000001000
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000001000
pattern: 0000000000100
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000000100
pattern: 0000000000010
try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000000010
pattern: 0000000000001
try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 28.73 seconds
Failing tests: 4
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Includes new failing tests, set to unusable
processed: 0000000000001
pattern: 1100000000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

patches are written to file
running tests...
used time: Finished in 29.86 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1100000000000
pattern: 1010000000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

patches are written to file
running tests...
used time: Finished in 26.40 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1010000000000
pattern: 1001000000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

patches are written to file
running tests...
used time: Finished in 38.58 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1001000000000
pattern: 1000100000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 26.46 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1000100000000
pattern: 1000010000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 25.95 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1000010000000
pattern: 1000001000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
used time: Finished in 28.29 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1000001000000
pattern: 1000000100000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
used time: Finished in 31.32 seconds
Failing tests: 44
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1000000100000
pattern: 1000000010000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 28.29 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1000000010000
pattern: 1000000001000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000001000
pattern: 1000000000100
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000000100
pattern: 1000000000010
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 31.69 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1000000000010
pattern: 1000000000001
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 35.00 seconds
Failing tests: 4
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Includes new failing tests, set to unusable
processed: 1000000000001
pattern: 0110000000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000000000
pattern: 0101000000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000000000
pattern: 0100100000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100000000
pattern: 0100010000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010000000
pattern: 0100001000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001000000
pattern: 0100000100000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000100000
pattern: 0100000010000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000010000
pattern: 0100000001000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000001000
pattern: 0100000000100
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000000100
pattern: 0100000000010
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000000010
pattern: 0100000000001
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000000001
pattern: 0011000000000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011000000000
pattern: 0010100000000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010100000000
pattern: 0010010000000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010010000000
pattern: 0010001000000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010001000000
pattern: 0010000100000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000100000
pattern: 0010000010000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000010000
pattern: 0010000001000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000001000
pattern: 0010000000100
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000000100
pattern: 0010000000010
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000000010
pattern: 0010000000001
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000000001
pattern: 0001100000000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001100000000
pattern: 0001010000000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001010000000
pattern: 0001001000000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001001000000
pattern: 0001000100000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000100000
pattern: 0001000010000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000010000
pattern: 0001000001000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000001000
pattern: 0001000000100
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000000100
pattern: 0001000000010
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000000010
pattern: 0001000000001
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000000001
pattern: 0000110000000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000110000000
pattern: 0000101000000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000101000000
pattern: 0000100100000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
used time: Finished in 34.31 seconds
Failing tests: 36
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 0000100100000
pattern: 0000100010000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 33.69 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 0000100010000
pattern: 0000100001000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100001000
pattern: 0000100000100
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100000100
pattern: 0000100000010
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100000010
pattern: 0000100000001
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 27.74 seconds
Failing tests: 4
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Includes new failing tests, set to unusable
processed: 0000100000001
pattern: 0000011000000
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000011000000
pattern: 0000010100000
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010100000
pattern: 0000010010000
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010010000
pattern: 0000010001000
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010001000
pattern: 0000010000100
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010000100
pattern: 0000010000010
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010000010
pattern: 0000010000001
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010000001
pattern: 0000001100000
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001100000
pattern: 0000001010000
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001010000
pattern: 0000001001000
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001001000
pattern: 0000001000100
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001000100
pattern: 0000001000010
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001000010
pattern: 0000001000001
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001000001
pattern: 0000000110000
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 29.30 seconds
Failing tests: 1
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
Includes new failing tests, set to unusable
processed: 0000000110000
pattern: 0000000101000
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000101000
pattern: 0000000100100
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000100100
pattern: 0000000100010
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000100010
pattern: 0000000100001
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 29.30 seconds
Failing tests: 44
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 0000000100001
pattern: 0000000011000
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000011000
pattern: 0000000010100
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000010100
pattern: 0000000010010
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000010010
pattern: 0000000010001
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 34.30 seconds
Failing tests: 4
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Includes new failing tests, set to unusable
processed: 0000000010001
pattern: 0000000001100
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
used time: Finished in 29.59 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 0000000001100
pattern: 0000000001010
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000001010
pattern: 0000000001001
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000001001
pattern: 0000000000110
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000000110
pattern: 0000000000101
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000000101
pattern: 0000000000011
try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000000011
pattern: 1110000000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

patches are written to file
running tests...
used time: Finished in 31.00 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1110000000000
pattern: 1101000000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

patches are written to file
running tests...
used time: Finished in 27.63 seconds
Failing tests: 4
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
Includes new failing tests, set to unusable
processed: 1101000000000
pattern: 1100100000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 30.03 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1100100000000
pattern: 1100010000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 33.87 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1100010000000
pattern: 1100001000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
used time: Finished in 28.72 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1100001000000
pattern: 1100000100000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
used time: Finished in 28.49 seconds
Failing tests: 44
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1100000100000
pattern: 1100000010000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 33.32 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1100000010000
pattern: 1100000001000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100000001000
pattern: 1100000000100
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1100000000100
pattern: 1100000000010
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 28.23 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1100000000010
pattern: 1100000000001
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 30.48 seconds
Failing tests: 4
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Includes new failing tests, set to unusable
processed: 1100000000001
pattern: 1011000000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

patches are written to file
running tests...
used time: Finished in 30.94 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1011000000000
pattern: 1010100000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 33.51 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1010100000000
pattern: 1010010000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 27.07 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1010010000000
pattern: 1010001000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
used time: Finished in 29.23 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1010001000000
pattern: 1010000100000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
used time: Finished in 32.75 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1010000100000
pattern: 1010000010000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 29.44 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1010000010000
pattern: 1010000001000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010000001000
pattern: 1010000000100
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1010000000100
pattern: 1010000000010
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 31.78 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1010000000010
pattern: 1010000000001
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 31.88 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1010000000001
pattern: 1001100000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 29.53 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1001100000000
pattern: 1001010000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 28.01 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1001010000000
pattern: 1001001000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
used time: Finished in 29.65 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1001001000000
pattern: 1001000100000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
used time: Finished in 29.32 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1001000100000
pattern: 1001000010000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 28.37 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1001000010000
pattern: 1001000001000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001000001000
pattern: 1001000000100
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1001000000100
pattern: 1001000000010
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 32.12 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1001000000010
pattern: 1001000000001
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 27.65 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1001000000001
pattern: 1000110000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 32.60 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1000110000000
pattern: 1000101000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
used time: Finished in 34.07 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1000101000000
pattern: 1000100100000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
used time: Finished in 35.37 seconds
Failing tests: 36
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1000100100000
pattern: 1000100010000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 32.95 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1000100010000
pattern: 1000100001000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000100001000
pattern: 1000100000100
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000100000100
pattern: 1000100000010
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 35.20 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1000100000010
pattern: 1000100000001
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 27.86 seconds
Failing tests: 4
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Includes new failing tests, set to unusable
processed: 1000100000001
pattern: 1000011000000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
used time: Finished in 31.54 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1000011000000
pattern: 1000010100000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
used time: Finished in 30.02 seconds
Failing tests: 44
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1000010100000
pattern: 1000010010000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 28.47 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1000010010000
pattern: 1000010001000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000010001000
pattern: 1000010000100
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000010000100
pattern: 1000010000010
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 31.80 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1000010000010
pattern: 1000010000001
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 31.87 seconds
Failing tests: 4
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Includes new failing tests, set to unusable
processed: 1000010000001
pattern: 1000001100000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
used time: Finished in 28.36 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1000001100000
pattern: 1000001010000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 27.71 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1000001010000
pattern: 1000001001000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000001001000
pattern: 1000001000100
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000001000100
pattern: 1000001000010
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 25.56 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1000001000010
pattern: 1000001000001
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 32.76 seconds
Failing tests: 48
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersSimple
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testControlParameters
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearRank1ZeroColsAndRows
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1000001000001
pattern: 1000000110000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 32.55 seconds
Failing tests: 2
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.stat.descriptive.moment.MeanTest::testWeightedConsistency
Includes new failing tests, set to unusable
processed: 1000000110000
pattern: 1000000101000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000101000
pattern: 1000000100100
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000100100
pattern: 1000000100010
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 31.16 seconds
Failing tests: 44
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1000000100010
pattern: 1000000100001
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 27.26 seconds
Failing tests: 44
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 1000000100001
pattern: 1000000011000
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000011000
pattern: 1000000010100
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000010100
pattern: 1000000010010
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
used time: Finished in 28.77 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1000000010010
pattern: 1000000010001
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 30.36 seconds
Failing tests: 4
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Includes new failing tests, set to unusable
processed: 1000000010001
pattern: 1000000001100
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
used time: Finished in 32.28 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 1000000001100
pattern: 1000000001010
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000001010
pattern: 1000000001001
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000001001
pattern: 1000000000110
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000000110
pattern: 1000000000101
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 1000000000101
pattern: 1000000000011
try to fix hunk: 0
insert before 258 with         double[] oldObj  = new double[rows];
        double[] qtf     = new double[rows];

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 30.90 seconds
Failing tests: 4
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Includes new failing tests, set to unusable
processed: 1000000000011
pattern: 0111000000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0111000000000
pattern: 0110100000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110100000000
pattern: 0110010000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110010000000
pattern: 0110001000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110001000000
pattern: 0110000100000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000100000
pattern: 0110000010000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000010000
pattern: 0110000001000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000001000
pattern: 0110000000100
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000000100
pattern: 0110000000010
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000000010
pattern: 0110000000001
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0110000000001
pattern: 0101100000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101100000000
pattern: 0101010000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101010000000
pattern: 0101001000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101001000000
pattern: 0101000100000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000100000
pattern: 0101000010000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000010000
pattern: 0101000001000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000001000
pattern: 0101000000100
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000000100
pattern: 0101000000010
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000000010
pattern: 0101000000001
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0101000000001
pattern: 0100110000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100110000000
pattern: 0100101000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100101000000
pattern: 0100100100000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100100000
pattern: 0100100010000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100010000
pattern: 0100100001000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100001000
pattern: 0100100000100
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100000100
pattern: 0100100000010
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100000010
pattern: 0100100000001
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100100000001
pattern: 0100011000000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100011000000
pattern: 0100010100000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010100000
pattern: 0100010010000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010010000
pattern: 0100010001000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010001000
pattern: 0100010000100
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010000100
pattern: 0100010000010
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010000010
pattern: 0100010000001
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100010000001
pattern: 0100001100000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001100000
pattern: 0100001010000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001010000
pattern: 0100001001000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001001000
pattern: 0100001000100
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001000100
pattern: 0100001000010
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001000010
pattern: 0100001000001
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100001000001
pattern: 0100000110000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000110000
pattern: 0100000101000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000101000
pattern: 0100000100100
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000100100
pattern: 0100000100010
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000100010
pattern: 0100000100001
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000100001
pattern: 0100000011000
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000011000
pattern: 0100000010100
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000010100
pattern: 0100000010010
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000010010
pattern: 0100000010001
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000010001
pattern: 0100000001100
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000001100
pattern: 0100000001010
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000001010
pattern: 0100000001001
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000001001
pattern: 0100000000110
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000000110
pattern: 0100000000101
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000000101
pattern: 0100000000011
try to fix hunk: 1
insert before 270 with             for (int i=0;i<rows;i++) {
                qtf[i]=residuals[i];
            }

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0100000000011
pattern: 0011100000000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011100000000
pattern: 0011010000000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011010000000
pattern: 0011001000000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011001000000
pattern: 0011000100000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011000100000
pattern: 0011000010000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011000010000
pattern: 0011000001000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011000001000
pattern: 0011000000100
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011000000100
pattern: 0011000000010
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011000000010
pattern: 0011000000001
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0011000000001
pattern: 0010110000000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010110000000
pattern: 0010101000000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010101000000
pattern: 0010100100000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010100100000
pattern: 0010100010000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010100010000
pattern: 0010100001000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010100001000
pattern: 0010100000100
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010100000100
pattern: 0010100000010
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010100000010
pattern: 0010100000001
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010100000001
pattern: 0010011000000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010011000000
pattern: 0010010100000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010010100000
pattern: 0010010010000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010010010000
pattern: 0010010001000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010010001000
pattern: 0010010000100
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010010000100
pattern: 0010010000010
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010010000010
pattern: 0010010000001
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010010000001
pattern: 0010001100000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010001100000
pattern: 0010001010000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010001010000
pattern: 0010001001000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010001001000
pattern: 0010001000100
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010001000100
pattern: 0010001000010
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010001000010
pattern: 0010001000001
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010001000001
pattern: 0010000110000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000110000
pattern: 0010000101000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000101000
pattern: 0010000100100
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000100100
pattern: 0010000100010
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000100010
pattern: 0010000100001
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000100001
pattern: 0010000011000
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000011000
pattern: 0010000010100
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000010100
pattern: 0010000010010
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000010010
pattern: 0010000010001
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000010001
pattern: 0010000001100
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000001100
pattern: 0010000001010
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000001010
pattern: 0010000001001
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000001001
pattern: 0010000000110
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000000110
pattern: 0010000000101
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000000101
pattern: 0010000000011
try to fix hunk: 2
replace from 278 with range 1 to
            qTy(qtf);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0010000000011
pattern: 0001110000000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001110000000
pattern: 0001101000000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001101000000
pattern: 0001100100000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001100100000
pattern: 0001100010000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001100010000
pattern: 0001100001000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001100001000
pattern: 0001100000100
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001100000100
pattern: 0001100000010
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001100000010
pattern: 0001100000001
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001100000001
pattern: 0001011000000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001011000000
pattern: 0001010100000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001010100000
pattern: 0001010010000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001010010000
pattern: 0001010001000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001010001000
pattern: 0001010000100
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001010000100
pattern: 0001010000010
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001010000010
pattern: 0001010000001
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001010000001
pattern: 0001001100000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001001100000
pattern: 0001001010000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001001010000
pattern: 0001001001000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001001001000
pattern: 0001001000100
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001001000100
pattern: 0001001000010
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001001000010
pattern: 0001001000001
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001001000001
pattern: 0001000110000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000110000
pattern: 0001000101000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000101000
pattern: 0001000100100
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000100100
pattern: 0001000100010
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000100010
pattern: 0001000100001
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000100001
pattern: 0001000011000
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000011000
pattern: 0001000010100
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000010100
pattern: 0001000010010
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000010010
pattern: 0001000010001
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000010001
pattern: 0001000001100
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000001100
pattern: 0001000001010
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000001010
pattern: 0001000001001
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000001001
pattern: 0001000000110
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000000110
pattern: 0001000000101
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000000101
pattern: 0001000000011
try to fix hunk: 3
replace from 316 with range 1 to
                            sum += jacobian[i][pj] * qtf[i];

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0001000000011
pattern: 0000111000000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000111000000
pattern: 0000110100000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000110100000
pattern: 0000110010000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000110010000
pattern: 0000110001000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000110001000
pattern: 0000110000100
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000110000100
pattern: 0000110000010
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000110000010
pattern: 0000110000001
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000110000001
pattern: 0000101100000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000101100000
pattern: 0000101010000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000101010000
pattern: 0000101001000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000101001000
pattern: 0000101000100
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000101000100
pattern: 0000101000010
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000101000010
pattern: 0000101000001
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000101000001
pattern: 0000100110000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
used time: Finished in 29.40 seconds
Failing tests: 1
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
Includes new failing tests, set to unusable
processed: 0000100110000
pattern: 0000100101000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100101000
pattern: 0000100100100
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100100100
pattern: 0000100100010
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100100010
pattern: 0000100100001
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 29.15 seconds
Failing tests: 36
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 0000100100001
pattern: 0000100011000
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100011000
pattern: 0000100010100
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100010100
pattern: 0000100010010
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100010010
pattern: 0000100010001
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 34.46 seconds
Failing tests: 4
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Includes new failing tests, set to unusable
processed: 0000100010001
pattern: 0000100001100
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
used time: Finished in 29.46 seconds
Failing tests: 3
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
Can independently fix []
Could not fix independently
processed: 0000100001100
pattern: 0000100001010
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100001010
pattern: 0000100001001
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100001001
pattern: 0000100000110
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100000110
pattern: 0000100000101
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100000101
pattern: 0000100000011
try to fix hunk: 4
insert before 324 with             	updateResidualsAndCost();
            	current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000100000011
pattern: 0000011100000
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 7
delete from 365 with range 1
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000011100000
pattern: 0000011010000
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000011010000
pattern: 0000011001000
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000011001000
pattern: 0000011000100
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000011000100
pattern: 0000011000010
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000011000010
pattern: 0000011000001
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000011000001
pattern: 0000010110000
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010110000
pattern: 0000010101000
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010101000
pattern: 0000010100100
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010100100
pattern: 0000010100010
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010100010
pattern: 0000010100001
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010100001
pattern: 0000010011000
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010011000
pattern: 0000010010100
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010010100
pattern: 0000010010010
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010010010
pattern: 0000010010001
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010010001
pattern: 0000010001100
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010001100
pattern: 0000010001010
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010001010
pattern: 0000010001001
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010001001
pattern: 0000010000110
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010000110
pattern: 0000010000101
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010000101
pattern: 0000010000011
try to fix hunk: 5
insert before 344 with                 tmpVec    = objective;
                objective = oldObj;
                oldObj    = tmpVec;

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000010000011
pattern: 0000001110000
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001110000
pattern: 0000001101000
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001101000
pattern: 0000001100100
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001100100
pattern: 0000001100010
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001100010
pattern: 0000001100001
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001100001
pattern: 0000001011000
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001011000
pattern: 0000001010100
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001010100
pattern: 0000001010010
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001010010
pattern: 0000001010001
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001010001
pattern: 0000001001100
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001001100
pattern: 0000001001010
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001001010
pattern: 0000001001001
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001001001
pattern: 0000001000110
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001000110
pattern: 0000001000101
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001000101
pattern: 0000001000011
try to fix hunk: 6
replace from 346 with range 1 to
                determineLMParameter(qtf, delta, diag, work1, work2, work3);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000001000011
pattern: 0000000111000
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000111000
pattern: 0000000110100
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000110100
pattern: 0000000110010
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000110010
pattern: 0000000110001
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
used time: Finished in 33.62 seconds
Failing tests: 1
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
Includes new failing tests, set to unusable
processed: 0000000110001
pattern: 0000000101100
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
used time: Finished in 36.87 seconds
Failing tests: 44
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath304
	org.apache.commons.math.optimization.fitting.CurveFitterTest::testMath372
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit01
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit04
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit05
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit06
	org.apache.commons.math.optimization.fitting.GaussianFitterTest::testFit07
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::test1PercentError
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testInitialGuess
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testUnsorted
	org.apache.commons.math.optimization.fitting.HarmonicFitterTest::testNoError
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit01
	org.apache.commons.math.optimization.fitting.ParametricGaussianFunctionTest::testFit02
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testSmallError
	org.apache.commons.math.optimization.fitting.PolynomialFitterTest::testNoError
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testNoDependency
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testInconsistentSizes
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testRedundantEquations
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTrivial
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testQRColumnsPermutation
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testTwoSets
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testMoreEstimatedParametersUnsorted
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testIllConditioned
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFitting
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testOneSet
	org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest::testCircleFittingBadInit
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownDennis
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackRosenbrok
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_0
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth$catena_2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBox3Dimensional
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackHelicalValley
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackMeyer
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackLinearFullRank
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne1
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackOsborne2
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackWatson
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackKowalikOsborne
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackPowellSingular
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackChebyquad
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBard
	org.apache.commons.math.optimization.general.MinpackTest::testMinpackBrownAlmostLinear
Includes new failing tests, set to unusable
processed: 0000000101100
pattern: 0000000101010
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000101010
pattern: 0000000101001
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000101001
pattern: 0000000100110
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000100110
pattern: 0000000100101
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000100101
pattern: 0000000100011
try to fix hunk: 7
delete from 365 with range 1
try to fix hunk: 11
insert before 434 with                     tmpVec    = objective;
                    objective = oldObj;
                    oldObj    = tmpVec;

try to fix hunk: 12
delete from 442 with range 4
patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 0000000100011
pattern: 0000000011100
try to fix hunk: 8
insert before 421 with                     current = new VectorialPointValuePair(point, objective);

try to fix hunk: 9
insert before 423 with                     if (checker != null) {

try to fix hunk: 10
insert before 424 with                     	if (checker.converged(getIterations(), previous, current)) {
                    		return current;
                    	}
                    }

patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

