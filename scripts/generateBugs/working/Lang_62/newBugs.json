{
    "original": {
        "num_of_hunks": 4,
        "0": {
            "file_name": "src/java/org/apache/commons/lang/Entities.java",
            "replaced_with": "                            if (entityValue > 0xFFFF) {\n                                entityValue = -1;\n                            }\n",
            "patch_type": "insert",
            "next_line_no": 850
        },
        "1": {
            "file_name": "src/java/org/apache/commons/lang/Entities.java",
            "replaced_with": "                                        break;\n",
            "patch_type": "insert",
            "next_line_no": 920
        },
        "2": {
            "file_name": "src/java/org/apache/commons/lang/Entities.java",
            "replaced_with": "                                if (entityValue > 0xFFFF) {\n                                    entityValue = -1;\n                                }\n",
            "patch_type": "insert",
            "next_line_no": 925
        },
        "3": {
            "file_name": "src/java/org/apache/commons/lang/Entities.java",
            "replaced_with": "                                entityValue = -1;\n",
            "patch_type": "insert",
            "next_line_no": 926
        }
    },
    "method": {
        "failing_tests": [
            "org.apache.commons.lang.EntitiesTest::testNumberOverflow"
        ],
        "org.apache.commons.lang.EntitiesTest::testNumberOverflow": {
            "file_path": "src/test/org/apache/commons/lang/EntitiesTest.java",
            "Instance": "Begin: Pos(200, 12)\nEnd: Pos(205, 5)\nSource: /root/workbench/exportInfo/d4j_buggy/Lang_62/src/test//org/apache/commons/lang/EntitiesTest.java\nName: testNumberOverflow\nChilds: [StatementAssertion<Begin: Pos(201, 9), End: Pos(201, 59)>,\nStatementAssertion<Begin: Pos(202, 9), End: Pos(202, 63)>,\nStatementAssertion<Begin: Pos(203, 9), End: Pos(203, 61)>,\nStatementAssertion<Begin: Pos(204, 9), End: Pos(204, 65)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Lang_62/src/test//org/apache/commons/lang/EntitiesTest.java",
            "name": "testNumberOverflow",
            "begin": "Pos(200, 12)",
            "end": "Pos(205, 5)",
            "begin_line_no": 200,
            "end_line_no": 205,
            "child": [
                "Begin: Pos(201, 9)\nEnd: Pos(201, 59)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(202, 9)\nEnd: Pos(202, 63)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(203, 9)\nEnd: Pos(203, 61)\nSource: StatementExpression\nName: <Unknown>\nChilds: []",
                "Begin: Pos(204, 9)\nEnd: Pos(204, 65)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [
                "    public void testNumberOverflow$catena_0() throws Exception {\n        doTestUnescapeEntity(\"&#12345678;\", \"&#12345678;\");                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ doTestUnescapeEntity(\"x&#12345678;y\", \"x&#12345678;y\");                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ doTestUnescapeEntity(\"&#x12345678;\", \"&#x12345678;\");                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ doTestUnescapeEntity(\"x&#x12345678;y\", \"x&#x12345678;y\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testNumberOverflow$catena_1() throws Exception {\n        try{ doTestUnescapeEntity(\"&#12345678;\", \"&#12345678;\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        doTestUnescapeEntity(\"x&#12345678;y\", \"x&#12345678;y\");                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ doTestUnescapeEntity(\"&#x12345678;\", \"&#x12345678;\");                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ doTestUnescapeEntity(\"x&#x12345678;y\", \"x&#x12345678;y\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testNumberOverflow$catena_2() throws Exception {\n        try{ doTestUnescapeEntity(\"&#12345678;\", \"&#12345678;\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ doTestUnescapeEntity(\"x&#12345678;y\", \"x&#12345678;y\");                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        doTestUnescapeEntity(\"&#x12345678;\", \"&#x12345678;\");                                               /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ doTestUnescapeEntity(\"x&#x12345678;y\", \"x&#x12345678;y\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "    public void testNumberOverflow$catena_3() throws Exception {\n        try{ doTestUnescapeEntity(\"&#12345678;\", \"&#12345678;\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ doTestUnescapeEntity(\"x&#12345678;y\", \"x&#12345678;y\");                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ doTestUnescapeEntity(\"&#x12345678;\", \"&#x12345678;\");                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        doTestUnescapeEntity(\"x&#x12345678;y\", \"x&#x12345678;y\");                                           /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            ],
            "func": {
                "0": "    public void testNumberOverflow$catena_0() throws Exception {\n        doTestUnescapeEntity(\"&#12345678;\", \"&#12345678;\");                                                 /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ doTestUnescapeEntity(\"x&#12345678;y\", \"x&#12345678;y\");                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ doTestUnescapeEntity(\"&#x12345678;\", \"&#x12345678;\");                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ doTestUnescapeEntity(\"x&#x12345678;y\", \"x&#x12345678;y\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "1": "    public void testNumberOverflow$catena_1() throws Exception {\n        try{ doTestUnescapeEntity(\"&#12345678;\", \"&#12345678;\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        doTestUnescapeEntity(\"x&#12345678;y\", \"x&#12345678;y\");                                             /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ doTestUnescapeEntity(\"&#x12345678;\", \"&#x12345678;\");                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ doTestUnescapeEntity(\"x&#x12345678;y\", \"x&#x12345678;y\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "2": "    public void testNumberOverflow$catena_2() throws Exception {\n        try{ doTestUnescapeEntity(\"&#12345678;\", \"&#12345678;\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ doTestUnescapeEntity(\"x&#12345678;y\", \"x&#12345678;y\");                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        doTestUnescapeEntity(\"&#x12345678;\", \"&#x12345678;\");                                               /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ doTestUnescapeEntity(\"x&#x12345678;y\", \"x&#x12345678;y\");                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
                "3": "    public void testNumberOverflow$catena_3() throws Exception {\n        try{ doTestUnescapeEntity(\"&#12345678;\", \"&#12345678;\");                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ doTestUnescapeEntity(\"x&#12345678;y\", \"x&#12345678;y\");                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ doTestUnescapeEntity(\"&#x12345678;\", \"&#x12345678;\");                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        doTestUnescapeEntity(\"x&#x12345678;y\", \"x&#x12345678;y\");                                           /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
            }
        }
    },
    "1010": {
        "failing_tests": [
            "org.apache.commons.lang.EntitiesTest::testNumberOverflow$catena_0",
            "org.apache.commons.lang.EntitiesTest::testNumberOverflow$catena_1"
        ]
    },
    "1110": {
        "failing_tests": [
            "org.apache.commons.lang.EntitiesTest::testNumberOverflow$catena_3",
            "org.apache.commons.lang.EntitiesTest::testNumberOverflow$catena_2"
        ]
    }
}