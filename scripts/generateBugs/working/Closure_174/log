---
Begin generate bug_id: Closure_174
num_of_hunks: 9
timeout for running: 3600
use working dir: ./working/data/Closure_174
Try to checkout Closure_174
build dir: ['./working/data/Closure_174/build/classes', './working/data/Closure_174/build/test']
init FileManager
trace file: src/com/google/javascript/jscomp/JsAst.java
trace file: src/com/google/javascript/jscomp/NodeUtil.java
trace file: src/com/google/javascript/jscomp/ScopedAliases.java
trying to replace old failing tests
new test num: 0
ori test num: 3
pattern: 000000000
patches are written to file
running tests...
used time: Finished in 300.38 seconds
Failing tests: 3
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103a
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103b
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103c
processed: 000000000
pattern: 000000001
try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001
pattern: 000000010
try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010
pattern: 000000100
try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100
pattern: 000001000
try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000
pattern: 000010000
try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

patches are written to file
running tests...
used time: Finished in 279.14 seconds
Failing tests: 7
	com.google.javascript.jscomp.IntegrationTest::testGoogDefine2
	com.google.javascript.jscomp.ProcessClosurePrimitivesTest::testDefineCases
	com.google.javascript.jscomp.ScopedAliasesTest::testOkAliasLocal
	com.google.javascript.jscomp.ScopedAliasesTest::testMultipleLocals
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103a
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103b
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103c
Includes new failing tests, set to unusable
processed: 000010000
pattern: 000100000
try to fix hunk: 3
insert before 2367 with     } else if (value != null) {
      result = IR.exprResult(IR.assign(nameNode, value));
      result.getFirstChild().setJSDocInfo(info);

patches are written to file
running tests...
used time: Finished in 278.09 seconds
Failing tests: 3
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103a
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103b
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103c
No new failing tests but only 1 hunk
processed: 000100000
pattern: 001000000
try to fix hunk: 2
insert before 99 with         (compiler.getErrorManager().getErrorCount() > startErrorCount && !compiler.isIdeMode())) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000
pattern: 010000000
try to fix hunk: 1
replace from 95 with range 1 to
    if (root == null ||

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000
pattern: 100000000
try to fix hunk: 0
insert before 82 with     int startErrorCount = compiler.getErrorManager().getErrorCount();

patches are written to file
running tests...
used time: Finished in 301.23 seconds
Failing tests: 3
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103a
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103b
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103c
No new failing tests but only 1 hunk
processed: 100000000
pattern: 000000011
try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
used time: Finished in 283.24 seconds
Failing tests: 3
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103a
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103b
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103c
Can independently fix []
Could not fix independently
processed: 000000011
pattern: 000000101
try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101
pattern: 000000110
try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110
pattern: 000001001
try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001
pattern: 000001010
try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010
pattern: 000001100
try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

patches are written to file
running tests...
used time: Finished in 283.25 seconds
Failing tests: 3
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103a
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103b
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103c
Can independently fix []
Could not fix independently
processed: 000001100
pattern: 000010001
try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001
pattern: 000010010
try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010
pattern: 000010100
try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100
pattern: 000011000
try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000
pattern: 000100001
try to fix hunk: 3
insert before 2367 with     } else if (value != null) {
      result = IR.exprResult(IR.assign(nameNode, value));
      result.getFirstChild().setJSDocInfo(info);

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001
pattern: 000100010
try to fix hunk: 3
insert before 2367 with     } else if (value != null) {
      result = IR.exprResult(IR.assign(nameNode, value));
      result.getFirstChild().setJSDocInfo(info);

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010
pattern: 000100100
try to fix hunk: 3
insert before 2367 with     } else if (value != null) {
      result = IR.exprResult(IR.assign(nameNode, value));
      result.getFirstChild().setJSDocInfo(info);

try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100
pattern: 000101000
try to fix hunk: 3
insert before 2367 with     } else if (value != null) {
      result = IR.exprResult(IR.assign(nameNode, value));
      result.getFirstChild().setJSDocInfo(info);

try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000
pattern: 000110000
try to fix hunk: 3
insert before 2367 with     } else if (value != null) {
      result = IR.exprResult(IR.assign(nameNode, value));
      result.getFirstChild().setJSDocInfo(info);

try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

patches are written to file
running tests...
used time: Finished in 305.74 seconds
Failing tests: 3
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103a
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103b
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103c
Can independently fix []
Could not fix independently
processed: 000110000
pattern: 001000001
try to fix hunk: 2
insert before 99 with         (compiler.getErrorManager().getErrorCount() > startErrorCount && !compiler.isIdeMode())) {

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001
pattern: 001000010
try to fix hunk: 2
insert before 99 with         (compiler.getErrorManager().getErrorCount() > startErrorCount && !compiler.isIdeMode())) {

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010
pattern: 001000100
try to fix hunk: 2
insert before 99 with         (compiler.getErrorManager().getErrorCount() > startErrorCount && !compiler.isIdeMode())) {

try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100
pattern: 001001000
try to fix hunk: 2
insert before 99 with         (compiler.getErrorManager().getErrorCount() > startErrorCount && !compiler.isIdeMode())) {

try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000
pattern: 001010000
try to fix hunk: 2
insert before 99 with         (compiler.getErrorManager().getErrorCount() > startErrorCount && !compiler.isIdeMode())) {

try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000
pattern: 001100000
try to fix hunk: 2
insert before 99 with         (compiler.getErrorManager().getErrorCount() > startErrorCount && !compiler.isIdeMode())) {

try to fix hunk: 3
insert before 2367 with     } else if (value != null) {
      result = IR.exprResult(IR.assign(nameNode, value));
      result.getFirstChild().setJSDocInfo(info);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000
pattern: 010000001
try to fix hunk: 1
replace from 95 with range 1 to
    if (root == null ||

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000001
pattern: 010000010
try to fix hunk: 1
replace from 95 with range 1 to
    if (root == null ||

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010
pattern: 010000100
try to fix hunk: 1
replace from 95 with range 1 to
    if (root == null ||

try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100
pattern: 010001000
try to fix hunk: 1
replace from 95 with range 1 to
    if (root == null ||

try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000
pattern: 010010000
try to fix hunk: 1
replace from 95 with range 1 to
    if (root == null ||

try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000
pattern: 010100000
try to fix hunk: 1
replace from 95 with range 1 to
    if (root == null ||

try to fix hunk: 3
insert before 2367 with     } else if (value != null) {
      result = IR.exprResult(IR.assign(nameNode, value));
      result.getFirstChild().setJSDocInfo(info);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000
pattern: 011000000
try to fix hunk: 1
replace from 95 with range 1 to
    if (root == null ||

try to fix hunk: 2
insert before 99 with         (compiler.getErrorManager().getErrorCount() > startErrorCount && !compiler.isIdeMode())) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000
pattern: 100000001
try to fix hunk: 0
insert before 82 with     int startErrorCount = compiler.getErrorManager().getErrorCount();

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001
pattern: 100000010
try to fix hunk: 0
insert before 82 with     int startErrorCount = compiler.getErrorManager().getErrorCount();

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010
pattern: 100000100
try to fix hunk: 0
insert before 82 with     int startErrorCount = compiler.getErrorManager().getErrorCount();

try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100
pattern: 100001000
try to fix hunk: 0
insert before 82 with     int startErrorCount = compiler.getErrorManager().getErrorCount();

try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000
pattern: 100010000
try to fix hunk: 0
insert before 82 with     int startErrorCount = compiler.getErrorManager().getErrorCount();

try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

patches are written to file
running tests...
used time: Finished in 295.23 seconds
Failing tests: 7
	com.google.javascript.jscomp.IntegrationTest::testGoogDefine2
	com.google.javascript.jscomp.ProcessClosurePrimitivesTest::testDefineCases
	com.google.javascript.jscomp.ScopedAliasesTest::testOkAliasLocal
	com.google.javascript.jscomp.ScopedAliasesTest::testMultipleLocals
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103a
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103b
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103c
Includes new failing tests, set to unusable
processed: 100010000
pattern: 100100000
try to fix hunk: 0
insert before 82 with     int startErrorCount = compiler.getErrorManager().getErrorCount();

try to fix hunk: 3
insert before 2367 with     } else if (value != null) {
      result = IR.exprResult(IR.assign(nameNode, value));
      result.getFirstChild().setJSDocInfo(info);

patches are written to file
running tests...
used time: Finished in 284.49 seconds
Failing tests: 3
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103a
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103b
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103c
Can independently fix []
Could not fix independently
processed: 100100000
pattern: 101000000
try to fix hunk: 0
insert before 82 with     int startErrorCount = compiler.getErrorManager().getErrorCount();

try to fix hunk: 2
insert before 99 with         (compiler.getErrorManager().getErrorCount() > startErrorCount && !compiler.isIdeMode())) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000
pattern: 110000000
try to fix hunk: 0
insert before 82 with     int startErrorCount = compiler.getErrorManager().getErrorCount();

try to fix hunk: 1
replace from 95 with range 1 to
    if (root == null ||

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000
pattern: 000000111
try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000111
pattern: 000001011
try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001011
pattern: 000001101
try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001101
pattern: 000001110
try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001110
pattern: 000010011
try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
used time: Finished in 289.00 seconds
Failing tests: 7
	com.google.javascript.jscomp.IntegrationTest::testGoogDefine2
	com.google.javascript.jscomp.ProcessClosurePrimitivesTest::testDefineCases
	com.google.javascript.jscomp.ScopedAliasesTest::testOkAliasLocal
	com.google.javascript.jscomp.ScopedAliasesTest::testMultipleLocals
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103a
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103b
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103c
Includes new failing tests, set to unusable
processed: 000010011
pattern: 000010101
try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010101
pattern: 000010110
try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010110
pattern: 000011001
try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011001
pattern: 000011010
try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011010
pattern: 000011100
try to fix hunk: 4
replace from 2368 with range 1 to
      result = IR.exprResult(nameNode);

try to fix hunk: 5
replace from 356 with range 2 to
        boolean isVar = parent.isVar();
        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {

try to fix hunk: 6
replace from 365 with range 2 to
        } else if (isVar) {
          Node value = n.hasChildren() ?
              v.getInitialValue().detachFromParent() :
              null;

patches are written to file
running tests...
used time: Finished in 296.60 seconds
Failing tests: 6
	com.google.javascript.jscomp.IntegrationTest::testGoogDefine2
	com.google.javascript.jscomp.ProcessClosurePrimitivesTest::testDefineCases
	com.google.javascript.jscomp.ScopedAliasesTest::testOkAliasLocal
	com.google.javascript.jscomp.ScopedAliasesTest::testMultipleLocals
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103a
	com.google.javascript.jscomp.ScopedAliasesTest::testIssue1103b
Includes new failing tests, set to unusable
processed: 000011100
pattern: 000100011
try to fix hunk: 3
insert before 2367 with     } else if (value != null) {
      result = IR.exprResult(IR.assign(nameNode, value));
      result.getFirstChild().setJSDocInfo(info);

try to fix hunk: 7
insert before 377 with           if (value != null || v.getJSDocInfo() != null) {

try to fix hunk: 8
insert before 386 with           }

patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

