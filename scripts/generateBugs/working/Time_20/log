---
Begin generate bug_id: Time_20
num_of_hunks: 3
use working dir: ./working/data/Time_20
Try to checkout Time_20
build dir: ['./working/data/Time_20/build/classes', './working/data/Time_20/build/tests']
init FileManager
trace file: src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
trace file: src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
trace file: src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
trying to replace old failing tests
edit: replace from 255 range 9 at src/test/java/org/joda/time/format/TestDateTimeFormatterBuilder.java
to
    public void test_printParseZoneDawsonCreek$catena_0() {  // clashes with shorter Dawson
        DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder()
            .appendPattern("yyyy-MM-dd HH:mm ").appendTimeZoneId();
        DateTimeFormatter f = bld.toFormatter();
        
        DateTime dt = new DateTime(2007, 3, 4, 12, 30, 0, DateTimeZone.forID("America/Dawson_Creek"));
        assertEquals("2007-03-04 12:30 America/Dawson_Creek", f.print(dt));                                 /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(dt, f.parseDateTime("2007-03-04 12:30 America/Dawson_Creek"));                    }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void test_printParseZoneDawsonCreek$catena_1() {  // clashes with shorter Dawson
        DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder()
            .appendPattern("yyyy-MM-dd HH:mm ").appendTimeZoneId();
        DateTimeFormatter f = bld.toFormatter();
        
        DateTime dt = new DateTime(2007, 3, 4, 12, 30, 0, DateTimeZone.forID("America/Dawson_Creek"));
        try{ assertEquals("2007-03-04 12:30 America/Dawson_Creek", f.print(dt));                            }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(dt, f.parseDateTime("2007-03-04 12:30 America/Dawson_Creek"));                         /***** ORIGINAL ASSERTION IS HERE *****/
    }
trace file: src/test/java/org/joda/time/format/TestDateTimeFormatterBuilder.java
new test num: 2
ori test num: 0
pattern: 000
patches are written to file
running tests...
used time: Finished in 45.11 seconds
Failing tests: 1
	org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek$catena_1
pattern: 001
try to fix hunk: 2
insert before 2548 with             if (best != null) {
                bucket.setZone(DateTimeZone.forID(best));
                return position + best.length();
            }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 010
try to fix hunk: 1
replace from 2544 with range 2 to
                	if (best == null || id.length() > best.length()) {
                		best = id;
                	}

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 100
try to fix hunk: 0
insert before 2542 with             String best = null;

patches are written to file
running tests...
used time: Finished in 34.21 seconds
Failing tests: 1
	org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek$catena_1
No new failing tests but only 1 hunk
pattern: 011
try to fix hunk: 1
replace from 2544 with range 2 to
                	if (best == null || id.length() > best.length()) {
                		best = id;
                	}

try to fix hunk: 2
insert before 2548 with             if (best != null) {
                bucket.setZone(DateTimeZone.forID(best));
                return position + best.length();
            }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 101
try to fix hunk: 0
insert before 2542 with             String best = null;

try to fix hunk: 2
insert before 2548 with             if (best != null) {
                bucket.setZone(DateTimeZone.forID(best));
                return position + best.length();
            }

patches are written to file
running tests...
used time: Finished in 34.52 seconds
Failing tests: 1
	org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek$catena_1
Can independently fix []
Could not fix independently
pattern: 110
try to fix hunk: 0
insert before 2542 with             String best = null;

try to fix hunk: 1
replace from 2544 with range 2 to
                	if (best == null || id.length() > best.length()) {
                		best = id;
                	}

patches are written to file
running tests...
used time: Finished in 33.21 seconds
Failing tests: 9
	org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseOffsetAndZone
	org.joda.time.format.TestDateTimeFormatterBuilder::test_parseWrongOffsetAndZone
	org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseOffsetAndZone
	org.joda.time.format.TestDateTimeFormatterBuilder::test_localParseWrongOffsetAndZone
	org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek$catena_1
	org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneParis
	org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneTokyo
	org.joda.time.format.TestDateTimeFormatterBuilder::test_localPrintParseZoneTokyo
	org.joda.time.format.TestDateTimeFormatterBuilder::test_appendTimeZoneId
Includes new failing tests, set to unusable
pattern: 111
try to fix hunk: 0
insert before 2542 with             String best = null;

try to fix hunk: 1
replace from 2544 with range 2 to
                	if (best == null || id.length() > best.length()) {
                		best = id;
                	}

try to fix hunk: 2
insert before 2548 with             if (best != null) {
                bucket.setZone(DateTimeZone.forID(best));
                return position + best.length();
            }

patches are written to file
running tests...
used time: Finished in 32.45 seconds
Failing tests: 0
Can independently fix ['org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek$catena_1']
select new bug
Pattern: 111
failing tests: org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek$catena_1
Find 1 new bugs
