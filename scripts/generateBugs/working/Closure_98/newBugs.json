{
    "original": {
        "num_of_hunks": 5,
        "0": {
            "file_name": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
            "replaced_with": "      for (BasicBlock block = ref.getBasicBlock();\n           block != null; block = block.getParent()) {\n        if (block.isFunction) {\n          break;\n        } else if (block.isLoop) {\n          return false;\n        }\n      }\n",
            "patch_type": "insert",
            "next_line_no": 361
        },
        "1": {
            "file_name": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
            "replaced_with": "    private final boolean isFunction;\n",
            "patch_type": "insert",
            "next_line_no": 545
        },
        "2": {
            "file_name": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
            "replaced_with": "    private final boolean isLoop;\n",
            "patch_type": "insert",
            "next_line_no": 549
        },
        "3": {
            "file_name": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
            "replaced_with": "      this.isFunction = root.getType() == Token.FUNCTION;\n",
            "patch_type": "insert",
            "next_line_no": 561
        },
        "4": {
            "file_name": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
            "replaced_with": "      if (root.getParent() != null) {\n        int pType = root.getParent().getType();\n        this.isLoop = pType == Token.DO ||\n            pType == Token.WHILE ||\n            pType == Token.FOR;\n      } else {\n        this.isLoop = false;\n      }\n",
            "patch_type": "insert",
            "next_line_no": 562
        }
    },
    "method": {
        "failing_tests": [
            "com.google.javascript.jscomp.InlineVariablesTest::testNoInlineAliasesInLoop"
        ],
        "com.google.javascript.jscomp.InlineVariablesTest::testNoInlineAliasesInLoop": {
            "file_path": "test/com/google/javascript/jscomp/InlineVariablesTest.java",
            "Instance": "Begin: Pos(616, 10)\nEnd: Pos(626, 3)\nSource: /root/workbench/exportInfo/d4j_buggy/Closure_98/test//com/google/javascript/jscomp/InlineVariablesTest.java\nName: testNoInlineAliasesInLoop\nChilds: [StatementAssertion<Begin: Pos(617, 5), End: Pos(625, 13)>,\n]",
            "source": "/root/workbench/exportInfo/d4j_buggy/Closure_98/test//com/google/javascript/jscomp/InlineVariablesTest.java",
            "name": "testNoInlineAliasesInLoop",
            "begin": "Pos(616, 10)",
            "end": "Pos(626, 3)",
            "begin_line_no": 616,
            "end_line_no": 626,
            "child": [
                "Begin: Pos(617, 5)\nEnd: Pos(625, 13)\nSource: StatementExpression\nName: <Unknown>\nChilds: []"
            ],
            "splited": [],
            "func": {}
        }
    },
    "11111": {
        "failing_tests": [
            "com.google.javascript.jscomp.InlineVariablesTest::testNoInlineAliasesInLoop"
        ]
    }
}