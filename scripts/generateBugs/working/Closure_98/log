---
Begin generate bug_id: Closure_98
num_of_hunks: 5
timeout for running: 3600
use working dir: ./working/data/Closure_98
Try to checkout Closure_98
build dir: ['./working/data/Closure_98/build/classes', './working/data/Closure_98/build/test']
init FileManager
trace file: src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
trying to replace old failing tests
new test num: 0
ori test num: 1
pattern: 00000
patches are written to file
running tests...
used time: Finished in 133.83 seconds
Failing tests: 1
	com.google.javascript.jscomp.InlineVariablesTest::testNoInlineAliasesInLoop
processed: 00000
pattern: 00001
try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001
pattern: 00010
try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010
pattern: 00100
try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100
pattern: 01000
try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000
pattern: 10000
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000
pattern: 00011
try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011
pattern: 00101
try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
used time: Finished in 119.28 seconds
Failing tests: 1
	com.google.javascript.jscomp.InlineVariablesTest::testNoInlineAliasesInLoop
Can independently fix []
Could not fix independently
processed: 00101
pattern: 00110
try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110
pattern: 01001
try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001
pattern: 01010
try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

patches are written to file
running tests...
used time: Finished in 119.67 seconds
Failing tests: 1
	com.google.javascript.jscomp.InlineVariablesTest::testNoInlineAliasesInLoop
Can independently fix []
Could not fix independently
processed: 01010
pattern: 01100
try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100
pattern: 10001
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001
pattern: 10010
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010
pattern: 10100
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100
pattern: 11000
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000
pattern: 00111
try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00111
pattern: 01011
try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01011
pattern: 01101
try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01101
pattern: 01110
try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01110
pattern: 10011
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10011
pattern: 10101
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10101
pattern: 10110
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10110
pattern: 11001
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11001
pattern: 11010
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11010
pattern: 11100
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11100
pattern: 01111
try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
used time: Finished in 118.73 seconds
Failing tests: 1
	com.google.javascript.jscomp.InlineVariablesTest::testNoInlineAliasesInLoop
Can independently fix []
Could not fix independently
processed: 01111
pattern: 10111
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10111
pattern: 11011
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11011
pattern: 11101
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11101
pattern: 11110
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11110
pattern: 11111
try to fix hunk: 0
insert before 361 with       for (BasicBlock block = ref.getBasicBlock();
           block != null; block = block.getParent()) {
        if (block.isFunction) {
          break;
        } else if (block.isLoop) {
          return false;
        }
      }

try to fix hunk: 1
insert before 545 with     private final boolean isFunction;

try to fix hunk: 2
insert before 549 with     private final boolean isLoop;

try to fix hunk: 3
insert before 561 with       this.isFunction = root.getType() == Token.FUNCTION;

try to fix hunk: 4
insert before 562 with       if (root.getParent() != null) {
        int pType = root.getParent().getType();
        this.isLoop = pType == Token.DO ||
            pType == Token.WHILE ||
            pType == Token.FOR;
      } else {
        this.isLoop = false;
      }

patches are written to file
running tests...
used time: Finished in 117.43 seconds
Failing tests: 0
Can independently fix ['com.google.javascript.jscomp.InlineVariablesTest::testNoInlineAliasesInLoop']
select new bug
Pattern: 11111
new failing tests:
com.google.javascript.jscomp.InlineVariablesTest::testNoInlineAliasesInLoop
Save found bug
processed: 11111
Find 1 new bugs
