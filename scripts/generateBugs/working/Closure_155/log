---
Begin generate bug_id: Closure_155
num_of_hunks: 15
NOTICE: may not contains full fix patterns for hunks are too much (15 hunks)
timeout for running: 3600
use working dir: ./working/data/Closure_155
Try to checkout Closure_155
build dir: ['./working/data/Closure_155/build/classes', './working/data/Closure_155/build/test']
init FileManager
trace file: src/com/google/javascript/jscomp/InlineVariables.java
trace file: src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
trace file: src/com/google/javascript/jscomp/Scope.java
trying to replace old failing tests
new test num: 0
ori test num: 7
pattern: 000000000000000
patches are written to file
running tests...
used time: Finished in 193.14 seconds
Failing tests: 7
	com.google.javascript.jscomp.InlineVariablesTest::testArgumentsModifiedInInnerFunction
	com.google.javascript.jscomp.InlineVariablesTest::testArgumentsModifiedInOuterFunction
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378ModifiedArguments1
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378ModifiedArguments2
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments1
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments2
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments4
processed: 000000000000000
pattern: 100000000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000000000
pattern: 010000000000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000000000
pattern: 001000000000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000000000
pattern: 000100000000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000000000
pattern: 000010000000000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
used time: Finished in 178.80 seconds
Failing tests: 7
	com.google.javascript.jscomp.InlineVariablesTest::testArgumentsModifiedInInnerFunction
	com.google.javascript.jscomp.InlineVariablesTest::testArgumentsModifiedInOuterFunction
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378ModifiedArguments1
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378ModifiedArguments2
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments1
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments2
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments4
No new failing tests but only 1 hunk
processed: 000010000000000
pattern: 000001000000000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000000000
pattern: 000000100000000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100000000
pattern: 000000010000000
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010000000
pattern: 000000001000000
try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
used time: Finished in 184.25 seconds
Failing tests: 7
	com.google.javascript.jscomp.InlineVariablesTest::testArgumentsModifiedInInnerFunction
	com.google.javascript.jscomp.InlineVariablesTest::testArgumentsModifiedInOuterFunction
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378ModifiedArguments1
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378ModifiedArguments2
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments1
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments2
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments4
No new failing tests but only 1 hunk
processed: 000000001000000
pattern: 000000000100000
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000100000
pattern: 000000000010000
try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000010000
pattern: 000000000001000
try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000001000
pattern: 000000000000100
try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000000100
pattern: 000000000000010
try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000000010
pattern: 000000000000001
try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000000001
pattern: 110000000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000000000
pattern: 101000000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000000000
pattern: 100100000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000000000
pattern: 100010000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000000000
pattern: 100001000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000000000
pattern: 100000100000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100000000
pattern: 100000010000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010000000
pattern: 100000001000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001000000
pattern: 100000000100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000100000
pattern: 100000000010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000010000
pattern: 100000000001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000001000
pattern: 100000000000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000000100
pattern: 100000000000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000000010
pattern: 100000000000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000000001
pattern: 011000000000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000000000
pattern: 010100000000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000000000
pattern: 010010000000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000000000
pattern: 010001000000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000000000
pattern: 010000100000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100000000
pattern: 010000010000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010000000
pattern: 010000001000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000001000000
pattern: 010000000100000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000100000
pattern: 010000000010000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000010000
pattern: 010000000001000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000001000
pattern: 010000000000100
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000000100
pattern: 010000000000010
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000000010
pattern: 010000000000001
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000000001
pattern: 001100000000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000000000
pattern: 001010000000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000000000
pattern: 001001000000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000000000
pattern: 001000100000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100000000
pattern: 001000010000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010000000
pattern: 001000001000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001000000
pattern: 001000000100000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000100000
pattern: 001000000010000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000010000
pattern: 001000000001000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000001000
pattern: 001000000000100
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000000100
pattern: 001000000000010
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000000010
pattern: 001000000000001
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000000001
pattern: 000110000000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000000000
pattern: 000101000000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000000000
pattern: 000100100000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100000000
pattern: 000100010000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010000000
pattern: 000100001000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001000000
pattern: 000100000100000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000100000
pattern: 000100000010000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000010000
pattern: 000100000001000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000001000
pattern: 000100000000100
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000000100
pattern: 000100000000010
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000000010
pattern: 000100000000001
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000000001
pattern: 000011000000000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000000000
pattern: 000010100000000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100000000
pattern: 000010010000000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010000000
pattern: 000010001000000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
used time: Finished in 181.50 seconds
Failing tests: 7
	com.google.javascript.jscomp.InlineVariablesTest::testArgumentsModifiedInInnerFunction
	com.google.javascript.jscomp.InlineVariablesTest::testArgumentsModifiedInOuterFunction
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378ModifiedArguments1
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378ModifiedArguments2
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments1
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments2
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments4
Can independently fix []
Could not fix independently
processed: 000010001000000
pattern: 000010000100000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000100000
pattern: 000010000010000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000010000
pattern: 000010000001000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000001000
pattern: 000010000000100
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000000100
pattern: 000010000000010
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000000010
pattern: 000010000000001
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000000001
pattern: 000001100000000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100000000
pattern: 000001010000000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010000000
pattern: 000001001000000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001000000
pattern: 000001000100000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000100000
pattern: 000001000010000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000010000
pattern: 000001000001000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000001000
pattern: 000001000000100
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000000100
pattern: 000001000000010
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000000010
pattern: 000001000000001
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000000001
pattern: 000000110000000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110000000
pattern: 000000101000000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101000000
pattern: 000000100100000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100100000
pattern: 000000100010000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100010000
pattern: 000000100001000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100001000
pattern: 000000100000100
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100000100
pattern: 000000100000010
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100000010
pattern: 000000100000001
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100000001
pattern: 000000011000000
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000011000000
pattern: 000000010100000
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010100000
pattern: 000000010010000
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010010000
pattern: 000000010001000
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010001000
pattern: 000000010000100
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010000100
pattern: 000000010000010
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010000010
pattern: 000000010000001
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010000001
pattern: 000000001100000
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001100000
pattern: 000000001010000
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001010000
pattern: 000000001001000
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001001000
pattern: 000000001000100
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001000100
pattern: 000000001000010
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001000010
pattern: 000000001000001
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001000001
pattern: 000000000110000
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000110000
pattern: 000000000101000
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000101000
pattern: 000000000100100
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000100100
pattern: 000000000100010
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000100010
pattern: 000000000100001
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000100001
pattern: 000000000011000
try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000011000
pattern: 000000000010100
try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000010100
pattern: 000000000010010
try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000010010
pattern: 000000000010001
try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000010001
pattern: 000000000001100
try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000001100
pattern: 000000000001010
try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000001010
pattern: 000000000001001
try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000001001
pattern: 000000000000110
try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000000110
pattern: 000000000000101
try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000000101
pattern: 000000000000011
try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000000011
pattern: 111000000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000000000
pattern: 110100000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000000000
pattern: 110010000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010000000000
pattern: 110001000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000000000
pattern: 110000100000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100000000
pattern: 110000010000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010000000
pattern: 110000001000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001000000
pattern: 110000000100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000100000
pattern: 110000000010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000010000
pattern: 110000000001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000001000
pattern: 110000000000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000000100
pattern: 110000000000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000000010
pattern: 110000000000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000000001
pattern: 101100000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101100000000000
pattern: 101010000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101010000000000
pattern: 101001000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101001000000000
pattern: 101000100000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000100000000
pattern: 101000010000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000010000000
pattern: 101000001000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000001000000
pattern: 101000000100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000100000
pattern: 101000000010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000010000
pattern: 101000000001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000001000
pattern: 101000000000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000000100
pattern: 101000000000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000000010
pattern: 101000000000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 101000000000001
pattern: 100110000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100110000000000
pattern: 100101000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100101000000000
pattern: 100100100000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100100000000
pattern: 100100010000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100010000000
pattern: 100100001000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100001000000
pattern: 100100000100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000100000
pattern: 100100000010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000010000
pattern: 100100000001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000001000
pattern: 100100000000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000000100
pattern: 100100000000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000000010
pattern: 100100000000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100100000000001
pattern: 100011000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100011000000000
pattern: 100010100000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010100000000
pattern: 100010010000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010010000000
pattern: 100010001000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010001000000
pattern: 100010000100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000100000
pattern: 100010000010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000010000
pattern: 100010000001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000001000
pattern: 100010000000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000000100
pattern: 100010000000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000000010
pattern: 100010000000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100010000000001
pattern: 100001100000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001100000000
pattern: 100001010000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001010000000
pattern: 100001001000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001001000000
pattern: 100001000100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000100000
pattern: 100001000010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000010000
pattern: 100001000001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000001000
pattern: 100001000000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000000100
pattern: 100001000000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000000010
pattern: 100001000000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100001000000001
pattern: 100000110000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000110000000
pattern: 100000101000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000101000000
pattern: 100000100100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100100000
pattern: 100000100010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100010000
pattern: 100000100001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100001000
pattern: 100000100000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100000100
pattern: 100000100000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100000010
pattern: 100000100000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000100000001
pattern: 100000011000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000011000000
pattern: 100000010100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010100000
pattern: 100000010010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010010000
pattern: 100000010001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010001000
pattern: 100000010000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010000100
pattern: 100000010000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010000010
pattern: 100000010000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000010000001
pattern: 100000001100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001100000
pattern: 100000001010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001010000
pattern: 100000001001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001001000
pattern: 100000001000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001000100
pattern: 100000001000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001000010
pattern: 100000001000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000001000001
pattern: 100000000110000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000110000
pattern: 100000000101000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000101000
pattern: 100000000100100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000100100
pattern: 100000000100010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000100010
pattern: 100000000100001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000100001
pattern: 100000000011000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000011000
pattern: 100000000010100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000010100
pattern: 100000000010010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000010010
pattern: 100000000010001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000010001
pattern: 100000000001100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000001100
pattern: 100000000001010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000001010
pattern: 100000000001001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000001001
pattern: 100000000000110
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000000110
pattern: 100000000000101
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000000101
pattern: 100000000000011
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 100000000000011
pattern: 011100000000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011100000000000
pattern: 011010000000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011010000000000
pattern: 011001000000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011001000000000
pattern: 011000100000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000100000000
pattern: 011000010000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000010000000
pattern: 011000001000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000001000000
pattern: 011000000100000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000100000
pattern: 011000000010000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000010000
pattern: 011000000001000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000001000
pattern: 011000000000100
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000000100
pattern: 011000000000010
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000000010
pattern: 011000000000001
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 011000000000001
pattern: 010110000000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010110000000000
pattern: 010101000000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010101000000000
pattern: 010100100000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100100000000
pattern: 010100010000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100010000000
pattern: 010100001000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100001000000
pattern: 010100000100000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000100000
pattern: 010100000010000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000010000
pattern: 010100000001000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000001000
pattern: 010100000000100
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000000100
pattern: 010100000000010
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000000010
pattern: 010100000000001
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010100000000001
pattern: 010011000000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010011000000000
pattern: 010010100000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010100000000
pattern: 010010010000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010010000000
pattern: 010010001000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010001000000
pattern: 010010000100000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000100000
pattern: 010010000010000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000010000
pattern: 010010000001000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000001000
pattern: 010010000000100
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000000100
pattern: 010010000000010
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000000010
pattern: 010010000000001
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010010000000001
pattern: 010001100000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001100000000
pattern: 010001010000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001010000000
pattern: 010001001000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001001000000
pattern: 010001000100000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000100000
pattern: 010001000010000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000010000
pattern: 010001000001000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000001000
pattern: 010001000000100
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000000100
pattern: 010001000000010
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000000010
pattern: 010001000000001
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010001000000001
pattern: 010000110000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000110000000
pattern: 010000101000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000101000000
pattern: 010000100100000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100100000
pattern: 010000100010000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100010000
pattern: 010000100001000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100001000
pattern: 010000100000100
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100000100
pattern: 010000100000010
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100000010
pattern: 010000100000001
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000100000001
pattern: 010000011000000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000011000000
pattern: 010000010100000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010100000
pattern: 010000010010000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010010000
pattern: 010000010001000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010001000
pattern: 010000010000100
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010000100
pattern: 010000010000010
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010000010
pattern: 010000010000001
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000010000001
pattern: 010000001100000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000001100000
pattern: 010000001010000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000001010000
pattern: 010000001001000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000001001000
pattern: 010000001000100
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000001000100
pattern: 010000001000010
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000001000010
pattern: 010000001000001
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000001000001
pattern: 010000000110000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000110000
pattern: 010000000101000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000101000
pattern: 010000000100100
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000100100
pattern: 010000000100010
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000100010
pattern: 010000000100001
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000100001
pattern: 010000000011000
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000011000
pattern: 010000000010100
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000010100
pattern: 010000000010010
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000010010
pattern: 010000000010001
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000010001
pattern: 010000000001100
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000001100
pattern: 010000000001010
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000001010
pattern: 010000000001001
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000001001
pattern: 010000000000110
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000000110
pattern: 010000000000101
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000000101
pattern: 010000000000011
try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 010000000000011
pattern: 001110000000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001110000000000
pattern: 001101000000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001101000000000
pattern: 001100100000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100100000000
pattern: 001100010000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100010000000
pattern: 001100001000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100001000000
pattern: 001100000100000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000100000
pattern: 001100000010000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000010000
pattern: 001100000001000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000001000
pattern: 001100000000100
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000000100
pattern: 001100000000010
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000000010
pattern: 001100000000001
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001100000000001
pattern: 001011000000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001011000000000
pattern: 001010100000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010100000000
pattern: 001010010000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010010000000
pattern: 001010001000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010001000000
pattern: 001010000100000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000100000
pattern: 001010000010000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000010000
pattern: 001010000001000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000001000
pattern: 001010000000100
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000000100
pattern: 001010000000010
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000000010
pattern: 001010000000001
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001010000000001
pattern: 001001100000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001100000000
pattern: 001001010000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001010000000
pattern: 001001001000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001001000000
pattern: 001001000100000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000100000
pattern: 001001000010000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000010000
pattern: 001001000001000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000001000
pattern: 001001000000100
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000000100
pattern: 001001000000010
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000000010
pattern: 001001000000001
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001001000000001
pattern: 001000110000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000110000000
pattern: 001000101000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000101000000
pattern: 001000100100000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100100000
pattern: 001000100010000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100010000
pattern: 001000100001000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100001000
pattern: 001000100000100
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100000100
pattern: 001000100000010
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100000010
pattern: 001000100000001
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000100000001
pattern: 001000011000000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000011000000
pattern: 001000010100000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010100000
pattern: 001000010010000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010010000
pattern: 001000010001000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010001000
pattern: 001000010000100
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010000100
pattern: 001000010000010
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010000010
pattern: 001000010000001
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000010000001
pattern: 001000001100000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001100000
pattern: 001000001010000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001010000
pattern: 001000001001000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001001000
pattern: 001000001000100
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001000100
pattern: 001000001000010
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001000010
pattern: 001000001000001
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000001000001
pattern: 001000000110000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000110000
pattern: 001000000101000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000101000
pattern: 001000000100100
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000100100
pattern: 001000000100010
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000100010
pattern: 001000000100001
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000100001
pattern: 001000000011000
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000011000
pattern: 001000000010100
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000010100
pattern: 001000000010010
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000010010
pattern: 001000000010001
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000010001
pattern: 001000000001100
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000001100
pattern: 001000000001010
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000001010
pattern: 001000000001001
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000001001
pattern: 001000000000110
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000000110
pattern: 001000000000101
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000000101
pattern: 001000000000011
try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 001000000000011
pattern: 000111000000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000111000000000
pattern: 000110100000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110100000000
pattern: 000110010000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110010000000
pattern: 000110001000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110001000000
pattern: 000110000100000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000100000
pattern: 000110000010000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000010000
pattern: 000110000001000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000001000
pattern: 000110000000100
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000000100
pattern: 000110000000010
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000000010
pattern: 000110000000001
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000110000000001
pattern: 000101100000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101100000000
pattern: 000101010000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101010000000
pattern: 000101001000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101001000000
pattern: 000101000100000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000100000
pattern: 000101000010000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000010000
pattern: 000101000001000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000001000
pattern: 000101000000100
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000000100
pattern: 000101000000010
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000000010
pattern: 000101000000001
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000101000000001
pattern: 000100110000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100110000000
pattern: 000100101000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100101000000
pattern: 000100100100000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100100000
pattern: 000100100010000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100010000
pattern: 000100100001000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100001000
pattern: 000100100000100
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100000100
pattern: 000100100000010
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100000010
pattern: 000100100000001
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100100000001
pattern: 000100011000000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100011000000
pattern: 000100010100000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010100000
pattern: 000100010010000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010010000
pattern: 000100010001000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010001000
pattern: 000100010000100
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010000100
pattern: 000100010000010
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010000010
pattern: 000100010000001
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100010000001
pattern: 000100001100000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001100000
pattern: 000100001010000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001010000
pattern: 000100001001000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001001000
pattern: 000100001000100
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001000100
pattern: 000100001000010
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001000010
pattern: 000100001000001
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100001000001
pattern: 000100000110000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000110000
pattern: 000100000101000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000101000
pattern: 000100000100100
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000100100
pattern: 000100000100010
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000100010
pattern: 000100000100001
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000100001
pattern: 000100000011000
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000011000
pattern: 000100000010100
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000010100
pattern: 000100000010010
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000010010
pattern: 000100000010001
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000010001
pattern: 000100000001100
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000001100
pattern: 000100000001010
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000001010
pattern: 000100000001001
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000001001
pattern: 000100000000110
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000000110
pattern: 000100000000101
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000000101
pattern: 000100000000011
try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000100000000011
pattern: 000011100000000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011100000000
pattern: 000011010000000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011010000000
pattern: 000011001000000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011001000000
pattern: 000011000100000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000100000
pattern: 000011000010000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000010000
pattern: 000011000001000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000001000
pattern: 000011000000100
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000000100
pattern: 000011000000010
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000000010
pattern: 000011000000001
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000011000000001
pattern: 000010110000000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010110000000
pattern: 000010101000000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010101000000
pattern: 000010100100000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100100000
pattern: 000010100010000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100010000
pattern: 000010100001000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100001000
pattern: 000010100000100
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100000100
pattern: 000010100000010
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100000010
pattern: 000010100000001
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010100000001
pattern: 000010011000000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010011000000
pattern: 000010010100000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010100000
pattern: 000010010010000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010010000
pattern: 000010010001000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010001000
pattern: 000010010000100
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010000100
pattern: 000010010000010
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010000010
pattern: 000010010000001
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010010000001
pattern: 000010001100000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001100000
pattern: 000010001010000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001010000
pattern: 000010001001000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001001000
pattern: 000010001000100
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001000100
pattern: 000010001000010
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001000010
pattern: 000010001000001
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010001000001
pattern: 000010000110000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000110000
pattern: 000010000101000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000101000
pattern: 000010000100100
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000100100
pattern: 000010000100010
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000100010
pattern: 000010000100001
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000100001
pattern: 000010000011000
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000011000
pattern: 000010000010100
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000010100
pattern: 000010000010010
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000010010
pattern: 000010000010001
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000010001
pattern: 000010000001100
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000001100
pattern: 000010000001010
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000001010
pattern: 000010000001001
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000001001
pattern: 000010000000110
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000000110
pattern: 000010000000101
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000000101
pattern: 000010000000011
try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000010000000011
pattern: 000001110000000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001110000000
pattern: 000001101000000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001101000000
pattern: 000001100100000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100100000
pattern: 000001100010000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100010000
pattern: 000001100001000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100001000
pattern: 000001100000100
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100000100
pattern: 000001100000010
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100000010
pattern: 000001100000001
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001100000001
pattern: 000001011000000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001011000000
pattern: 000001010100000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010100000
pattern: 000001010010000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010010000
pattern: 000001010001000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010001000
pattern: 000001010000100
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010000100
pattern: 000001010000010
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010000010
pattern: 000001010000001
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001010000001
pattern: 000001001100000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001100000
pattern: 000001001010000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001010000
pattern: 000001001001000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001001000
pattern: 000001001000100
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001000100
pattern: 000001001000010
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001000010
pattern: 000001001000001
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001001000001
pattern: 000001000110000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000110000
pattern: 000001000101000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000101000
pattern: 000001000100100
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000100100
pattern: 000001000100010
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000100010
pattern: 000001000100001
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000100001
pattern: 000001000011000
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000011000
pattern: 000001000010100
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000010100
pattern: 000001000010010
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000010010
pattern: 000001000010001
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000010001
pattern: 000001000001100
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000001100
pattern: 000001000001010
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000001010
pattern: 000001000001001
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000001001
pattern: 000001000000110
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000000110
pattern: 000001000000101
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000000101
pattern: 000001000000011
try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000001000000011
pattern: 000000111000000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000111000000
pattern: 000000110100000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110100000
pattern: 000000110010000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110010000
pattern: 000000110001000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110001000
pattern: 000000110000100
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110000100
pattern: 000000110000010
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110000010
pattern: 000000110000001
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000110000001
pattern: 000000101100000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101100000
pattern: 000000101010000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101010000
pattern: 000000101001000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101001000
pattern: 000000101000100
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101000100
pattern: 000000101000010
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101000010
pattern: 000000101000001
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000101000001
pattern: 000000100110000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100110000
pattern: 000000100101000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100101000
pattern: 000000100100100
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100100100
pattern: 000000100100010
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100100010
pattern: 000000100100001
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100100001
pattern: 000000100011000
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100011000
pattern: 000000100010100
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100010100
pattern: 000000100010010
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100010010
pattern: 000000100010001
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100010001
pattern: 000000100001100
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100001100
pattern: 000000100001010
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100001010
pattern: 000000100001001
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100001001
pattern: 000000100000110
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100000110
pattern: 000000100000101
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100000101
pattern: 000000100000011
try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000100000011
pattern: 000000011100000
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000011100000
pattern: 000000011010000
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000011010000
pattern: 000000011001000
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000011001000
pattern: 000000011000100
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000011000100
pattern: 000000011000010
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000011000010
pattern: 000000011000001
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000011000001
pattern: 000000010110000
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010110000
pattern: 000000010101000
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010101000
pattern: 000000010100100
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010100100
pattern: 000000010100010
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010100010
pattern: 000000010100001
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010100001
pattern: 000000010011000
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010011000
pattern: 000000010010100
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010010100
pattern: 000000010010010
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010010010
pattern: 000000010010001
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010010001
pattern: 000000010001100
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010001100
pattern: 000000010001010
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010001010
pattern: 000000010001001
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010001001
pattern: 000000010000110
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010000110
pattern: 000000010000101
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010000101
pattern: 000000010000011
try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000010000011
pattern: 000000001110000
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001110000
pattern: 000000001101000
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001101000
pattern: 000000001100100
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001100100
pattern: 000000001100010
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001100010
pattern: 000000001100001
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001100001
pattern: 000000001011000
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001011000
pattern: 000000001010100
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001010100
pattern: 000000001010010
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001010010
pattern: 000000001010001
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001010001
pattern: 000000001001100
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001001100
pattern: 000000001001010
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001001010
pattern: 000000001001001
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001001001
pattern: 000000001000110
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001000110
pattern: 000000001000101
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001000101
pattern: 000000001000011
try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000001000011
pattern: 000000000111000
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000111000
pattern: 000000000110100
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000110100
pattern: 000000000110010
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
used time: Finished in 187.93 seconds
Failing tests: 7
	com.google.javascript.jscomp.InlineVariablesTest::testArgumentsModifiedInInnerFunction
	com.google.javascript.jscomp.InlineVariablesTest::testArgumentsModifiedInOuterFunction
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378ModifiedArguments1
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378ModifiedArguments2
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments1
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments2
	com.google.javascript.jscomp.InlineVariablesTest::testIssue378EscapedArguments4
Can independently fix []
Could not fix independently
processed: 000000000110010
pattern: 000000000110001
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000110001
pattern: 000000000101100
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000101100
pattern: 000000000101010
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000101010
pattern: 000000000101001
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000101001
pattern: 000000000100110
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000100110
pattern: 000000000100101
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000100101
pattern: 000000000100011
try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000100011
pattern: 000000000011100
try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000011100
pattern: 000000000011010
try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000011010
pattern: 000000000011001
try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000011001
pattern: 000000000010110
try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000010110
pattern: 000000000010101
try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000010101
pattern: 000000000010011
try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000010011
pattern: 000000000001110
try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000001110
pattern: 000000000001101
try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000001101
pattern: 000000000001011
try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000001011
pattern: 000000000000111
try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 000000000000111
pattern: 111100000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111100000000000
pattern: 111010000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111010000000000
pattern: 111001000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111001000000000
pattern: 111000100000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000100000000
pattern: 111000010000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000010000000
pattern: 111000001000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000001000000
pattern: 111000000100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000100000
pattern: 111000000010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000010000
pattern: 111000000001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000001000
pattern: 111000000000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000000100
pattern: 111000000000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000000010
pattern: 111000000000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 2
insert before 225 with     private boolean maybeEscapedOrModifiedArguments(
        Scope scope, Map<Var, ReferenceCollection> referenceMap) {
      if (scope.isLocal()) {
        Var arguments = scope.getArgumentsVar();
        ReferenceCollection refs = referenceMap.get(arguments);
        if (refs != null && !refs.references.isEmpty()) {
          for (Reference ref : refs.references) {
            Node refNode = ref.getNameNode();
            Node refParent = ref.getParent();

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 111000000000001
pattern: 110110000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110110000000000
pattern: 110101000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110101000000000
pattern: 110100100000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100100000000
pattern: 110100010000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100010000000
pattern: 110100001000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100001000000
pattern: 110100000100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000100000
pattern: 110100000010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000010000
pattern: 110100000001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000001000
pattern: 110100000000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000000100
pattern: 110100000000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000000010
pattern: 110100000000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 3
insert before 227 with             if (!(NodeUtil.isGet(refParent)
                && refNode == ref.getParent().getFirstChild()
                && !isLValue(refParent))) {
              return true;
            }
          }
        }
      }
      return false;
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110100000000001
pattern: 110011000000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110011000000000
pattern: 110010100000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010100000000
pattern: 110010010000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010010000000
pattern: 110010001000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010001000000
pattern: 110010000100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010000100000
pattern: 110010000010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010000010000
pattern: 110010000001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010000001000
pattern: 110010000000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010000000100
pattern: 110010000000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010000000010
pattern: 110010000000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 4
insert before 228 with     private boolean isLValue(Node n) {
      Node parent = n.getParent();
      return (parent.getType() == Token.INC
          || parent.getType() == Token.DEC
          || (NodeUtil.isAssignmentOp(parent)
          && parent.getFirstChild() == n));
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110010000000001
pattern: 110001100000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001100000000
pattern: 110001010000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001010000000
pattern: 110001001000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001001000000
pattern: 110001000100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000100000
pattern: 110001000010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000010000
pattern: 110001000001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000001000
pattern: 110001000000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000000100
pattern: 110001000000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000000010
pattern: 110001000000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 5
replace from 230 with range 1 to
        Var v, ReferenceCollection referenceInfo,
        boolean maybeModifiedArguments) {

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110001000000001
pattern: 110000110000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000110000000
pattern: 110000101000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000101000000
pattern: 110000100100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100100000
pattern: 110000100010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100010000
pattern: 110000100001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100001000
pattern: 110000100000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100000100
pattern: 110000100000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100000010
pattern: 110000100000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 6
replace from 275 with range 1 to
      if (!maybeModifiedArguments &&

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000100000001
pattern: 110000011000000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 8
insert before 63 with   private Var arguments;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000011000000
pattern: 110000010100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010100000
pattern: 110000010010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010010000
pattern: 110000010001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010001000
pattern: 110000010000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010000100
pattern: 110000010000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010000010
pattern: 110000010000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 7
replace from 123 with range 1 to
      Var v;
      if (n.getString().equals("arguments")) {
        v = t.getScope().getArgumentsVar();
      } else {
        v = t.getScope().getVar(n.getString());
      }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000010000001
pattern: 110000001100000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001100000
pattern: 110000001010000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001010000
pattern: 110000001001000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001001000
pattern: 110000001000100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001000100
pattern: 110000001000010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001000010
pattern: 110000001000001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 8
insert before 63 with   private Var arguments;

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000001000001
pattern: 110000000110000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000110000
pattern: 110000000101000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000101000
pattern: 110000000100100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000100100
pattern: 110000000100010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000100010
pattern: 110000000100001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 9
insert before 290 with   public static class Arguments extends Var {
    Arguments(Scope scope) {
      super(
        false, // no inferred
        "arguments", // always arguments
        null,  // no declaration node

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000100001
pattern: 110000000011000
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 11
insert before 292 with     @Override public boolean equals(Object other) {
      if (!(other instanceof Arguments)) {
        return false;
      }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000011000
pattern: 110000000010100
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 12
insert before 293 with       Arguments otherVar = (Arguments) other;
      return otherVar.scope.getRootNode() == scope.getRootNode();
    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000010100
pattern: 110000000010010
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 13
insert before 294 with     @Override public int hashCode() {
      return System.identityHashCode(this);
    }
  }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 110000000010010
pattern: 110000000010001
try to fix hunk: 0
insert before 199 with       boolean maybeModifiedArguments =
          maybeEscapedOrModifiedArguments(t.getScope(), referenceMap);

try to fix hunk: 1
replace from 220 with range 1 to
          inlineNonConstants(v, referenceInfo, maybeModifiedArguments);

try to fix hunk: 10
insert before 291 with         null,  // no type info
        scope,
        -1,    // no variable index
        null,  // input,
        false, // not a define
        null   // no jsdoc
        );
    }

try to fix hunk: 14
insert before 459 with   public Var getArgumentsVar() {
    if (arguments == null) {
      arguments = new Arguments(this);
    }
    return arguments;
  }

patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

