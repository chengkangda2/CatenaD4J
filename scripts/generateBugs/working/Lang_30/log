---
Begin generate bug_id: Lang_30
num_of_hunks: 20
NOTICE: may not contains full fix patterns for hunks are too much (20 hunks)
timeout for running: 3600
use working dir: ./working/data/Lang_30
Try to checkout Lang_30
build dir: ['./working/data/Lang_30/target/classes', './working/data/Lang_30/target/test-classes']
init FileManager
trace file: src/main/java/org/apache/commons/lang3/StringUtils.java
trying to replace old failing tests
edit: replace from 318 range 12 at src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
to
    public void testContainsNone_CharArrayWithSupplementaryChars$catena_0() {
        assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000.toCharArray()));         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000.toCharArray()));                 }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithSupplementaryChars$catena_1() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001.toCharArray()));         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000.toCharArray()));                 }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithSupplementaryChars$catena_2() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000.toCharArray()));                      /***** ORIGINAL ASSERTION IS HERE *****/
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithSupplementaryChars$catena_3() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000.toCharArray()));                 }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        assertEquals(-1, CharU20000.indexOf(CharU20001));                                                         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithSupplementaryChars$catena_4() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000.toCharArray()));                 }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                                /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithSupplementaryChars$catena_5() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000.toCharArray()));                 }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                               /***** ORIGINAL ASSERTION IS HERE *****/
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithSupplementaryChars$catena_6() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000.toCharArray()));                 }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001.toCharArray()));                       /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithSupplementaryChars$catena_7() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000.toCharArray()));                 }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                          }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001.toCharArray()));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000.toCharArray()));                       /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 372 range 12 at src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
to
    public void testContainsNone_StringWithSupplementaryChars$catena_0() {
        assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000));                 /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001));            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000));                         }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001));                          }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000));                          }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_StringWithSupplementaryChars$catena_1() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000));            }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001));                 /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000));                         }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001));                          }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000));                          }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_StringWithSupplementaryChars$catena_2() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000));            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001));            }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000));                              /***** ORIGINAL ASSERTION IS HERE *****/
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001));                          }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000));                          }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_StringWithSupplementaryChars$catena_3() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000));            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001));            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000));                         }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        assertEquals(-1, CharU20000.indexOf(CharU20001));                                                   /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001));                          }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000));                          }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_StringWithSupplementaryChars$catena_4() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000));            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001));            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000));                         }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                          /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001));                          }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000));                          }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_StringWithSupplementaryChars$catena_5() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000));            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001));            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000));                         }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                         /***** ORIGINAL ASSERTION IS HERE *****/
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001));                          }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000));                          }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_StringWithSupplementaryChars$catena_6() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000));            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001));            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000));                         }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001));                               /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000));                          }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_StringWithSupplementaryChars$catena_7() {
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000));            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001));            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20000, CharU20000));                         }catch(Throwable __SHOULD_BE_IGNORED){}
        // Sanity check:
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001));                                              }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        // Test:
        try{ assertEquals(true, StringUtils.containsNone(CharU20000, CharU20001));                          }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(true, StringUtils.containsNone(CharU20001, CharU20000));                               /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 133 range 10 at src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
to
    public void testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_0() {
        // Test edge case: 1/2 of a (broken) supplementary char
        assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001.toCharArray()));                         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(false, StringUtils.containsAny("abc" + CharUSuppCharHigh + "xyz", CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001.toCharArray()));                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh.toCharArray()));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow.toCharArray()));                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_1() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001.toCharArray()));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(false, StringUtils.containsAny("abc" + CharUSuppCharHigh + "xyz", CharU20001.toCharArray()));         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001.toCharArray()));                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh.toCharArray()));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow.toCharArray()));                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_2() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001.toCharArray()));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny("abc" + CharUSuppCharHigh + "xyz", CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                                            /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001.toCharArray()));                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh.toCharArray()));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow.toCharArray()));                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001.toCharArray()));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny("abc" + CharUSuppCharHigh + "xyz", CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001.toCharArray()));                          /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh.toCharArray()));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow.toCharArray()));                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_4() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001.toCharArray()));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny("abc" + CharUSuppCharHigh + "xyz", CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001.toCharArray()));                     }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh.toCharArray()));                         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow.toCharArray()));                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_5() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001.toCharArray()));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny("abc" + CharUSuppCharHigh + "xyz", CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001.toCharArray()));                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh.toCharArray()));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                                             /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow.toCharArray()));                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_6() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001.toCharArray()));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny("abc" + CharUSuppCharHigh + "xyz", CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001.toCharArray()));                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh.toCharArray()));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow.toCharArray()));                           /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 615 range 6 at src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
to
    public void testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0() {
        assertEquals(2, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20000));                    /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(0, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20001));               }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, StringUtils.indexOfAnyBut(CharU20000, CharU20000));                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, StringUtils.indexOfAnyBut(CharU20000, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}        
    }     public void testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1() {
        try{ assertEquals(2, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20000));               }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(0, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20001));                    /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, StringUtils.indexOfAnyBut(CharU20000, CharU20000));                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, StringUtils.indexOfAnyBut(CharU20000, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}        
    }     public void testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_2() {
        try{ assertEquals(2, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20000));               }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20001));               }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, StringUtils.indexOfAnyBut(CharU20000, CharU20000));                                /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(0, StringUtils.indexOfAnyBut(CharU20000, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}        
    }     public void testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3() {
        try{ assertEquals(2, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20000));               }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20001));               }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, StringUtils.indexOfAnyBut(CharU20000, CharU20000));                           }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(0, StringUtils.indexOfAnyBut(CharU20000, CharU20001));                         /***** ORIGINAL ASSERTION IS HERE *****/        
    }
edit: replace from 182 range 9 at src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
to
    public void testContainsAny_StringWithBadSupplementaryChars$catena_0() {
        // Test edge case: 1/2 of a (broken) supplementary char
        assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001));                        /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow));                     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsAny_StringWithBadSupplementaryChars$catena_1() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                             /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow));                     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsAny_StringWithBadSupplementaryChars$catena_2() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001));                         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow));                     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsAny_StringWithBadSupplementaryChars$catena_3() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh));                        /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow));                     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsAny_StringWithBadSupplementaryChars$catena_4() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                              /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow));                     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsAny_StringWithBadSupplementaryChars$catena_5() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharHigh, CharU20001));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharUSuppCharLow, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsAny(CharU20001, CharUSuppCharHigh));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(true, StringUtils.containsAny(CharU20001, CharUSuppCharLow));                          /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 526 range 6 at src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
to
    public void testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_0() {
        assertEquals(0, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20000.toCharArray()));         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(2, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, StringUtils.indexOfAny(CharU20000, CharU20000.toCharArray()));                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, StringUtils.indexOfAny(CharU20000, CharU20001.toCharArray()));            }catch(Throwable __SHOULD_BE_IGNORED){}    
    }     public void testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1() {
        try{ assertEquals(0, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(2, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20001.toCharArray()));         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(0, StringUtils.indexOfAny(CharU20000, CharU20000.toCharArray()));                 }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, StringUtils.indexOfAny(CharU20000, CharU20001.toCharArray()));            }catch(Throwable __SHOULD_BE_IGNORED){}    
    }     public void testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_2() {
        try{ assertEquals(0, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(2, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(0, StringUtils.indexOfAny(CharU20000, CharU20000.toCharArray()));                      /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, StringUtils.indexOfAny(CharU20000, CharU20001.toCharArray()));            }catch(Throwable __SHOULD_BE_IGNORED){}    
    }     public void testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3() {
        try{ assertEquals(0, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(2, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, StringUtils.indexOfAny(CharU20000, CharU20000.toCharArray()));                 }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, StringUtils.indexOfAny(CharU20000, CharU20001.toCharArray()));                 /***** ORIGINAL ASSERTION IS HERE *****/    
    }
edit: replace from 592 range 6 at src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
to
    public void testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0() {
        assertEquals(2, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20000.toCharArray()));         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(0, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, StringUtils.indexOfAnyBut(CharU20000, CharU20000.toCharArray()));                }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, StringUtils.indexOfAnyBut(CharU20000, CharU20001.toCharArray()));         }catch(Throwable __SHOULD_BE_IGNORED){}        
    }     public void testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1() {
        try{ assertEquals(2, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(0, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20001.toCharArray()));         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, StringUtils.indexOfAnyBut(CharU20000, CharU20000.toCharArray()));                }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, StringUtils.indexOfAnyBut(CharU20000, CharU20001.toCharArray()));         }catch(Throwable __SHOULD_BE_IGNORED){}        
    }     public void testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_2() {
        try{ assertEquals(2, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, StringUtils.indexOfAnyBut(CharU20000, CharU20000.toCharArray()));                     /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(0, StringUtils.indexOfAnyBut(CharU20000, CharU20001.toCharArray()));         }catch(Throwable __SHOULD_BE_IGNORED){}        
    }     public void testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3() {
        try{ assertEquals(2, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20000.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, StringUtils.indexOfAnyBut(CharU20000 + CharU20001, CharU20001.toCharArray()));    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, StringUtils.indexOfAnyBut(CharU20000, CharU20000.toCharArray()));                }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(0, StringUtils.indexOfAnyBut(CharU20000, CharU20001.toCharArray()));              /***** ORIGINAL ASSERTION IS HERE *****/        
    }
edit: replace from 358 range 10 at src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
to
    public void testContainsNone_StringWithBadSupplementaryChars$catena_0() {
        // Test edge case: 1/2 of a (broken) supplementary char
        assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001));                        /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow));           }catch(Throwable __SHOULD_BE_IGNORED){}        
    }     public void testContainsNone_StringWithBadSupplementaryChars$catena_1() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                             /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow));           }catch(Throwable __SHOULD_BE_IGNORED){}        
    }     public void testContainsNone_StringWithBadSupplementaryChars$catena_2() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001));                         /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow));           }catch(Throwable __SHOULD_BE_IGNORED){}        
    }     public void testContainsNone_StringWithBadSupplementaryChars$catena_3() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                            /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow));           }catch(Throwable __SHOULD_BE_IGNORED){}        
    }     public void testContainsNone_StringWithBadSupplementaryChars$catena_4() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh));                        /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow));           }catch(Throwable __SHOULD_BE_IGNORED){}        
    }     public void testContainsNone_StringWithBadSupplementaryChars$catena_5() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                              /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow));           }catch(Throwable __SHOULD_BE_IGNORED){}        
    }     public void testContainsNone_StringWithBadSupplementaryChars$catena_6() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001));                    }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh));                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow));                /***** ORIGINAL ASSERTION IS HERE *****/        
    }
edit: replace from 569 range 6 at src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
to
    public void testIndexOfAny_StringStringWithSupplementaryChars$catena_0() {
        assertEquals(0, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20000));                       /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(2, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20001));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, StringUtils.indexOfAny(CharU20000, CharU20000));                               }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, StringUtils.indexOfAny(CharU20000, CharU20001));                          }catch(Throwable __SHOULD_BE_IGNORED){}    
    }     public void testIndexOfAny_StringStringWithSupplementaryChars$catena_1() {
        try{ assertEquals(0, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20000));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(2, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20001));                       /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(0, StringUtils.indexOfAny(CharU20000, CharU20000));                               }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, StringUtils.indexOfAny(CharU20000, CharU20001));                          }catch(Throwable __SHOULD_BE_IGNORED){}    
    }     public void testIndexOfAny_StringStringWithSupplementaryChars$catena_2() {
        try{ assertEquals(0, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20000));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(2, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20001));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(0, StringUtils.indexOfAny(CharU20000, CharU20000));                                    /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, StringUtils.indexOfAny(CharU20000, CharU20001));                          }catch(Throwable __SHOULD_BE_IGNORED){}    
    }     public void testIndexOfAny_StringStringWithSupplementaryChars$catena_3() {
        try{ assertEquals(0, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20000));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(2, StringUtils.indexOfAny(CharU20000 + CharU20001, CharU20001));                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, StringUtils.indexOfAny(CharU20000, CharU20000));                               }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, StringUtils.indexOfAny(CharU20000, CharU20001));                               /***** ORIGINAL ASSERTION IS HERE *****/    
    }
edit: replace from 304 range 10 at src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
to
    public void testContainsNone_CharArrayWithBadSupplementaryChars$catena_0() {
        // Test edge case: 1/2 of a (broken) supplementary char
        assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001.toCharArray()));          /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001.toCharArray()));      }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithBadSupplementaryChars$catena_1() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                             /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001.toCharArray()));      }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithBadSupplementaryChars$catena_2() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001.toCharArray()));           /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithBadSupplementaryChars$catena_3() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001.toCharArray()));      }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                            /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithBadSupplementaryChars$catena_4() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001.toCharArray()));      }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh.toCharArray()));          /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithBadSupplementaryChars$catena_5() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001.toCharArray()));      }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                              /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testContainsNone_CharArrayWithBadSupplementaryChars$catena_6() {
        // Test edge case: 1/2 of a (broken) supplementary char
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001.toCharArray()));      }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh.toCharArray()));     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow.toCharArray()));          /***** ORIGINAL ASSERTION IS HERE *****/
    }
trace file: src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java
new test num: 59
ori test num: 0
pattern: 00000000000000000000
patches are written to file
running tests...
used time: Finished in 36.28 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
processed: 00000000000000000000
pattern: 10000000000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 18.35 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
No new failing tests but only 1 hunk
processed: 10000000000000000000
pattern: 01000000000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 20.49 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
No new failing tests but only 1 hunk
processed: 01000000000000000000
pattern: 00100000000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000000
pattern: 00010000000000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

patches are written to file
running tests...
used time: Finished in 19.18 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000000000000000
pattern: 00001000000000000000
try to fix hunk: 4
insert before 1383 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000000
pattern: 00000100000000000000
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000000
pattern: 00000010000000000000
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000000
pattern: 00000001000000000000
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000000
pattern: 00000000100000000000
try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
used time: Finished in 17.64 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00000000100000000000
pattern: 00000000010000000000
try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 17.91 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
No new failing tests but only 1 hunk
processed: 00000000010000000000
pattern: 00000000001000000000
try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 20.56 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
No new failing tests but only 1 hunk
processed: 00000000001000000000
pattern: 00000000000100000000
try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000000
pattern: 00000000000010000000
try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000000
pattern: 00000000000001000000
try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000000
pattern: 00000000000000100000
try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100000
pattern: 00000000000000010000
try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 17.91 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
No new failing tests but only 1 hunk
processed: 00000000000000010000
pattern: 00000000000000001000
try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 20.20 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
No new failing tests but only 1 hunk
processed: 00000000000000001000
pattern: 00000000000000000100
try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000100
pattern: 00000000000000000010
try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000010
pattern: 00000000000000000001
try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000001
pattern: 11000000000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 19.10 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 11000000000000000000
pattern: 10100000000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000000
pattern: 10010000000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

patches are written to file
running tests...
used time: Finished in 19.05 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 10010000000000000000
pattern: 10001000000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000000
pattern: 10000100000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000000
pattern: 10000010000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000000
pattern: 10000001000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000000
pattern: 10000000100000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
used time: Finished in 20.91 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 10000000100000000000
pattern: 10000000010000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 19.71 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 10000000010000000000
pattern: 10000000001000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 19.61 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 10000000001000000000
pattern: 10000000000100000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000000
pattern: 10000000000010000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000000
pattern: 10000000000001000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000000
pattern: 10000000000000100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100000
pattern: 10000000000000010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 21.11 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 10000000000000010000
pattern: 10000000000000001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 17.82 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 10000000000000001000
pattern: 10000000000000000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000100
pattern: 10000000000000000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000010
pattern: 10000000000000000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000001
pattern: 01100000000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000000
pattern: 01010000000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

patches are written to file
running tests...
used time: Finished in 18.97 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 01010000000000000000
pattern: 01001000000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000000
pattern: 01000100000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000000
pattern: 01000010000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000000
pattern: 01000001000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000000000
pattern: 01000000100000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
used time: Finished in 18.98 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 01000000100000000000
pattern: 01000000010000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 16.18 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 01000000010000000000
pattern: 01000000001000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 19.18 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 01000000001000000000
pattern: 01000000000100000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000100000000
pattern: 01000000000010000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000010000000
pattern: 01000000000001000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000001000000
pattern: 01000000000000100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000100000
pattern: 01000000000000010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 19.21 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 01000000000000010000
pattern: 01000000000000001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 16.84 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 01000000000000001000
pattern: 01000000000000000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000100
pattern: 01000000000000000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000010
pattern: 01000000000000000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000001
pattern: 00110000000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000000000000000
pattern: 00101000000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000000000000000
pattern: 00100100000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100000000000000
pattern: 00100010000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010000000000000
pattern: 00100001000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001000000000000
pattern: 00100000100000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000100000000000
pattern: 00100000010000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000010000000000
pattern: 00100000001000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000001000000000
pattern: 00100000000100000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000100000000
pattern: 00100000000010000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000010000000
pattern: 00100000000001000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000001000000
pattern: 00100000000000100000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000100000
pattern: 00100000000000010000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000010000
pattern: 00100000000000001000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000001000
pattern: 00100000000000000100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000100
pattern: 00100000000000000010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000010
pattern: 00100000000000000001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000001
pattern: 00011000000000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000000000000000
pattern: 00010100000000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100000000000000
pattern: 00010010000000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010000000000000
pattern: 00010001000000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001000000000000
pattern: 00010000100000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
used time: Finished in 20.26 seconds
Failing tests: 25
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000100000000000
pattern: 00010000010000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 15.98 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000010000000000
pattern: 00010000001000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 17.50 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000001000000000
pattern: 00010000000100000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000100000000
pattern: 00010000000010000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000010000000
pattern: 00010000000001000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000001000000
pattern: 00010000000000100000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000100000
pattern: 00010000000000010000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 14.68 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000000000010000
pattern: 00010000000000001000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 20.67 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000000000001000
pattern: 00010000000000000100
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000100
pattern: 00010000000000000010
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000010
pattern: 00010000000000000001
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000000000000001
pattern: 00001100000000000000
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001100000000000000
pattern: 00001010000000000000
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001010000000000000
pattern: 00001001000000000000
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001001000000000000
pattern: 00001000100000000000
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000100000000000
pattern: 00001000010000000000
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000010000000000
pattern: 00001000001000000000
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000001000000000
pattern: 00001000000100000000
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000100000000
pattern: 00001000000010000000
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000010000000
pattern: 00001000000001000000
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000001000000
pattern: 00001000000000100000
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000100000
pattern: 00001000000000010000
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000010000
pattern: 00001000000000001000
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000001000
pattern: 00001000000000000100
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000100
pattern: 00001000000000000010
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000010
pattern: 00001000000000000001
try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00001000000000000001
pattern: 00000110000000000000
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000110000000000000
pattern: 00000101000000000000
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000101000000000000
pattern: 00000100100000000000
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
used time: Finished in 22.08 seconds
Failing tests: 31
	org.apache.commons.lang3.StringEscapeUtilsTest::testUnescapeCsvString
	org.apache.commons.lang3.StringEscapeUtilsTest::testUnescapeCsvWriter
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_4
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00000100100000000000
pattern: 00000100010000000000
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100010000000000
pattern: 00000100001000000000
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100001000000000
pattern: 00000100000100000000
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000100000000
pattern: 00000100000010000000
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000010000000
pattern: 00000100000001000000
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000001000000
pattern: 00000100000000100000
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000100000
pattern: 00000100000000010000
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000010000
pattern: 00000100000000001000
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000001000
pattern: 00000100000000000100
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000100
pattern: 00000100000000000010
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000010
pattern: 00000100000000000001
try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000100000000000001
pattern: 00000011000000000000
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
used time: Finished in 20.91 seconds
Failing tests: 16
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix ['org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2', 'org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3']
select new bug
Pattern: 00000011000000000000
new failing tests:
org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
Save found bug
processed: 00000011000000000000
pattern: 00000010100000000000
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010100000000000
pattern: 00000010010000000000
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010010000000000
pattern: 00000010001000000000
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010001000000000
pattern: 00000010000100000000
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000100000000
pattern: 00000010000010000000
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000010000000
pattern: 00000010000001000000
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000001000000
pattern: 00000010000000100000
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000100000
pattern: 00000010000000010000
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000010000
pattern: 00000010000000001000
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000001000
pattern: 00000010000000000100
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000100
pattern: 00000010000000000010
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000010
pattern: 00000010000000000001
try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000010000000000001
pattern: 00000001100000000000
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001100000000000
pattern: 00000001010000000000
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001010000000000
pattern: 00000001001000000000
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001001000000000
pattern: 00000001000100000000
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000100000000
pattern: 00000001000010000000
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000010000000
pattern: 00000001000001000000
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000001000000
pattern: 00000001000000100000
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000100000
pattern: 00000001000000010000
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000010000
pattern: 00000001000000001000
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000001000
pattern: 00000001000000000100
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000100
pattern: 00000001000000000010
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000010
pattern: 00000001000000000001
try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000001000000000001
pattern: 00000000110000000000
try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 18.91 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00000000110000000000
pattern: 00000000101000000000
try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 19.04 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00000000101000000000
pattern: 00000000100100000000
try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100100000000
pattern: 00000000100010000000
try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100010000000
pattern: 00000000100001000000
try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100001000000
pattern: 00000000100000100000
try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000100000
pattern: 00000000100000010000
try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 18.78 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00000000100000010000
pattern: 00000000100000001000
try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 21.20 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00000000100000001000
pattern: 00000000100000000100
try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000100
pattern: 00000000100000000010
try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000010
pattern: 00000000100000000001
try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000100000000001
pattern: 00000000011000000000
try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 19.64 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 00000000011000000000
pattern: 00000000010100000000
try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010100000000
pattern: 00000000010010000000
try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010010000000
pattern: 00000000010001000000
try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010001000000
pattern: 00000000010000100000
try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000100000
pattern: 00000000010000010000
try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 20.83 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 00000000010000010000
pattern: 00000000010000001000
try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 19.38 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 00000000010000001000
pattern: 00000000010000000100
try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000100
pattern: 00000000010000000010
try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000010
pattern: 00000000010000000001
try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000010000000001
pattern: 00000000001100000000
try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001100000000
pattern: 00000000001010000000
try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001010000000
pattern: 00000000001001000000
try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001001000000
pattern: 00000000001000100000
try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000100000
pattern: 00000000001000010000
try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 20.63 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 00000000001000010000
pattern: 00000000001000001000
try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 19.95 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 00000000001000001000
pattern: 00000000001000000100
try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000100
pattern: 00000000001000000010
try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000010
pattern: 00000000001000000001
try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000001000000001
pattern: 00000000000110000000
try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000110000000
pattern: 00000000000101000000
try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000101000000
pattern: 00000000000100100000
try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100100000
pattern: 00000000000100010000
try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100010000
pattern: 00000000000100001000
try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100001000
pattern: 00000000000100000100
try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000100
pattern: 00000000000100000010
try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000010
pattern: 00000000000100000001
try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000100000001
pattern: 00000000000011000000
try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000011000000
pattern: 00000000000010100000
try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010100000
pattern: 00000000000010010000
try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010010000
pattern: 00000000000010001000
try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010001000
pattern: 00000000000010000100
try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000100
pattern: 00000000000010000010
try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000010
pattern: 00000000000010000001
try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000010000001
pattern: 00000000000001100000
try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
used time: Finished in 20.29 seconds
Failing tests: 15
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix ['org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3', 'org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0', 'org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1']
select new bug
Pattern: 00000000000001100000
new failing tests:
org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
Save found bug
processed: 00000000000001100000
pattern: 00000000000001010000
try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001010000
pattern: 00000000000001001000
try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001001000
pattern: 00000000000001000100
try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000100
pattern: 00000000000001000010
try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000010
pattern: 00000000000001000001
try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000001000001
pattern: 00000000000000110000
try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000110000
pattern: 00000000000000101000
try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000101000
pattern: 00000000000000100100
try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100100
pattern: 00000000000000100010
try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100010
pattern: 00000000000000100001
try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000100001
pattern: 00000000000000011000
try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 21.19 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 00000000000000011000
pattern: 00000000000000010100
try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010100
pattern: 00000000000000010010
try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010010
pattern: 00000000000000010001
try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000010001
pattern: 00000000000000001100
try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001100
pattern: 00000000000000001010
try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001010
pattern: 00000000000000001001
try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000001001
pattern: 00000000000000000110
try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000110
pattern: 00000000000000000101
try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000101
pattern: 00000000000000000011
try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00000000000000000011
pattern: 11100000000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11100000000000000000
pattern: 11010000000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

patches are written to file
running tests...
used time: Finished in 20.35 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 11010000000000000000
pattern: 11001000000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11001000000000000000
pattern: 11000100000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000100000000000000
pattern: 11000010000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000010000000000000
pattern: 11000001000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000001000000000000
pattern: 11000000100000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
used time: Finished in 19.81 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 11000000100000000000
pattern: 11000000010000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 19.63 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 11000000010000000000
pattern: 11000000001000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 21.41 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 11000000001000000000
pattern: 11000000000100000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000100000000
pattern: 11000000000010000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000010000000
pattern: 11000000000001000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000001000000
pattern: 11000000000000100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000100000
pattern: 11000000000000010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 19.07 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 11000000000000010000
pattern: 11000000000000001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 19.22 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 11000000000000001000
pattern: 11000000000000000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000100
pattern: 11000000000000000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000010
pattern: 11000000000000000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 11000000000000000001
pattern: 10110000000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10110000000000000000
pattern: 10101000000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10101000000000000000
pattern: 10100100000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100100000000000000
pattern: 10100010000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100010000000000000
pattern: 10100001000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100001000000000000
pattern: 10100000100000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000100000000000
pattern: 10100000010000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000010000000000
pattern: 10100000001000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000001000000000
pattern: 10100000000100000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000100000000
pattern: 10100000000010000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000010000000
pattern: 10100000000001000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000001000000
pattern: 10100000000000100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000100000
pattern: 10100000000000010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000010000
pattern: 10100000000000001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000001000
pattern: 10100000000000000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000100
pattern: 10100000000000000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000010
pattern: 10100000000000000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10100000000000000001
pattern: 10011000000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10011000000000000000
pattern: 10010100000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010100000000000000
pattern: 10010010000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010010000000000000
pattern: 10010001000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010001000000000000
pattern: 10010000100000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
used time: Finished in 22.04 seconds
Failing tests: 25
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 10010000100000000000
pattern: 10010000010000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 20.58 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 10010000010000000000
pattern: 10010000001000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 19.02 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 10010000001000000000
pattern: 10010000000100000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000100000000
pattern: 10010000000010000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000010000000
pattern: 10010000000001000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000001000000
pattern: 10010000000000100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000100000
pattern: 10010000000000010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 20.80 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 10010000000000010000
pattern: 10010000000000001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 18.79 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 10010000000000001000
pattern: 10010000000000000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000100
pattern: 10010000000000000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000010
pattern: 10010000000000000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10010000000000000001
pattern: 10001100000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001100000000000000
pattern: 10001010000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001010000000000000
pattern: 10001001000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001001000000000000
pattern: 10001000100000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000100000000000
pattern: 10001000010000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000010000000000
pattern: 10001000001000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000001000000000
pattern: 10001000000100000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000100000000
pattern: 10001000000010000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000010000000
pattern: 10001000000001000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000001000000
pattern: 10001000000000100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000100000
pattern: 10001000000000010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000010000
pattern: 10001000000000001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000001000
pattern: 10001000000000000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000100
pattern: 10001000000000000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000010
pattern: 10001000000000000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10001000000000000001
pattern: 10000110000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000110000000000000
pattern: 10000101000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000101000000000000
pattern: 10000100100000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
used time: Finished in 21.37 seconds
Failing tests: 31
	org.apache.commons.lang3.StringEscapeUtilsTest::testUnescapeCsvString
	org.apache.commons.lang3.StringEscapeUtilsTest::testUnescapeCsvWriter
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_4
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 10000100100000000000
pattern: 10000100010000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100010000000000
pattern: 10000100001000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100001000000000
pattern: 10000100000100000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000100000000
pattern: 10000100000010000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000010000000
pattern: 10000100000001000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000001000000
pattern: 10000100000000100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000100000
pattern: 10000100000000010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000010000
pattern: 10000100000000001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000001000
pattern: 10000100000000000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000100
pattern: 10000100000000000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000010
pattern: 10000100000000000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000100000000000001
pattern: 10000011000000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
used time: Finished in 19.28 seconds
Failing tests: 16
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 10000011000000000000
pattern: 10000010100000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010100000000000
pattern: 10000010010000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010010000000000
pattern: 10000010001000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010001000000000
pattern: 10000010000100000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000100000000
pattern: 10000010000010000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000010000000
pattern: 10000010000001000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000001000000
pattern: 10000010000000100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000100000
pattern: 10000010000000010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000010000
pattern: 10000010000000001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000001000
pattern: 10000010000000000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000100
pattern: 10000010000000000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000010
pattern: 10000010000000000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000010000000000001
pattern: 10000001100000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001100000000000
pattern: 10000001010000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001010000000000
pattern: 10000001001000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001001000000000
pattern: 10000001000100000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000100000000
pattern: 10000001000010000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000010000000
pattern: 10000001000001000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000001000000
pattern: 10000001000000100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000100000
pattern: 10000001000000010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000010000
pattern: 10000001000000001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000001000
pattern: 10000001000000000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000100
pattern: 10000001000000000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000010
pattern: 10000001000000000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000001000000000001
pattern: 10000000110000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 19.74 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 10000000110000000000
pattern: 10000000101000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 21.36 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 10000000101000000000
pattern: 10000000100100000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100100000000
pattern: 10000000100010000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100010000000
pattern: 10000000100001000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100001000000
pattern: 10000000100000100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000100000
pattern: 10000000100000010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 21.76 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 10000000100000010000
pattern: 10000000100000001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 22.00 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 10000000100000001000
pattern: 10000000100000000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000100
pattern: 10000000100000000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000010
pattern: 10000000100000000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000100000000001
pattern: 10000000011000000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 22.18 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 10000000011000000000
pattern: 10000000010100000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010100000000
pattern: 10000000010010000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010010000000
pattern: 10000000010001000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010001000000
pattern: 10000000010000100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000100000
pattern: 10000000010000010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 21.20 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 10000000010000010000
pattern: 10000000010000001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 20.68 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 10000000010000001000
pattern: 10000000010000000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000100
pattern: 10000000010000000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000010
pattern: 10000000010000000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000010000000001
pattern: 10000000001100000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001100000000
pattern: 10000000001010000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001010000000
pattern: 10000000001001000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001001000000
pattern: 10000000001000100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000100000
pattern: 10000000001000010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 22.02 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 10000000001000010000
pattern: 10000000001000001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 21.75 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 10000000001000001000
pattern: 10000000001000000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000100
pattern: 10000000001000000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000010
pattern: 10000000001000000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000001000000001
pattern: 10000000000110000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000110000000
pattern: 10000000000101000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000101000000
pattern: 10000000000100100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100100000
pattern: 10000000000100010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100010000
pattern: 10000000000100001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100001000
pattern: 10000000000100000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000100
pattern: 10000000000100000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000010
pattern: 10000000000100000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000100000001
pattern: 10000000000011000000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000011000000
pattern: 10000000000010100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010100000
pattern: 10000000000010010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010010000
pattern: 10000000000010001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010001000
pattern: 10000000000010000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000100
pattern: 10000000000010000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000010
pattern: 10000000000010000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000010000001
pattern: 10000000000001100000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
used time: Finished in 23.82 seconds
Failing tests: 15
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 10000000000001100000
pattern: 10000000000001010000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001010000
pattern: 10000000000001001000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001001000
pattern: 10000000000001000100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000100
pattern: 10000000000001000010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000010
pattern: 10000000000001000001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000001000001
pattern: 10000000000000110000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000110000
pattern: 10000000000000101000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000101000
pattern: 10000000000000100100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100100
pattern: 10000000000000100010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100010
pattern: 10000000000000100001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000100001
pattern: 10000000000000011000
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 22.93 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 10000000000000011000
pattern: 10000000000000010100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010100
pattern: 10000000000000010010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010010
pattern: 10000000000000010001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000010001
pattern: 10000000000000001100
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001100
pattern: 10000000000000001010
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001010
pattern: 10000000000000001001
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000001001
pattern: 10000000000000000110
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000110
pattern: 10000000000000000101
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000101
pattern: 10000000000000000011
try to fix hunk: 0
insert before 1376 with         int csLast = csLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 10000000000000000011
pattern: 01110000000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01110000000000000000
pattern: 01101000000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01101000000000000000
pattern: 01100100000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100100000000000000
pattern: 01100010000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100010000000000000
pattern: 01100001000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100001000000000000
pattern: 01100000100000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000100000000000
pattern: 01100000010000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000010000000000
pattern: 01100000001000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000001000000000
pattern: 01100000000100000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000100000000
pattern: 01100000000010000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000010000000
pattern: 01100000000001000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000001000000
pattern: 01100000000000100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000100000
pattern: 01100000000000010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000010000
pattern: 01100000000000001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000001000
pattern: 01100000000000000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000100
pattern: 01100000000000000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000010
pattern: 01100000000000000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01100000000000000001
pattern: 01011000000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01011000000000000000
pattern: 01010100000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010100000000000000
pattern: 01010010000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010010000000000000
pattern: 01010001000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010001000000000000
pattern: 01010000100000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
used time: Finished in 23.74 seconds
Failing tests: 25
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 01010000100000000000
pattern: 01010000010000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 24.67 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 01010000010000000000
pattern: 01010000001000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 20.92 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 01010000001000000000
pattern: 01010000000100000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000100000000
pattern: 01010000000010000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000010000000
pattern: 01010000000001000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000001000000
pattern: 01010000000000100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000100000
pattern: 01010000000000010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 20.30 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 01010000000000010000
pattern: 01010000000000001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 20.52 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 01010000000000001000
pattern: 01010000000000000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000100
pattern: 01010000000000000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000010
pattern: 01010000000000000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01010000000000000001
pattern: 01001100000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001100000000000000
pattern: 01001010000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001010000000000000
pattern: 01001001000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001001000000000000
pattern: 01001000100000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000100000000000
pattern: 01001000010000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000010000000000
pattern: 01001000001000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000001000000000
pattern: 01001000000100000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000100000000
pattern: 01001000000010000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000010000000
pattern: 01001000000001000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000001000000
pattern: 01001000000000100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000100000
pattern: 01001000000000010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000010000
pattern: 01001000000000001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000001000
pattern: 01001000000000000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000100
pattern: 01001000000000000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000010
pattern: 01001000000000000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01001000000000000001
pattern: 01000110000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000110000000000000
pattern: 01000101000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000101000000000000
pattern: 01000100100000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
used time: Finished in 21.09 seconds
Failing tests: 31
	org.apache.commons.lang3.StringEscapeUtilsTest::testUnescapeCsvString
	org.apache.commons.lang3.StringEscapeUtilsTest::testUnescapeCsvWriter
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_4
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 01000100100000000000
pattern: 01000100010000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100010000000000
pattern: 01000100001000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100001000000000
pattern: 01000100000100000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000100000000
pattern: 01000100000010000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000010000000
pattern: 01000100000001000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000001000000
pattern: 01000100000000100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000100000
pattern: 01000100000000010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000010000
pattern: 01000100000000001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000001000
pattern: 01000100000000000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000100
pattern: 01000100000000000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000010
pattern: 01000100000000000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000100000000000001
pattern: 01000011000000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
used time: Finished in 21.57 seconds
Failing tests: 16
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 01000011000000000000
pattern: 01000010100000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010100000000000
pattern: 01000010010000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010010000000000
pattern: 01000010001000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010001000000000
pattern: 01000010000100000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000100000000
pattern: 01000010000010000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000010000000
pattern: 01000010000001000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000001000000
pattern: 01000010000000100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000100000
pattern: 01000010000000010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000010000
pattern: 01000010000000001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000001000
pattern: 01000010000000000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000100
pattern: 01000010000000000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000010
pattern: 01000010000000000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000010000000000001
pattern: 01000001100000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001100000000000
pattern: 01000001010000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001010000000000
pattern: 01000001001000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001001000000000
pattern: 01000001000100000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000100000000
pattern: 01000001000010000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000010000000
pattern: 01000001000001000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000001000000
pattern: 01000001000000100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000100000
pattern: 01000001000000010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000010000
pattern: 01000001000000001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000001000
pattern: 01000001000000000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000000100
pattern: 01000001000000000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000000010
pattern: 01000001000000000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000001000000000001
pattern: 01000000110000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 21.17 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 01000000110000000000
pattern: 01000000101000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 20.16 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 01000000101000000000
pattern: 01000000100100000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000100100000000
pattern: 01000000100010000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000100010000000
pattern: 01000000100001000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000100001000000
pattern: 01000000100000100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000100000100000
pattern: 01000000100000010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 21.42 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 01000000100000010000
pattern: 01000000100000001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 24.65 seconds
Failing tests: 23
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 01000000100000001000
pattern: 01000000100000000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000100000000100
pattern: 01000000100000000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000100000000010
pattern: 01000000100000000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000100000000001
pattern: 01000000011000000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 21.93 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 01000000011000000000
pattern: 01000000010100000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000010100000000
pattern: 01000000010010000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000010010000000
pattern: 01000000010001000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000010001000000
pattern: 01000000010000100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000010000100000
pattern: 01000000010000010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 24.53 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 01000000010000010000
pattern: 01000000010000001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 22.84 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 01000000010000001000
pattern: 01000000010000000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000010000000100
pattern: 01000000010000000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000010000000010
pattern: 01000000010000000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000010000000001
pattern: 01000000001100000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000001100000000
pattern: 01000000001010000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000001010000000
pattern: 01000000001001000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000001001000000
pattern: 01000000001000100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000001000100000
pattern: 01000000001000010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 20.02 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 01000000001000010000
pattern: 01000000001000001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 20.85 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 01000000001000001000
pattern: 01000000001000000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000001000000100
pattern: 01000000001000000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000001000000010
pattern: 01000000001000000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000001000000001
pattern: 01000000000110000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000110000000
pattern: 01000000000101000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000101000000
pattern: 01000000000100100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000100100000
pattern: 01000000000100010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000100010000
pattern: 01000000000100001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000100001000
pattern: 01000000000100000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000100000100
pattern: 01000000000100000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000100000010
pattern: 01000000000100000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000100000001
pattern: 01000000000011000000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000011000000
pattern: 01000000000010100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000010100000
pattern: 01000000000010010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000010010000
pattern: 01000000000010001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000010001000
pattern: 01000000000010000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000010000100
pattern: 01000000000010000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000010000010
pattern: 01000000000010000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000010000001
pattern: 01000000000001100000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
used time: Finished in 21.20 seconds
Failing tests: 15
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 01000000000001100000
pattern: 01000000000001010000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000001010000
pattern: 01000000000001001000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000001001000
pattern: 01000000000001000100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000001000100
pattern: 01000000000001000010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000001000010
pattern: 01000000000001000001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000001000001
pattern: 01000000000000110000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000110000
pattern: 01000000000000101000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000101000
pattern: 01000000000000100100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000100100
pattern: 01000000000000100010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000100010
pattern: 01000000000000100001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000100001
pattern: 01000000000000011000
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 25.00 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Can independently fix []
Could not fix independently
processed: 01000000000000011000
pattern: 01000000000000010100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000010100
pattern: 01000000000000010010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000010010
pattern: 01000000000000010001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000010001
pattern: 01000000000000001100
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000001100
pattern: 01000000000000001010
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000001010
pattern: 01000000000000001001
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000001001
pattern: 01000000000000000110
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000110
pattern: 01000000000000000101
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000101
pattern: 01000000000000000011
try to fix hunk: 1
insert before 1377 with         int searchLast = searchLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 01000000000000000011
pattern: 00111000000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00111000000000000000
pattern: 00110100000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110100000000000000
pattern: 00110010000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110010000000000000
pattern: 00110001000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110001000000000000
pattern: 00110000100000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000100000000000
pattern: 00110000010000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000010000000000
pattern: 00110000001000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000001000000000
pattern: 00110000000100000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000000100000000
pattern: 00110000000010000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000000010000000
pattern: 00110000000001000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000000001000000
pattern: 00110000000000100000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000000000100000
pattern: 00110000000000010000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000000000010000
pattern: 00110000000000001000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000000000001000
pattern: 00110000000000000100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000000000000100
pattern: 00110000000000000010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000000000000010
pattern: 00110000000000000001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00110000000000000001
pattern: 00101100000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101100000000000000
pattern: 00101010000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101010000000000000
pattern: 00101001000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101001000000000000
pattern: 00101000100000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000100000000000
pattern: 00101000010000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000010000000000
pattern: 00101000001000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000001000000000
pattern: 00101000000100000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000000100000000
pattern: 00101000000010000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000000010000000
pattern: 00101000000001000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000000001000000
pattern: 00101000000000100000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000000000100000
pattern: 00101000000000010000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000000000010000
pattern: 00101000000000001000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000000000001000
pattern: 00101000000000000100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000000000000100
pattern: 00101000000000000010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000000000000010
pattern: 00101000000000000001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00101000000000000001
pattern: 00100110000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100110000000000000
pattern: 00100101000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100101000000000000
pattern: 00100100100000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100100000000000
pattern: 00100100010000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100010000000000
pattern: 00100100001000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100001000000000
pattern: 00100100000100000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100000100000000
pattern: 00100100000010000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100000010000000
pattern: 00100100000001000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100000001000000
pattern: 00100100000000100000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100000000100000
pattern: 00100100000000010000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100000000010000
pattern: 00100100000000001000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100000000001000
pattern: 00100100000000000100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100000000000100
pattern: 00100100000000000010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100000000000010
pattern: 00100100000000000001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100100000000000001
pattern: 00100011000000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100011000000000000
pattern: 00100010100000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010100000000000
pattern: 00100010010000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010010000000000
pattern: 00100010001000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010001000000000
pattern: 00100010000100000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010000100000000
pattern: 00100010000010000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010000010000000
pattern: 00100010000001000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010000001000000
pattern: 00100010000000100000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010000000100000
pattern: 00100010000000010000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010000000010000
pattern: 00100010000000001000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010000000001000
pattern: 00100010000000000100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010000000000100
pattern: 00100010000000000010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010000000000010
pattern: 00100010000000000001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100010000000000001
pattern: 00100001100000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001100000000000
pattern: 00100001010000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001010000000000
pattern: 00100001001000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001001000000000
pattern: 00100001000100000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001000100000000
pattern: 00100001000010000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001000010000000
pattern: 00100001000001000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001000001000000
pattern: 00100001000000100000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001000000100000
pattern: 00100001000000010000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001000000010000
pattern: 00100001000000001000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001000000001000
pattern: 00100001000000000100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001000000000100
pattern: 00100001000000000010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001000000000010
pattern: 00100001000000000001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100001000000000001
pattern: 00100000110000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000110000000000
pattern: 00100000101000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000101000000000
pattern: 00100000100100000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000100100000000
pattern: 00100000100010000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000100010000000
pattern: 00100000100001000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000100001000000
pattern: 00100000100000100000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000100000100000
pattern: 00100000100000010000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000100000010000
pattern: 00100000100000001000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000100000001000
pattern: 00100000100000000100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000100000000100
pattern: 00100000100000000010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000100000000010
pattern: 00100000100000000001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000100000000001
pattern: 00100000011000000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000011000000000
pattern: 00100000010100000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000010100000000
pattern: 00100000010010000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000010010000000
pattern: 00100000010001000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000010001000000
pattern: 00100000010000100000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000010000100000
pattern: 00100000010000010000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000010000010000
pattern: 00100000010000001000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000010000001000
pattern: 00100000010000000100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000010000000100
pattern: 00100000010000000010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000010000000010
pattern: 00100000010000000001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000010000000001
pattern: 00100000001100000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000001100000000
pattern: 00100000001010000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000001010000000
pattern: 00100000001001000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000001001000000
pattern: 00100000001000100000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000001000100000
pattern: 00100000001000010000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000001000010000
pattern: 00100000001000001000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000001000001000
pattern: 00100000001000000100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000001000000100
pattern: 00100000001000000010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000001000000010
pattern: 00100000001000000001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000001000000001
pattern: 00100000000110000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000110000000
pattern: 00100000000101000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000101000000
pattern: 00100000000100100000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000100100000
pattern: 00100000000100010000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000100010000
pattern: 00100000000100001000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000100001000
pattern: 00100000000100000100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000100000100
pattern: 00100000000100000010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000100000010
pattern: 00100000000100000001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000100000001
pattern: 00100000000011000000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000011000000
pattern: 00100000000010100000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000010100000
pattern: 00100000000010010000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000010010000
pattern: 00100000000010001000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000010001000
pattern: 00100000000010000100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000010000100
pattern: 00100000000010000010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000010000010
pattern: 00100000000010000001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 12
insert before 1540 with                     }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000010000001
pattern: 00100000000001100000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000001100000
pattern: 00100000000001010000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000001010000
pattern: 00100000000001001000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000001001000
pattern: 00100000000001000100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000001000100
pattern: 00100000000001000010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000001000010
pattern: 00100000000001000001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000001000001
pattern: 00100000000000110000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000110000
pattern: 00100000000000101000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000101000
pattern: 00100000000000100100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000100100
pattern: 00100000000000100010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000100010
pattern: 00100000000000100001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000100001
pattern: 00100000000000011000
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000011000
pattern: 00100000000000010100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000010100
pattern: 00100000000000010010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000010010
pattern: 00100000000000010001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000010001
pattern: 00100000000000001100
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000001100
pattern: 00100000000000001010
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000001010
pattern: 00100000000000001001
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000001001
pattern: 00100000000000000110
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000110
pattern: 00100000000000000101
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000101
pattern: 00100000000000000011
try to fix hunk: 2
insert before 1381 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00100000000000000011
pattern: 00011100000000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011100000000000000
pattern: 00011010000000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011010000000000000
pattern: 00011001000000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011001000000000000
pattern: 00011000100000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000100000000000
pattern: 00011000010000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000010000000000
pattern: 00011000001000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000001000000000
pattern: 00011000000100000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000000100000000
pattern: 00011000000010000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000000010000000
pattern: 00011000000001000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000000001000000
pattern: 00011000000000100000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000000000100000
pattern: 00011000000000010000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000000000010000
pattern: 00011000000000001000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000000000001000
pattern: 00011000000000000100
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000000000000100
pattern: 00011000000000000010
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000000000000010
pattern: 00011000000000000001
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 4
insert before 1383 with                     }

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00011000000000000001
pattern: 00010110000000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010110000000000000
pattern: 00010101000000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010101000000000000
pattern: 00010100100000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
used time: Finished in 19.64 seconds
Failing tests: 33
	org.apache.commons.lang3.StringEscapeUtilsTest::testUnescapeCsvString
	org.apache.commons.lang3.StringEscapeUtilsTest::testUnescapeCsvWriter
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_4
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010100100000000000
pattern: 00010100010000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100010000000000
pattern: 00010100001000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100001000000000
pattern: 00010100000100000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100000100000000
pattern: 00010100000010000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100000010000000
pattern: 00010100000001000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100000001000000
pattern: 00010100000000100000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100000000100000
pattern: 00010100000000010000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100000000010000
pattern: 00010100000000001000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100000000001000
pattern: 00010100000000000100
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100000000000100
pattern: 00010100000000000010
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100000000000010
pattern: 00010100000000000001
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 5
replace from 1443 with range 1 to
    public static boolean containsAny(String cs, char[] searchChars) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010100000000000001
pattern: 00010011000000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

patches are written to file
running tests...
used time: Finished in 20.12 seconds
Failing tests: 18
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010011000000000000
pattern: 00010010100000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010100000000000
pattern: 00010010010000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010010000000000
pattern: 00010010001000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010001000000000
pattern: 00010010000100000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010000100000000
pattern: 00010010000010000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010000010000000
pattern: 00010010000001000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010000001000000
pattern: 00010010000000100000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010000000100000
pattern: 00010010000000010000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010000000010000
pattern: 00010010000000001000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010000000001000
pattern: 00010010000000000100
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010000000000100
pattern: 00010010000000000010
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010000000000010
pattern: 00010010000000000001
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 6
replace from 1455 with range 1 to
                    if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010010000000000001
pattern: 00010001100000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001100000000000
pattern: 00010001010000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001010000000000
pattern: 00010001001000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001001000000000
pattern: 00010001000100000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001000100000000
pattern: 00010001000010000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001000010000000
pattern: 00010001000001000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001000001000000
pattern: 00010001000000100000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001000000100000
pattern: 00010001000000010000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001000000010000
pattern: 00010001000000001000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001000000001000
pattern: 00010001000000000100
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001000000000100
pattern: 00010001000000000010
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001000000000010
pattern: 00010001000000000001
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 7
replace from 1457 with range 1 to
                            return true;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010001000000000001
pattern: 00010000110000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 21.23 seconds
Failing tests: 25
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000110000000000
pattern: 00010000101000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 21.25 seconds
Failing tests: 25
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000101000000000
pattern: 00010000100100000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000100100000000
pattern: 00010000100010000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000100010000000
pattern: 00010000100001000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000100001000000
pattern: 00010000100000100000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000100000100000
pattern: 00010000100000010000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 20.55 seconds
Failing tests: 25
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000100000010000
pattern: 00010000100000001000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 21.48 seconds
Failing tests: 25
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithSupplementaryChars
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_5
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000100000001000
pattern: 00010000100000000100
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000100000000100
pattern: 00010000100000000010
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000100000000010
pattern: 00010000100000000001
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 8
replace from 1497 with range 1 to
    public static boolean containsAny(String cs, String searchChars) {

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000100000000001
pattern: 00010000011000000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 21.45 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000011000000000
pattern: 00010000010100000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000010100000000
pattern: 00010000010010000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000010010000000
pattern: 00010000010001000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000010001000000
pattern: 00010000010000100000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000010000100000
pattern: 00010000010000010000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 15
insert before 1678 with         int csLast = csLen - 1;

patches are written to file
running tests...
used time: Finished in 21.46 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000010000010000
pattern: 00010000010000001000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 16
insert before 1679 with         int searchLast = searchLen - 1;

patches are written to file
running tests...
used time: Finished in 18.17 seconds
Failing tests: 20
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars$catena_7
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringString
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_0
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars$catena_2
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_1
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars$catena_3
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArray
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_6
	org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars$catena_7
Includes new failing tests, set to unusable
processed: 00010000010000001000
pattern: 00010000010000000100
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 17
insert before 1683 with                     if (Character.isHighSurrogate(ch)) {
                        if (j == searchLast) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000010000000100
pattern: 00010000010000000010
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 18
insert before 1684 with                             return false;
                        }
                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {
                            return false;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000010000000010
pattern: 00010000010000000001
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 9
insert before 1533 with         int csLast = csLen - 1;

try to fix hunk: 19
insert before 1686 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000010000000001
pattern: 00010000001100000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 11
insert before 1539 with                     if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            continue outer;
                        }
                    } else {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000001100000000
pattern: 00010000001010000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 12
insert before 1540 with                     }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000001010000000
pattern: 00010000001001000000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 13
replace from 1576 with range 1 to
            boolean chFound = searchChars.indexOf(ch) >= 0;
            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {
                char ch2 = str.charAt(i + 1);
                if (chFound && searchChars.indexOf(ch2) < 0) {

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
processed: 00010000001001000000
pattern: 00010000001000100000
try to fix hunk: 3
insert before 1382 with                         if (searchChars[j + 1] == cs.charAt(i + 1)) {
                            return i;
                        }
                    } else {

try to fix hunk: 10
insert before 1534 with         int searchLast = searchLen - 1;

try to fix hunk: 14
insert before 1578 with                 }
            } else {
                if (!chFound) {
                    return i;
                }

patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

