---
Begin generate bug_id: Time_13
num_of_hunks: 3
use working dir: ./working/data/Time_13
Try to checkout Time_13
build dir: ['./working/data/Time_13/build/classes', './working/data/Time_13/build/tests']
init FileManager
trace file: src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
trace file: src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
trace file: src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
trying to replace old failing tests
edit: replace from 118 range 19 at src/test/java/org/joda/time/format/TestISOPeriodFormat.java
to
    public void testFormatStandard_negative$catena_0() {
        Period p = new Period(-1, -2, -3, -4, -5, -6, -7, -8);
        assertEquals("P-1Y-2M-3W-4DT-5H-6M-7.008S", ISOPeriodFormat.standard().print(p));                   /***** ORIGINAL ASSERTION IS HERE *****/
        
        p = Period.years(-54);
        try{ assertEquals("P-54Y", ISOPeriodFormat.standard().print(p));                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(4).withMillis(-8);
        try{ assertEquals("PT3.992S", ISOPeriodFormat.standard().print(p));                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(-4).withMillis(8);
        try{ assertEquals("PT-3.992S", ISOPeriodFormat.standard().print(p));                                }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(-23);
        try{ assertEquals("PT-23S", ISOPeriodFormat.standard().print(p));                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.millis(-8);
        try{ assertEquals("PT-0.008S", ISOPeriodFormat.standard().print(p));                                }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testFormatStandard_negative$catena_1() {
        Period p = new Period(-1, -2, -3, -4, -5, -6, -7, -8);
        try{ assertEquals("P-1Y-2M-3W-4DT-5H-6M-7.008S", ISOPeriodFormat.standard().print(p));              }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.years(-54);
        assertEquals("P-54Y", ISOPeriodFormat.standard().print(p));                                         /***** ORIGINAL ASSERTION IS HERE *****/
        
        p = Period.seconds(4).withMillis(-8);
        try{ assertEquals("PT3.992S", ISOPeriodFormat.standard().print(p));                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(-4).withMillis(8);
        try{ assertEquals("PT-3.992S", ISOPeriodFormat.standard().print(p));                                }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(-23);
        try{ assertEquals("PT-23S", ISOPeriodFormat.standard().print(p));                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.millis(-8);
        try{ assertEquals("PT-0.008S", ISOPeriodFormat.standard().print(p));                                }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testFormatStandard_negative$catena_2() {
        Period p = new Period(-1, -2, -3, -4, -5, -6, -7, -8);
        try{ assertEquals("P-1Y-2M-3W-4DT-5H-6M-7.008S", ISOPeriodFormat.standard().print(p));              }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.years(-54);
        try{ assertEquals("P-54Y", ISOPeriodFormat.standard().print(p));                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(4).withMillis(-8);
        assertEquals("PT3.992S", ISOPeriodFormat.standard().print(p));                                      /***** ORIGINAL ASSERTION IS HERE *****/
        
        p = Period.seconds(-4).withMillis(8);
        try{ assertEquals("PT-3.992S", ISOPeriodFormat.standard().print(p));                                }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(-23);
        try{ assertEquals("PT-23S", ISOPeriodFormat.standard().print(p));                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.millis(-8);
        try{ assertEquals("PT-0.008S", ISOPeriodFormat.standard().print(p));                                }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testFormatStandard_negative$catena_3() {
        Period p = new Period(-1, -2, -3, -4, -5, -6, -7, -8);
        try{ assertEquals("P-1Y-2M-3W-4DT-5H-6M-7.008S", ISOPeriodFormat.standard().print(p));              }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.years(-54);
        try{ assertEquals("P-54Y", ISOPeriodFormat.standard().print(p));                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(4).withMillis(-8);
        try{ assertEquals("PT3.992S", ISOPeriodFormat.standard().print(p));                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(-4).withMillis(8);
        assertEquals("PT-3.992S", ISOPeriodFormat.standard().print(p));                                     /***** ORIGINAL ASSERTION IS HERE *****/
        
        p = Period.seconds(-23);
        try{ assertEquals("PT-23S", ISOPeriodFormat.standard().print(p));                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.millis(-8);
        try{ assertEquals("PT-0.008S", ISOPeriodFormat.standard().print(p));                                }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testFormatStandard_negative$catena_4() {
        Period p = new Period(-1, -2, -3, -4, -5, -6, -7, -8);
        try{ assertEquals("P-1Y-2M-3W-4DT-5H-6M-7.008S", ISOPeriodFormat.standard().print(p));              }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.years(-54);
        try{ assertEquals("P-54Y", ISOPeriodFormat.standard().print(p));                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(4).withMillis(-8);
        try{ assertEquals("PT3.992S", ISOPeriodFormat.standard().print(p));                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(-4).withMillis(8);
        try{ assertEquals("PT-3.992S", ISOPeriodFormat.standard().print(p));                                }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(-23);
        assertEquals("PT-23S", ISOPeriodFormat.standard().print(p));                                        /***** ORIGINAL ASSERTION IS HERE *****/
        
        p = Period.millis(-8);
        try{ assertEquals("PT-0.008S", ISOPeriodFormat.standard().print(p));                                }catch(Throwable __SHOULD_BE_IGNORED){}
    }     public void testFormatStandard_negative$catena_5() {
        Period p = new Period(-1, -2, -3, -4, -5, -6, -7, -8);
        try{ assertEquals("P-1Y-2M-3W-4DT-5H-6M-7.008S", ISOPeriodFormat.standard().print(p));              }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.years(-54);
        try{ assertEquals("P-54Y", ISOPeriodFormat.standard().print(p));                                    }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(4).withMillis(-8);
        try{ assertEquals("PT3.992S", ISOPeriodFormat.standard().print(p));                                 }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(-4).withMillis(8);
        try{ assertEquals("PT-3.992S", ISOPeriodFormat.standard().print(p));                                }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.seconds(-23);
        try{ assertEquals("PT-23S", ISOPeriodFormat.standard().print(p));                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        
        p = Period.millis(-8);
        assertEquals("PT-0.008S", ISOPeriodFormat.standard().print(p));                                     /***** ORIGINAL ASSERTION IS HERE *****/
    }
trace file: src/test/java/org/joda/time/format/TestISOPeriodFormat.java
new test num: 6
ori test num: 0
pattern: 000
patches are written to file
running tests...
used time: Finished in 44.81 seconds
Failing tests: 1
	org.joda.time.format.TestISOPeriodFormat::testFormatStandard_negative$catena_5
pattern: 001
try to fix hunk: 2
insert before 1142 with                     if (valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND) {
                        buf.insert(bufLen, '-');
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 010
try to fix hunk: 1
insert before 1133 with             int bufLen = buf.length();

patches are written to file
running tests...
used time: Finished in 39.64 seconds
Failing tests: 1
	org.joda.time.format.TestISOPeriodFormat::testFormatStandard_negative$catena_5
No new failing tests but only 1 hunk
pattern: 100
try to fix hunk: 0
replace from 1098 with range 1 to
                sum = (valueLong < 0 ? Math.max(sum, 5) : Math.max(sum, 4));

patches are written to file
running tests...
used time: Finished in 35.44 seconds
Failing tests: 1
	org.joda.time.format.TestISOPeriodFormat::testFormatStandard_negative$catena_5
No new failing tests but only 1 hunk
pattern: 011
try to fix hunk: 1
insert before 1133 with             int bufLen = buf.length();

try to fix hunk: 2
insert before 1142 with                     if (valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND) {
                        buf.insert(bufLen, '-');
                    }

patches are written to file
running tests...
used time: Finished in 37.37 seconds
Failing tests: 0
Can independently fix ['org.joda.time.format.TestISOPeriodFormat::testFormatStandard_negative$catena_5']
select new bug
Pattern: 011
failing tests: org.joda.time.format.TestISOPeriodFormat::testFormatStandard_negative$catena_5
pattern: 101
try to fix hunk: 0
replace from 1098 with range 1 to
                sum = (valueLong < 0 ? Math.max(sum, 5) : Math.max(sum, 4));

try to fix hunk: 2
insert before 1142 with                     if (valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND) {
                        buf.insert(bufLen, '-');
                    }

patches are written to file
running tests...
seems testing failed, see output:
<OUTPUT>
<Common Compile Failed>
<ENDOUTPUT>
pattern: 110
try to fix hunk: 0
replace from 1098 with range 1 to
                sum = (valueLong < 0 ? Math.max(sum, 5) : Math.max(sum, 4));

try to fix hunk: 1
insert before 1133 with             int bufLen = buf.length();

patches are written to file
running tests...
used time: Finished in 31.17 seconds
Failing tests: 1
	org.joda.time.format.TestISOPeriodFormat::testFormatStandard_negative$catena_5
Can independently fix []
Could not fix independently
pattern: 111
try to fix hunk: 0
replace from 1098 with range 1 to
                sum = (valueLong < 0 ? Math.max(sum, 5) : Math.max(sum, 4));

try to fix hunk: 1
insert before 1133 with             int bufLen = buf.length();

try to fix hunk: 2
insert before 1142 with                     if (valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND) {
                        buf.insert(bufLen, '-');
                    }

patches are written to file
running tests...
used time: Finished in 33.58 seconds
Failing tests: 0
Can independently fix []
Could not fix independently
Find 1 new bugs
