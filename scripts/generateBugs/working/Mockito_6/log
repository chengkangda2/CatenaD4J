---
Begin generate bug_id: Mockito_6
num_of_hunks: 20
NOTICE: may not contains full fix patterns for hunks are too much (20 hunks)
timeout for running: 3600
use working dir: ./working/data/Mockito_6
Try to checkout Mockito_6
build dir: ['./working/data/Mockito_6/build/classes/main', './working/data/Mockito_6/build/classes/test']
init FileManager
trace file: src/org/mockito/Matchers.java
trying to replace old failing tests
edit: replace from 43 range 20 at test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
to
    @Test
    public void shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0() {
        when(mock.forInteger(anyInt())).thenReturn("0");
        when(mock.forCharacter(anyChar())).thenReturn("1");
        when(mock.forShort(anyShort())).thenReturn("2");
        when(mock.forByte(anyByte())).thenReturn("3");
        when(mock.forBoolean(anyBoolean())).thenReturn("4");
        when(mock.forLong(anyLong())).thenReturn("5");
        when(mock.forFloat(anyFloat())).thenReturn("6");
        when(mock.forDouble(anyDouble())).thenReturn("7");
        
        assertEquals(null, mock.forInteger(null));                                                          /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forCharacter(null));                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forShort(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forByte(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forBoolean(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forLong(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forFloat(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forDouble(null));                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1() {
        when(mock.forInteger(anyInt())).thenReturn("0");
        when(mock.forCharacter(anyChar())).thenReturn("1");
        when(mock.forShort(anyShort())).thenReturn("2");
        when(mock.forByte(anyByte())).thenReturn("3");
        when(mock.forBoolean(anyBoolean())).thenReturn("4");
        when(mock.forLong(anyLong())).thenReturn("5");
        when(mock.forFloat(anyFloat())).thenReturn("6");
        when(mock.forDouble(anyDouble())).thenReturn("7");
        
        try{ assertEquals(null, mock.forInteger(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forCharacter(null));                                                        /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forShort(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forByte(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forBoolean(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forLong(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forFloat(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forDouble(null));                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2() {
        when(mock.forInteger(anyInt())).thenReturn("0");
        when(mock.forCharacter(anyChar())).thenReturn("1");
        when(mock.forShort(anyShort())).thenReturn("2");
        when(mock.forByte(anyByte())).thenReturn("3");
        when(mock.forBoolean(anyBoolean())).thenReturn("4");
        when(mock.forLong(anyLong())).thenReturn("5");
        when(mock.forFloat(anyFloat())).thenReturn("6");
        when(mock.forDouble(anyDouble())).thenReturn("7");
        
        try{ assertEquals(null, mock.forInteger(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forCharacter(null));                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forShort(null));                                                            /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forByte(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forBoolean(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forLong(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forFloat(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forDouble(null));                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3() {
        when(mock.forInteger(anyInt())).thenReturn("0");
        when(mock.forCharacter(anyChar())).thenReturn("1");
        when(mock.forShort(anyShort())).thenReturn("2");
        when(mock.forByte(anyByte())).thenReturn("3");
        when(mock.forBoolean(anyBoolean())).thenReturn("4");
        when(mock.forLong(anyLong())).thenReturn("5");
        when(mock.forFloat(anyFloat())).thenReturn("6");
        when(mock.forDouble(anyDouble())).thenReturn("7");
        
        try{ assertEquals(null, mock.forInteger(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forCharacter(null));                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forShort(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forByte(null));                                                             /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forBoolean(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forLong(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forFloat(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forDouble(null));                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4() {
        when(mock.forInteger(anyInt())).thenReturn("0");
        when(mock.forCharacter(anyChar())).thenReturn("1");
        when(mock.forShort(anyShort())).thenReturn("2");
        when(mock.forByte(anyByte())).thenReturn("3");
        when(mock.forBoolean(anyBoolean())).thenReturn("4");
        when(mock.forLong(anyLong())).thenReturn("5");
        when(mock.forFloat(anyFloat())).thenReturn("6");
        when(mock.forDouble(anyDouble())).thenReturn("7");
        
        try{ assertEquals(null, mock.forInteger(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forCharacter(null));                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forShort(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forByte(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forBoolean(null));                                                          /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forLong(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forFloat(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forDouble(null));                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5() {
        when(mock.forInteger(anyInt())).thenReturn("0");
        when(mock.forCharacter(anyChar())).thenReturn("1");
        when(mock.forShort(anyShort())).thenReturn("2");
        when(mock.forByte(anyByte())).thenReturn("3");
        when(mock.forBoolean(anyBoolean())).thenReturn("4");
        when(mock.forLong(anyLong())).thenReturn("5");
        when(mock.forFloat(anyFloat())).thenReturn("6");
        when(mock.forDouble(anyDouble())).thenReturn("7");
        
        try{ assertEquals(null, mock.forInteger(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forCharacter(null));                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forShort(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forByte(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forBoolean(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forLong(null));                                                             /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forFloat(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forDouble(null));                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6() {
        when(mock.forInteger(anyInt())).thenReturn("0");
        when(mock.forCharacter(anyChar())).thenReturn("1");
        when(mock.forShort(anyShort())).thenReturn("2");
        when(mock.forByte(anyByte())).thenReturn("3");
        when(mock.forBoolean(anyBoolean())).thenReturn("4");
        when(mock.forLong(anyLong())).thenReturn("5");
        when(mock.forFloat(anyFloat())).thenReturn("6");
        when(mock.forDouble(anyDouble())).thenReturn("7");
        
        try{ assertEquals(null, mock.forInteger(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forCharacter(null));                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forShort(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forByte(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forBoolean(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forLong(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forFloat(null));                                                            /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forDouble(null));                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7() {
        when(mock.forInteger(anyInt())).thenReturn("0");
        when(mock.forCharacter(anyChar())).thenReturn("1");
        when(mock.forShort(anyShort())).thenReturn("2");
        when(mock.forByte(anyByte())).thenReturn("3");
        when(mock.forBoolean(anyBoolean())).thenReturn("4");
        when(mock.forLong(anyLong())).thenReturn("5");
        when(mock.forFloat(anyFloat())).thenReturn("6");
        when(mock.forDouble(anyDouble())).thenReturn("7");
        
        try{ assertEquals(null, mock.forInteger(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forCharacter(null));                                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forShort(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forByte(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forBoolean(null));                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forLong(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forFloat(null));                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forDouble(null));                                                           /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 26 range 16 at test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
to
    @Test
    public void shouldNotAcceptNullInAnyXMatchers$catena_0() {
        when(mock.oneArg(anyObject())).thenReturn("0");
        when(mock.oneArg(anyString())).thenReturn("1");
        when(mock.forList(anyList())).thenReturn("2");
        when(mock.forMap(anyMap())).thenReturn("3");
        when(mock.forCollection(anyCollection())).thenReturn("4");
        when(mock.forSet(anySet())).thenReturn("5");
        
        assertEquals(null, mock.oneArg((Object) null));                                                     /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.oneArg((String) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forList(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forMap(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forCollection(null));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forSet(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldNotAcceptNullInAnyXMatchers$catena_1() {
        when(mock.oneArg(anyObject())).thenReturn("0");
        when(mock.oneArg(anyString())).thenReturn("1");
        when(mock.forList(anyList())).thenReturn("2");
        when(mock.forMap(anyMap())).thenReturn("3");
        when(mock.forCollection(anyCollection())).thenReturn("4");
        when(mock.forSet(anySet())).thenReturn("5");
        
        try{ assertEquals(null, mock.oneArg((Object) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.oneArg((String) null));                                                     /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forList(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forMap(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forCollection(null));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forSet(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldNotAcceptNullInAnyXMatchers$catena_2() {
        when(mock.oneArg(anyObject())).thenReturn("0");
        when(mock.oneArg(anyString())).thenReturn("1");
        when(mock.forList(anyList())).thenReturn("2");
        when(mock.forMap(anyMap())).thenReturn("3");
        when(mock.forCollection(anyCollection())).thenReturn("4");
        when(mock.forSet(anySet())).thenReturn("5");
        
        try{ assertEquals(null, mock.oneArg((Object) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.oneArg((String) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forList(null));                                                             /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forMap(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forCollection(null));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forSet(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldNotAcceptNullInAnyXMatchers$catena_3() {
        when(mock.oneArg(anyObject())).thenReturn("0");
        when(mock.oneArg(anyString())).thenReturn("1");
        when(mock.forList(anyList())).thenReturn("2");
        when(mock.forMap(anyMap())).thenReturn("3");
        when(mock.forCollection(anyCollection())).thenReturn("4");
        when(mock.forSet(anySet())).thenReturn("5");
        
        try{ assertEquals(null, mock.oneArg((Object) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.oneArg((String) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forList(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forMap(null));                                                              /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forCollection(null));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forSet(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldNotAcceptNullInAnyXMatchers$catena_4() {
        when(mock.oneArg(anyObject())).thenReturn("0");
        when(mock.oneArg(anyString())).thenReturn("1");
        when(mock.forList(anyList())).thenReturn("2");
        when(mock.forMap(anyMap())).thenReturn("3");
        when(mock.forCollection(anyCollection())).thenReturn("4");
        when(mock.forSet(anySet())).thenReturn("5");
        
        try{ assertEquals(null, mock.oneArg((Object) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.oneArg((String) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forList(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forMap(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forCollection(null));                                                       /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forSet(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldNotAcceptNullInAnyXMatchers$catena_5() {
        when(mock.oneArg(anyObject())).thenReturn("0");
        when(mock.oneArg(anyString())).thenReturn("1");
        when(mock.forList(anyList())).thenReturn("2");
        when(mock.forMap(anyMap())).thenReturn("3");
        when(mock.forCollection(anyCollection())).thenReturn("4");
        when(mock.forSet(anySet())).thenReturn("5");
        
        try{ assertEquals(null, mock.oneArg((Object) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.oneArg((String) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forList(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forMap(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forCollection(null));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forSet(null));                                                              /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 226 range 8 at test/org/mockitousage/matchers/MatchersTest.java
to
    @Test
    public void anyStringMatcher$catena_0() {
        when(mock.oneArg(anyString())).thenReturn("matched");
        
        assertEquals("matched", mock.oneArg(""));                                                           /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals("matched", mock.oneArg("any string"));                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.oneArg((String) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void anyStringMatcher$catena_1() {
        when(mock.oneArg(anyString())).thenReturn("matched");
        
        try{ assertEquals("matched", mock.oneArg(""));                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals("matched", mock.oneArg("any string"));                                                 /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.oneArg((String) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void anyStringMatcher$catena_2() {
        when(mock.oneArg(anyString())).thenReturn("matched");
        
        try{ assertEquals("matched", mock.oneArg(""));                                                      }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals("matched", mock.oneArg("any string"));                                            }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.oneArg((String) null));                                                     /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 40 range 9 at test/org/mockitousage/matchers/NewMatchersTest.java
to
    @Test
    public void shouldAllowAnyCollection$catena_0() {
        when(mock.forCollection(anyCollection())).thenReturn("matched");
        
        assertEquals("matched", mock.forCollection(Arrays.asList("x", "y")));                               /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forCollection(null));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}

        try{ verify(mock, times(1)).forCollection(anyCollection());                                         }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldAllowAnyCollection$catena_1() {
        when(mock.forCollection(anyCollection())).thenReturn("matched");
        
        try{ assertEquals("matched", mock.forCollection(Arrays.asList("x", "y")));                          }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forCollection(null));                                                       /***** ORIGINAL ASSERTION IS HERE *****/

        try{ verify(mock, times(1)).forCollection(anyCollection());                                         }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldAllowAnyCollection$catena_2() {
        when(mock.forCollection(anyCollection())).thenReturn("matched");
        
        try{ assertEquals("matched", mock.forCollection(Arrays.asList("x", "y")));                          }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forCollection(null));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}

        verify(mock, times(1)).forCollection(anyCollection());                                              /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 30 range 9 at test/org/mockitousage/matchers/NewMatchersTest.java
to
    @Test
    public void shouldAllowAnyList$catena_0() {
        when(mock.forList(anyList())).thenReturn("matched");
        
        assertEquals("matched", mock.forList(Arrays.asList("x", "y")));                                     /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forList(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}

        try{ verify(mock, times(1)).forList(anyList());                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldAllowAnyList$catena_1() {
        when(mock.forList(anyList())).thenReturn("matched");
        
        try{ assertEquals("matched", mock.forList(Arrays.asList("x", "y")));                                }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forList(null));                                                             /***** ORIGINAL ASSERTION IS HERE *****/

        try{ verify(mock, times(1)).forList(anyList());                                                     }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldAllowAnyList$catena_2() {
        when(mock.forList(anyList())).thenReturn("matched");
        
        try{ assertEquals("matched", mock.forList(Arrays.asList("x", "y")));                                }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forList(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}

        verify(mock, times(1)).forList(anyList());                                                          /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 50 range 9 at test/org/mockitousage/matchers/NewMatchersTest.java
to
    @Test
    public void shouldAllowAnyMap$catena_0() {
        when(mock.forMap(anyMap())).thenReturn("matched");
        
        assertEquals("matched", mock.forMap(new HashMap<String, String>()));                                /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forMap(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}

        try{ verify(mock, times(1)).forMap(anyMap());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldAllowAnyMap$catena_1() {
        when(mock.forMap(anyMap())).thenReturn("matched");
        
        try{ assertEquals("matched", mock.forMap(new HashMap<String, String>()));                           }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forMap(null));                                                              /***** ORIGINAL ASSERTION IS HERE *****/

        try{ verify(mock, times(1)).forMap(anyMap());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldAllowAnyMap$catena_2() {
        when(mock.forMap(anyMap())).thenReturn("matched");
        
        try{ assertEquals("matched", mock.forMap(new HashMap<String, String>()));                           }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forMap(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}

        verify(mock, times(1)).forMap(anyMap());                                                            /***** ORIGINAL ASSERTION IS HERE *****/
    }
edit: replace from 60 range 9 at test/org/mockitousage/matchers/NewMatchersTest.java
to
    @Test
    public void shouldAllowAnySet$catena_0() {
        when(mock.forSet(anySet())).thenReturn("matched");
        
        assertEquals("matched", mock.forSet(new HashSet<String>()));                                        /***** ORIGINAL ASSERTION IS HERE *****/
        try{ assertEquals(null, mock.forSet(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}

        try{ verify(mock, times(1)).forSet(anySet());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldAllowAnySet$catena_1() {
        when(mock.forSet(anySet())).thenReturn("matched");
        
        try{ assertEquals("matched", mock.forSet(new HashSet<String>()));                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        assertEquals(null, mock.forSet(null));                                                              /***** ORIGINAL ASSERTION IS HERE *****/

        try{ verify(mock, times(1)).forSet(anySet());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}
    }     @Test
    public void shouldAllowAnySet$catena_2() {
        when(mock.forSet(anySet())).thenReturn("matched");
        
        try{ assertEquals("matched", mock.forSet(new HashSet<String>()));                                   }catch(Throwable __SHOULD_BE_IGNORED){}
        try{ assertEquals(null, mock.forSet(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}

        verify(mock, times(1)).forSet(anySet());                                                            /***** ORIGINAL ASSERTION IS HERE *****/
    }
trace file: test/org/mockitousage/matchers/MatchersTest.java
trace file: test/org/mockitousage/matchers/NewMatchersTest.java
trace file: test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java
new test num: 29
ori test num: 0
pattern: 00000000000000000000
patches are written to file
running tests...
used time: Finished in 270.59 seconds
Failing tests: 23
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
processed: 00000000000000000000
pattern: 10000000000000000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

patches are written to file
running tests...
used time: Finished in 198.11 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
select new bug
Pattern: 10000000000000000000
new failing tests:
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
Save found bug
processed: 10000000000000000000
pattern: 01000000000000000000
try to fix hunk: 1
replace from 137 with range 1 to
        return reportMatcher(new InstanceOf(Byte.class)).returnZero();

patches are written to file
running tests...
used time: Finished in 148.13 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
select new bug
Pattern: 01000000000000000000
new failing tests:
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
Save found bug
processed: 01000000000000000000
pattern: 00100000000000000000
try to fix hunk: 2
replace from 152 with range 1 to
        return reportMatcher(new InstanceOf(Character.class)).returnChar();

patches are written to file
running tests...
used time: Finished in 155.70 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
select new bug
Pattern: 00100000000000000000
new failing tests:
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
Save found bug
processed: 00100000000000000000
pattern: 00010000000000000000
try to fix hunk: 3
replace from 167 with range 1 to
        return reportMatcher(new InstanceOf(Integer.class)).returnZero();

patches are written to file
running tests...
used time: Finished in 130.58 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
select new bug
Pattern: 00010000000000000000
new failing tests:
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
Save found bug
processed: 00010000000000000000
pattern: 00001000000000000000
try to fix hunk: 4
replace from 182 with range 1 to
        return reportMatcher(new InstanceOf(Long.class)).returnZero();

patches are written to file
running tests...
used time: Finished in 121.49 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
select new bug
Pattern: 00001000000000000000
new failing tests:
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
Save found bug
processed: 00001000000000000000
pattern: 00000100000000000000
try to fix hunk: 5
replace from 197 with range 1 to
        return reportMatcher(new InstanceOf(Float.class)).returnZero();

patches are written to file
running tests...
used time: Finished in 103.09 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
select new bug
Pattern: 00000100000000000000
new failing tests:
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
Save found bug
processed: 00000100000000000000
pattern: 00000010000000000000
try to fix hunk: 6
replace from 212 with range 1 to
        return reportMatcher(new InstanceOf(Double.class)).returnZero();

patches are written to file
running tests...
used time: Finished in 108.86 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
select new bug
Pattern: 00000010000000000000
new failing tests:
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
Save found bug
processed: 00000010000000000000
pattern: 00000001000000000000
try to fix hunk: 7
replace from 227 with range 1 to
        return reportMatcher(new InstanceOf(Short.class)).returnZero();

patches are written to file
running tests...
used time: Finished in 98.44 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
select new bug
Pattern: 00000001000000000000
new failing tests:
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
Save found bug
processed: 00000001000000000000
pattern: 00000000100000000000
try to fix hunk: 8
replace from 244 with range 1 to
        return (T) reportMatcher(new InstanceOf(Object.class)).returnNull();

patches are written to file
running tests...
used time: Finished in 106.64 seconds
Failing tests: 23
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyMatcher
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Includes new failing tests, set to unusable
processed: 00000000100000000000
pattern: 00000000010000000000
try to fix hunk: 9
replace from 292 with range 1 to
        return (T) reportMatcher(new InstanceOf(clazz)).returnFor(clazz);

patches are written to file
running tests...
used time: Finished in 112.98 seconds
Failing tests: 23
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
No new failing tests but only 1 hunk
processed: 00000000010000000000
pattern: 00000000001000000000
try to fix hunk: 10
replace from 309 with range 1 to
        return (T) reportMatcher(Any.ANY).returnNull();

patches are written to file
running tests...
used time: Finished in 103.41 seconds
Failing tests: 23
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
No new failing tests but only 1 hunk
processed: 00000000001000000000
pattern: 00000000000100000000
try to fix hunk: 11
replace from 324 with range 1 to
        return reportMatcher(new InstanceOf(String.class)).returnString();

patches are written to file
running tests...
used time: Finished in 84.05 seconds
Failing tests: 21
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
select new bug
Pattern: 00000000000100000000
new failing tests:
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
Save found bug
processed: 00000000000100000000
pattern: 00000000000010000000
try to fix hunk: 12
replace from 339 with range 1 to
        return reportMatcher(new InstanceOf(List.class)).returnList();

patches are written to file
running tests...
used time: Finished in 76.38 seconds
Failing tests: 20
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
select new bug
Pattern: 00000000000010000000
new failing tests:
org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
Save found bug
processed: 00000000000010000000
pattern: 00000000000001000000
try to fix hunk: 13
replace from 358 with range 1 to
        return anyList();

patches are written to file
running tests...
used time: Finished in 78.10 seconds
Failing tests: 23
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
No new failing tests but only 1 hunk
processed: 00000000000001000000
pattern: 00000000000000100000
try to fix hunk: 14
replace from 373 with range 1 to
        return reportMatcher(new InstanceOf(Set.class)).returnSet();

patches are written to file
running tests...
used time: Finished in 75.60 seconds
Failing tests: 20
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
select new bug
Pattern: 00000000000000100000
new failing tests:
org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
Save found bug
processed: 00000000000000100000
pattern: 00000000000000010000
try to fix hunk: 15
replace from 392 with range 1 to
        return anySet();

patches are written to file
running tests...
used time: Finished in 77.00 seconds
Failing tests: 23
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
No new failing tests but only 1 hunk
processed: 00000000000000010000
pattern: 00000000000000001000
try to fix hunk: 16
replace from 407 with range 1 to
        return reportMatcher(new InstanceOf(Map.class)).returnMap();

patches are written to file
running tests...
used time: Finished in 75.29 seconds
Failing tests: 20
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
select new bug
Pattern: 00000000000000001000
new failing tests:
org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
Save found bug
processed: 00000000000000001000
pattern: 00000000000000000100
try to fix hunk: 17
replace from 427 with range 1 to
        return anyMap();

patches are written to file
running tests...
used time: Finished in 75.68 seconds
Failing tests: 23
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
No new failing tests but only 1 hunk
processed: 00000000000000000100
pattern: 00000000000000000010
try to fix hunk: 18
replace from 442 with range 1 to
        return reportMatcher(new InstanceOf(Collection.class)).returnList();

patches are written to file
running tests...
used time: Finished in 77.79 seconds
Failing tests: 20
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
select new bug
Pattern: 00000000000000000010
new failing tests:
org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Save found bug
processed: 00000000000000000010
pattern: 00000000000000000001
try to fix hunk: 19
replace from 461 with range 1 to
        return anyCollection();

patches are written to file
running tests...
used time: Finished in 74.06 seconds
Failing tests: 23
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
No new failing tests but only 1 hunk
processed: 00000000000000000001
pattern: 11000000000000000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 1
replace from 137 with range 1 to
        return reportMatcher(new InstanceOf(Byte.class)).returnZero();

patches are written to file
running tests...
used time: Finished in 77.31 seconds
Failing tests: 21
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 11000000000000000000
pattern: 10100000000000000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 2
replace from 152 with range 1 to
        return reportMatcher(new InstanceOf(Character.class)).returnChar();

patches are written to file
running tests...
used time: Finished in 76.18 seconds
Failing tests: 21
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10100000000000000000
pattern: 10010000000000000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 3
replace from 167 with range 1 to
        return reportMatcher(new InstanceOf(Integer.class)).returnZero();

patches are written to file
running tests...
used time: Finished in 78.08 seconds
Failing tests: 21
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10010000000000000000
pattern: 10001000000000000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 4
replace from 182 with range 1 to
        return reportMatcher(new InstanceOf(Long.class)).returnZero();

patches are written to file
running tests...
used time: Finished in 76.68 seconds
Failing tests: 21
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10001000000000000000
pattern: 10000100000000000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 5
replace from 197 with range 1 to
        return reportMatcher(new InstanceOf(Float.class)).returnZero();

patches are written to file
running tests...
used time: Finished in 76.00 seconds
Failing tests: 21
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10000100000000000000
pattern: 10000010000000000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 6
replace from 212 with range 1 to
        return reportMatcher(new InstanceOf(Double.class)).returnZero();

patches are written to file
running tests...
used time: Finished in 77.89 seconds
Failing tests: 21
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10000010000000000000
pattern: 10000001000000000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 7
replace from 227 with range 1 to
        return reportMatcher(new InstanceOf(Short.class)).returnZero();

patches are written to file
running tests...
used time: Finished in 77.00 seconds
Failing tests: 21
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10000001000000000000
pattern: 10000000100000000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 8
replace from 244 with range 1 to
        return (T) reportMatcher(new InstanceOf(Object.class)).returnNull();

patches are written to file
running tests...
used time: Finished in 78.93 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyMatcher
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Includes new failing tests, set to unusable
processed: 10000000100000000000
pattern: 10000000010000000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 9
replace from 292 with range 1 to
        return (T) reportMatcher(new InstanceOf(clazz)).returnFor(clazz);

patches are written to file
running tests...
used time: Finished in 75.40 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10000000010000000000
pattern: 10000000001000000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 10
replace from 309 with range 1 to
        return (T) reportMatcher(Any.ANY).returnNull();

patches are written to file
running tests...
used time: Finished in 77.92 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10000000001000000000
pattern: 10000000000100000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 11
replace from 324 with range 1 to
        return reportMatcher(new InstanceOf(String.class)).returnString();

patches are written to file
running tests...
used time: Finished in 77.75 seconds
Failing tests: 20
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10000000000100000000
pattern: 10000000000010000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 12
replace from 339 with range 1 to
        return reportMatcher(new InstanceOf(List.class)).returnList();

patches are written to file
running tests...
used time: Finished in 75.62 seconds
Failing tests: 19
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10000000000010000000
pattern: 10000000000001000000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 13
replace from 358 with range 1 to
        return anyList();

patches are written to file
running tests...
used time: Finished in 78.15 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10000000000001000000
pattern: 10000000000000100000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 14
replace from 373 with range 1 to
        return reportMatcher(new InstanceOf(Set.class)).returnSet();

patches are written to file
running tests...
used time: Finished in 62.59 seconds
Failing tests: 19
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10000000000000100000
pattern: 10000000000000010000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 15
replace from 392 with range 1 to
        return anySet();

patches are written to file
running tests...
used time: Finished in 58.50 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10000000000000010000
pattern: 10000000000000001000
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 16
replace from 407 with range 1 to
        return reportMatcher(new InstanceOf(Map.class)).returnMap();

patches are written to file
running tests...
used time: Finished in 60.78 seconds
Failing tests: 19
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10000000000000001000
pattern: 10000000000000000100
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 17
replace from 427 with range 1 to
        return anyMap();

patches are written to file
running tests...
used time: Finished in 55.38 seconds
Failing tests: 22
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_5
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_6
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers$catena_7
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_0
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_1
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_2
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_3
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_4
	org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers$catena_5
	org.mockitousage.matchers.MatchersTest::anyStringMatcher$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList$catena_2
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_1
	org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection$catena_2
Can independently fix []
Could not fix independently
processed: 10000000000000000100
pattern: 10000000000000000010
try to fix hunk: 0
replace from 122 with range 1 to
        return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();

try to fix hunk: 18
replace from 442 with range 1 to
        return reportMatcher(new InstanceOf(Collection.class)).returnList();

patches are written to file
running tests...
EXCEPTION: Inside Exception generator.run() timeout
Traceback (most recent call last):
  File "run.py", line 30, in task
    generator.run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 82, in new_function
    return function(*args, **kwargs)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 83, in run
    self._run()
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 109, in _run
    self.taskSingleHunk(task)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/runner.py", line 138, in taskSingleHunk
    failure = util.get_failing_tests(self.path, self.build_dir)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 46, in get_failing_tests
    result = runCommand(['defects4j', 'test', '-w', '{}'.format(path)], timeout=timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/util.py", line 9, in runCommand
    finished = subprocess.run(cmd, capture_output=True, cwd=cwd, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1028, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1868, in _communicate
    ready = selector.select(timeout)
  File "/usr/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 69, in handler
    _raise_exception(timeout_exception, exception_message)
  File "/root/workbench/CatenaD4j/scripts/generateBugs/timeout_decorator/timeout_decorator.py", line 47, in _raise_exception
    raise exception(exception_message)
TimeoutError: generator.run() timeout

