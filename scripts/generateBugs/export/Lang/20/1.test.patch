{
    "org.apache.commons.lang3.StringUtilsTest::testJoin_Objectarray": {
        "begin_line_no": 184,
        "end_line_no": 198,
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsTest.java",
        "to": [
            "    public void testJoin_Objectarray$catena_5() {\n//        assertEquals(null, StringUtils.join(null)); // generates warning\n        try{ assertEquals(null, StringUtils.join((Object[]) null));             }catch(Throwable __SHOULD_BE_IGNORED){} // equivalent explicit cast\n        // test additional varargs calls\n        try{ assertEquals(\"\", StringUtils.join());                                           }catch(Throwable __SHOULD_BE_IGNORED){} // empty array\n        try{ assertEquals(\"\", StringUtils.join((Object) null));                    }catch(Throwable __SHOULD_BE_IGNORED){} // => new Object[]{null}\n\n        try{ assertEquals(\"\", StringUtils.join(EMPTY_ARRAY_LIST));                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"\", StringUtils.join(NULL_ARRAY_LIST));                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(\"null\", StringUtils.join(NULL_TO_STRING_LIST));                                        /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(\"abc\", StringUtils.join(new String[] {\"a\", \"b\", \"c\"}));                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"a\", StringUtils.join(new String[] {null, \"a\", \"\"}));                             }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"foo\", StringUtils.join(MIXED_ARRAY_LIST));                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(\"foo2\", StringUtils.join(MIXED_TYPE_LIST));                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}