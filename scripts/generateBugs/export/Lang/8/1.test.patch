{
    "org.apache.commons.lang3.time.FastDatePrinterTest::testCalendarTimezoneRespected": {
        "begin_line_no": 265,
        "end_line_no": 287,
        "file_path": "src/test/java/org/apache/commons/lang3/time/FastDatePrinterTest.java",
        "to": [
            "    @Test\n    public void testCalendarTimezoneRespected$catena_1() {\n        String[] availableZones = TimeZone.getAvailableIDs();\n        TimeZone currentZone = TimeZone.getDefault();\n        \n        TimeZone anotherZone = null;\n        for (String zone : availableZones) {\n            if (!zone.equals(currentZone.getID())) {\n                anotherZone = TimeZone.getTimeZone(zone);\n            }\n        }\n        \n        try{ assertNotNull(\"Cannot find another timezone\", anotherZone);                                    }catch(Throwable __SHOULD_BE_IGNORED){}\n        \n        final String pattern = \"h:mma z\";\n        final Calendar cal = Calendar.getInstance(anotherZone);\n        \n        SimpleDateFormat sdf = new SimpleDateFormat(pattern);\n        sdf.setTimeZone(anotherZone);\n        String expectedValue = sdf.format(cal.getTime());\n        String actualValue = FastDateFormat.getInstance(pattern).format(cal);\n        assertEquals(expectedValue, actualValue);                                                           /***** ORIGINAL ASSERTION IS HERE *****/\n    }"
        ]
    }
}