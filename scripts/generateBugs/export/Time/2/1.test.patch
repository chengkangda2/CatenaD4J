{
    "org.joda.time.TestPartial_Basics::testWith_baseAndArgHaveNoRange": {
        "begin_line_no": 467,
        "end_line_no": 473,
        "file_path": "src/test/java/org/joda/time/TestPartial_Basics.java",
        "to": [
            "    public void testWith_baseAndArgHaveNoRange$catena_2() {\n        Partial test = new Partial(DateTimeFieldType.year(), 1);\n        Partial result = test.with(DateTimeFieldType.era(), 1);\n        try{ assertEquals(2, result.size());                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(0, result.indexOf(DateTimeFieldType.era()));                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(1, result.indexOf(DateTimeFieldType.year()));                                          /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    public void testWith_baseAndArgHaveNoRange$catena_0() {\n        Partial test = new Partial(DateTimeFieldType.year(), 1);\n        Partial result = test.with(DateTimeFieldType.era(), 1);\n        assertEquals(2, result.size());                                                                     /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(0, result.indexOf(DateTimeFieldType.era()));                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(1, result.indexOf(DateTimeFieldType.year()));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    }",
            "    public void testWith_baseAndArgHaveNoRange$catena_1() {\n        Partial test = new Partial(DateTimeFieldType.year(), 1);\n        Partial result = test.with(DateTimeFieldType.era(), 1);\n        try{ assertEquals(2, result.size());                                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(0, result.indexOf(DateTimeFieldType.era()));                                           /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(1, result.indexOf(DateTimeFieldType.year()));                                     }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}