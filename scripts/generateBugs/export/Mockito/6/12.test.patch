{
    "org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap": {
        "begin_line_no": 50,
        "end_line_no": 58,
        "file_path": "test/org/mockitousage/matchers/NewMatchersTest.java",
        "to": [
            "    @Test\n    public void shouldAllowAnyMap$catena_2() {\n        when(mock.forMap(anyMap())).thenReturn(\"matched\");\n        \n        try{ assertEquals(\"matched\", mock.forMap(new HashMap<String, String>()));                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(null, mock.forMap(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n\n        verify(mock, times(1)).forMap(anyMap());                                                            /***** ORIGINAL ASSERTION IS HERE *****/\n    }",
            "    @Test\n    public void shouldAllowAnyMap$catena_1() {\n        when(mock.forMap(anyMap())).thenReturn(\"matched\");\n        \n        try{ assertEquals(\"matched\", mock.forMap(new HashMap<String, String>()));                           }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(null, mock.forMap(null));                                                              /***** ORIGINAL ASSERTION IS HERE *****/\n\n        try{ verify(mock, times(1)).forMap(anyMap());                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    },
    "org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers": {
        "begin_line_no": 26,
        "end_line_no": 41,
        "file_path": "test/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java",
        "to": [
            "    @Test\n    public void shouldNotAcceptNullInAnyXMatchers$catena_3() {\n        when(mock.oneArg(anyObject())).thenReturn(\"0\");\n        when(mock.oneArg(anyString())).thenReturn(\"1\");\n        when(mock.forList(anyList())).thenReturn(\"2\");\n        when(mock.forMap(anyMap())).thenReturn(\"3\");\n        when(mock.forCollection(anyCollection())).thenReturn(\"4\");\n        when(mock.forSet(anySet())).thenReturn(\"5\");\n        \n        try{ assertEquals(null, mock.oneArg((Object) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(null, mock.oneArg((String) null));                                                }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(null, mock.forList(null));                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n        assertEquals(null, mock.forMap(null));                                                              /***** ORIGINAL ASSERTION IS HERE *****/\n        try{ assertEquals(null, mock.forCollection(null));                                                  }catch(Throwable __SHOULD_BE_IGNORED){}\n        try{ assertEquals(null, mock.forSet(null));                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n    }"
        ]
    }
}