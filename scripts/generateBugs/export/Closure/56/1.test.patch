{
    "com.google.javascript.jscomp.JsMessageExtractorTest::testSyntaxError1": {
        "begin_line_no": 54,
        "end_line_no": 64,
        "file_path": "test/com/google/javascript/jscomp/JsMessageExtractorTest.java",
        "to": [
            "  public void testSyntaxError1$catena_3() {\n    try {\n      extractMessage(\"if (true) {}}\");\n      try{ fail(\"Expected exception\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    } catch (RuntimeException e) {\n      try{ assertTrue(e.getMessage().contains(\"JSCompiler errors\\n\"));                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n      try{ assertTrue(e.getMessage().contains(\n          \"testcode:1: ERROR - Parse error. syntax error\\n\"));                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n      assertTrue(e.getMessage().contains(\"if (true) {}}\\n\"));                                               /***** ORIGINAL ASSERTION IS HERE *****/\n    }\n  }"
        ]
    },
    "com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest::testExceptNoNewLine": {
        "begin_line_no": 64,
        "end_line_no": 69,
        "file_path": "test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java",
        "to": [
            "  public void testExceptNoNewLine$catena_2() throws Exception {\n    try{ assertEquals(\"foo2:first line\", provider.getSourceLine(\"foo2\", 1));                                }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ assertEquals(\"foo2:second line\", provider.getSourceLine(\"foo2\", 2));                               }catch(Throwable __SHOULD_BE_IGNORED){}\n    assertEquals(\"foo2:third line\", provider.getSourceLine(\"foo2\", 3));                                     /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ assertEquals(null, provider.getSourceLine(\"foo2\", 4));                                             }catch(Throwable __SHOULD_BE_IGNORED){}\n  }"
        ]
    },
    "com.google.javascript.jscomp.JsMessageExtractorTest::testSyntaxError2": {
        "begin_line_no": 66,
        "end_line_no": 76,
        "file_path": "test/com/google/javascript/jscomp/JsMessageExtractorTest.java",
        "to": [
            "  public void testSyntaxError2$catena_3() {\n    try {\n      extractMessage(\"\", \"if (true) {}}\");\n      try{ fail(\"Expected exception\");                                                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n    } catch (RuntimeException e) {\n      try{ assertTrue(e.getMessage().contains(\"JSCompiler errors\\n\"));                                      }catch(Throwable __SHOULD_BE_IGNORED){}\n      try{ assertTrue(e.getMessage().contains(\n          \"testcode:2: ERROR - Parse error. syntax error\\n\"));                                              }catch(Throwable __SHOULD_BE_IGNORED){}\n      assertTrue(e.getMessage().contains(\"if (true) {}}\\n\"));                                               /***** ORIGINAL ASSERTION IS HERE *****/\n    }\n  }"
        ]
    }
}