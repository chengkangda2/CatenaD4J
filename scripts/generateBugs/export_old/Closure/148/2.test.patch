{
    "com.google.javascript.jscomp.PeepholeFoldConstantsTest::testFoldTypeof": {
        "begin_line_no": 545,
        "end_line_no": 560,
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "to": [
            "  public void testFoldTypeof$catena_6() {\n    try{ fold(\"x = typeof 1\", \"x = \\\"number\\\"\");                                                            }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ fold(\"x = typeof 'foo'\", \"x = \\\"string\\\"\");                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ fold(\"x = typeof true\", \"x = \\\"boolean\\\"\");                                                        }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ fold(\"x = typeof false\", \"x = \\\"boolean\\\"\");                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ fold(\"x = typeof null\", \"x = \\\"object\\\"\");                                                         }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ fold(\"x = typeof undefined\", \"x = \\\"undefined\\\"\");                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n    fold(\"x = typeof void 0\", \"x = \\\"undefined\\\"\");                                                         /***** ORIGINAL ASSERTION IS HERE *****/\n    try{ fold(\"x = typeof []\", \"x = \\\"object\\\"\");                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ fold(\"x = typeof [1]\", \"x = \\\"object\\\"\");                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ fold(\"x = typeof [1,[]]\", \"x = \\\"object\\\"\");                                                       }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ fold(\"x = typeof {}\", \"x = \\\"object\\\"\");                                                           }catch(Throwable __SHOULD_BE_IGNORED){}\n\n    try{ foldSame(\"x = typeof[1,[foo()]]\");                                                                 }catch(Throwable __SHOULD_BE_IGNORED){}\n    try{ foldSame(\"x = typeof{bathwater:baby()}\");                                                          }catch(Throwable __SHOULD_BE_IGNORED){}\n  }"
        ]
    },
    "com.google.javascript.jscomp.SourceMapTest::testGoldenOutput0": {
        "begin_line_no": 74,
        "end_line_no": 87,
        "file_path": "test/com/google/javascript/jscomp/SourceMapTest.java",
        "to": [
            ""
        ]
    },
    "com.google.javascript.jscomp.SourceMapTest::testGoldenOutput1": {
        "begin_line_no": 89,
        "end_line_no": 115,
        "file_path": "test/com/google/javascript/jscomp/SourceMapTest.java",
        "to": [
            ""
        ]
    },
    "com.google.javascript.jscomp.SourceMapTest::testGoldenOutput2": {
        "begin_line_no": 117,
        "end_line_no": 144,
        "file_path": "test/com/google/javascript/jscomp/SourceMapTest.java",
        "to": [
            ""
        ]
    },
    "com.google.javascript.jscomp.SourceMapTest::testGoldenOutput3": {
        "begin_line_no": 146,
        "end_line_no": 159,
        "file_path": "test/com/google/javascript/jscomp/SourceMapTest.java",
        "to": [
            ""
        ]
    },
    "com.google.javascript.jscomp.SourceMapTest::testGoldenOutput4": {
        "begin_line_no": 161,
        "end_line_no": 176,
        "file_path": "test/com/google/javascript/jscomp/SourceMapTest.java",
        "to": [
            ""
        ]
    }
}