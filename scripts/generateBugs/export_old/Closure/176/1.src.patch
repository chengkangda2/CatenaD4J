{
    "patch": [
        {
            "file_name": "src/com/google/javascript/jscomp/TypeInference.java",
            "from_line_no": 530,
            "to_line_no": 530,
            "replaced_with": "        JSType varType = var == null ? null : var.getType();\n        boolean isVarDeclaration = left.hasChildren()\n            && varType != null && !var.isTypeInferred();\n",
            "replaced": "        boolean isVarDeclaration = left.hasChildren();\n",
            "patch_type": "replace",
            "next_line_no": 531
        },
        {
            "file_name": "src/com/google/javascript/jscomp/TypeInference.java",
            "from_line_no": 548,
            "to_line_no": 548,
            "replaced_with": "        boolean isVarTypeBetter = isVarDeclaration &&\n",
            "replaced": "        boolean isVarTypeBetter = !isVarDeclaration || var == null || var.isTypeInferred();\n",
            "patch_type": "replace",
            "next_line_no": 549
        },
        {
            "file_name": "src/com/google/javascript/jscomp/TypeInference.java",
            "replaced_with": "            !resultType.isNullType() && !resultType.isVoidType();\n",
            "patch_type": "insert",
            "next_line_no": 550
        },
        {
            "file_name": "src/com/google/javascript/jscomp/TypeInference.java",
            "replaced_with": "          redeclareSimpleVar(scope, left, varType);\n        } else {\n",
            "patch_type": "insert",
            "next_line_no": 562
        }
    ]
}